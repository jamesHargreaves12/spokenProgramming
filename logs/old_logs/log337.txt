omega 2.2
predict: while index VARIABLE_2 and VARIABLE_3 VARIABLE_1 FUNCTION_CALL_4
predict: index NUMBER VARIABLE_0 if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 VARIABLE_4 . FUNCTION_CALL_8 index NUMBER VARIABLE_0 VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index index NUMBER VARIABLE_0 = . NUMBER if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_3 index NUMBER VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 and VARIABLE_3 NUMBER VARIABLE_7 + = NUMBER index FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while in ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_4 index FUNCTION_CALL_4 VARIABLE_1 while index and VARIABLE_3 FUNCTION_CALL_9 ( FUNCTION_CALL_4 ==
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 - VARIABLE_3 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + sublist VARIABLE_7 / NUMBER + return VARIABLE_3 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 NUMBER ) / return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + return NUMBER VARIABLE_2 in VARIABLE_0
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: index NUMBER VARIABLE_0 if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 == VARIABLE_3 < return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = NUMBER FUNCTION_CALL_4
predict: return index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 index NUMBER VARIABLE_0 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER index NUMBER VARIABLE_0 == NUMBER / VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 index FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 NUMBER
predict: return NUMBER VARIABLE_2 == VARIABLE_5 VARIABLE_2 == index VARIABLE_4 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index VARIABLE_1
predict: while VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 + VARIABLE_5 VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 NUMBER
predict: else if VARIABLE_5 FUNCTION_CALL_7 VARIABLE_3 VARIABLE_1 ( + = NUMBER VARIABLE_2 VARIABLE_4 + = NUMBER FUNCTION_CALL_4 VARIABLE_5 FUNCTION_CALL_5
predict: if else return index VARIABLE_2 index VARIABLE_4 VARIABLE_3 < return VARIABLE_3 index VARIABLE_5 index VARIABLE_8 = VARIABLE_1 index in FUNCTION_CALL_4 VARIABLE_2 + = NUMBER index VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 = VARIABLE_2 VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 +
predict: index VARIABLE_8 = VARIABLE_1 index else return in FUNCTION_CALL_4 = VARIABLE_0 - VARIABLE_2 + = NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 return VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_5 +
predict: if FUNCTION_CALL_10 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 VARIABLE_1 > return NUMBER NUMBER VARIABLE_7 VARIABLE_3 = index VARIABLE_6 VARIABLE_7 + = NUMBER VARIABLE_5 = index index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 index index VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 = VARIABLE_7 + = NUMBER index VARIABLE_4 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = VARIABLE_5 VARIABLE_2 VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0
predict: while index VARIABLE_5 VARIABLE_3 < FUNCTION_CALL_10 return VARIABLE_3 and index VARIABLE_6 VARIABLE_3 < FUNCTION_CALL_10 index FUNCTION_CALL_4
predict: return VARIABLE_3 if index index VARIABLE_5 VARIABLE_3 < index VARIABLE_2 index index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + = NUMBER index VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = FUNCTION_CALL_4 VARIABLE_5 index VARIABLE_3
predict: else return FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_7 + = NUMBER index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_6 + index VARIABLE_6 VARIABLE_2 + return NUMBER and index index VARIABLE_6 VARIABLE_6 + sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + NUMBER VARIABLE_0 index while in
predict: while in
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 = VARIABLE_6 < FUNCTION_CALL_10 VARIABLE_2 = VARIABLE_1 = VARIABLE_2 + VARIABLE_7 = while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_7 while in while VARIABLE_7 + + VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 = NUMBER VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_1
predict: return VARIABLE_1
predict: else return VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 / FUNCTION_CALL_5
predict: return VARIABLE_3 = VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 in FUNCTION_CALL_7 return VARIABLE_0 sublist VARIABLE_7 / NUMBER + return NUMBER in index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 - =
predict: for VARIABLE_2 in FUNCTION_CALL_2 NUMBER FUNCTION_CALL_5 VARIABLE_0 - * VARIABLE_1 in
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 in FUNCTION_CALL_5
predict: index VARIABLE_4 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * FUNCTION_CALL_4 index VARIABLE_5 VARIABLE_2 + VARIABLE_0 ( VARIABLE_0 = VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 * for VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 + VARIABLE_4 VARIABLE_0 return
predict: FUNCTION_CALL_4 VARIABLE_0 = NUMBER EMPTY_LIST =
predict: return VARIABLE_3 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index NUMBER VARIABLE_0 index VARIABLE_4 VARIABLE_2 = NUMBER <
predict: if > FUNCTION_CALL_4 + index VARIABLE_4 VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 FUNCTION_CALL_4 index NUMBER VARIABLE_0 = index in and FUNCTION_CALL_4
predict: return VARIABLE_0
predict: VARIABLE_0 index VARIABLE_3
predict: for VARIABLE_4 in
predict: if VARIABLE_4 > VARIABLE_2 VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4 =
predict: return
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 > VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = FUNCTION_CALL_7 >=
predict: return VARIABLE_2
Edit distance = 731omega 2.4
predict: while index VARIABLE_2 and VARIABLE_3 VARIABLE_1 FUNCTION_CALL_4
predict: index NUMBER VARIABLE_0 if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 VARIABLE_4 . FUNCTION_CALL_8 index NUMBER VARIABLE_0 VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index index NUMBER VARIABLE_0 = . NUMBER if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_3 index NUMBER VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 and VARIABLE_3 NUMBER VARIABLE_7 + = NUMBER index FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while in ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_4 index FUNCTION_CALL_4 VARIABLE_1 while index and VARIABLE_3 FUNCTION_CALL_9 ( FUNCTION_CALL_4 ==
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 - VARIABLE_3 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + sublist VARIABLE_7 / NUMBER + return VARIABLE_3 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 NUMBER ) / return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + return NUMBER VARIABLE_2 in VARIABLE_0
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: index NUMBER VARIABLE_0 if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 == VARIABLE_3 < return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = NUMBER FUNCTION_CALL_4
predict: return index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 index NUMBER VARIABLE_0 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER index NUMBER VARIABLE_0 == NUMBER / VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 index FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 NUMBER
predict: return NUMBER VARIABLE_2 == VARIABLE_5 VARIABLE_2 == index VARIABLE_4 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index VARIABLE_1
predict: while VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 + VARIABLE_5 VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 NUMBER
predict: else if VARIABLE_5 FUNCTION_CALL_7 VARIABLE_3 VARIABLE_1 ( + = NUMBER VARIABLE_2 VARIABLE_4 + = NUMBER FUNCTION_CALL_4 VARIABLE_5 FUNCTION_CALL_5
predict: if else return index VARIABLE_2 index VARIABLE_4 VARIABLE_3 < return VARIABLE_3 index VARIABLE_5 index VARIABLE_8 = VARIABLE_1 index in FUNCTION_CALL_4 VARIABLE_2 + = NUMBER index VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 = VARIABLE_2 VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 +
predict: index VARIABLE_8 = VARIABLE_1 index else return in FUNCTION_CALL_4 = VARIABLE_0 - VARIABLE_2 + = NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 return VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_5 +
predict: if FUNCTION_CALL_10 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 VARIABLE_1 > return NUMBER NUMBER VARIABLE_7 VARIABLE_3 = index VARIABLE_6 VARIABLE_7 + = NUMBER VARIABLE_5 = index index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 index index VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 = VARIABLE_7 + = NUMBER index VARIABLE_4 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = VARIABLE_5 VARIABLE_2 VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0
predict: while index VARIABLE_5 VARIABLE_3 < FUNCTION_CALL_10 return VARIABLE_3 and index VARIABLE_6 VARIABLE_3 < FUNCTION_CALL_10 index FUNCTION_CALL_4
predict: return VARIABLE_3 if index index VARIABLE_5 VARIABLE_3 < index VARIABLE_2 index index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + = NUMBER index VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = FUNCTION_CALL_4 VARIABLE_5 index VARIABLE_3
predict: else return FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_7 + = NUMBER index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_6 + index VARIABLE_6 VARIABLE_2 + return NUMBER and index index VARIABLE_6 VARIABLE_6 + sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + NUMBER VARIABLE_0 index while in
predict: while in
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 = VARIABLE_6 < FUNCTION_CALL_10 VARIABLE_2 = VARIABLE_1 = VARIABLE_2 + = VARIABLE_7 = while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_7 while in while VARIABLE_7 + + VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 = NUMBER VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_1
predict: return VARIABLE_1
predict: else return VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 / FUNCTION_CALL_5
predict: return VARIABLE_3 = VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 in FUNCTION_CALL_7 return VARIABLE_0 sublist VARIABLE_7 / NUMBER + return NUMBER in index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 - =
predict: for VARIABLE_2 in FUNCTION_CALL_2 NUMBER FUNCTION_CALL_5 VARIABLE_0 - * VARIABLE_1 in
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 in FUNCTION_CALL_5
predict: index VARIABLE_4 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * FUNCTION_CALL_4 index VARIABLE_5 VARIABLE_2 + VARIABLE_0 ( VARIABLE_0 = VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 * for VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 + VARIABLE_4 VARIABLE_0 return
predict: FUNCTION_CALL_4 VARIABLE_0 = NUMBER EMPTY_LIST =
predict: return VARIABLE_3 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index NUMBER VARIABLE_0 index VARIABLE_4 VARIABLE_2 = NUMBER <
predict: if > FUNCTION_CALL_4 + index VARIABLE_4 VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 FUNCTION_CALL_4 index NUMBER VARIABLE_0 = index in and FUNCTION_CALL_4
predict: return VARIABLE_0
predict: VARIABLE_0 index VARIABLE_3
predict: for VARIABLE_4 in
predict: if VARIABLE_4 > VARIABLE_2 VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4 =
predict: return
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 > VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = FUNCTION_CALL_7 >=
predict: return VARIABLE_2
Edit distance = 732omega 2.1
predict: while index VARIABLE_2 and VARIABLE_3 VARIABLE_1 FUNCTION_CALL_4
predict: index NUMBER VARIABLE_0 if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 VARIABLE_4 . FUNCTION_CALL_8 index NUMBER VARIABLE_0 VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index index NUMBER VARIABLE_0 = . NUMBER if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_3 index NUMBER VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 and VARIABLE_3 NUMBER VARIABLE_7 + = NUMBER index FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while in ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_4 index FUNCTION_CALL_4 VARIABLE_1 while index and VARIABLE_3 FUNCTION_CALL_9 ( FUNCTION_CALL_4 ==
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 - VARIABLE_3 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + sublist VARIABLE_7 / NUMBER + return VARIABLE_3 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 NUMBER ) / return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + return NUMBER VARIABLE_2 in VARIABLE_0
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: index NUMBER VARIABLE_0 if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 == VARIABLE_3 < return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = NUMBER FUNCTION_CALL_4
predict: return index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 index NUMBER VARIABLE_0 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER index NUMBER VARIABLE_0 == NUMBER / VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 index FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 NUMBER
predict: return NUMBER VARIABLE_2 == VARIABLE_5 VARIABLE_2 == index VARIABLE_4 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index VARIABLE_1
predict: while VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 + VARIABLE_5 VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 NUMBER
predict: else if VARIABLE_5 FUNCTION_CALL_7 VARIABLE_3 VARIABLE_1 ( + = NUMBER VARIABLE_2 VARIABLE_4 + = NUMBER FUNCTION_CALL_4 VARIABLE_5 FUNCTION_CALL_5
predict: if else return index VARIABLE_2 index VARIABLE_4 VARIABLE_3 < return VARIABLE_3 index VARIABLE_5 index VARIABLE_8 = VARIABLE_1 index in FUNCTION_CALL_4 VARIABLE_2 + = NUMBER index VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 = VARIABLE_2 VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 +
predict: index VARIABLE_8 = VARIABLE_1 index else return in FUNCTION_CALL_4 = VARIABLE_0 - VARIABLE_2 + = NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 return VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_5 +
predict: if FUNCTION_CALL_10 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 VARIABLE_1 > return NUMBER NUMBER VARIABLE_7 VARIABLE_3 = index VARIABLE_6 VARIABLE_7 + = NUMBER VARIABLE_5 = index index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 index index VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 = VARIABLE_7 + = NUMBER index VARIABLE_4 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = VARIABLE_5 VARIABLE_2 VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0
predict: while index VARIABLE_5 VARIABLE_3 < FUNCTION_CALL_10 return VARIABLE_3 and index VARIABLE_6 VARIABLE_3 < FUNCTION_CALL_10 index FUNCTION_CALL_4
predict: return VARIABLE_3 if index index VARIABLE_5 VARIABLE_3 < index VARIABLE_2 index index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + = NUMBER index VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = FUNCTION_CALL_4 VARIABLE_5 index VARIABLE_3
predict: else return FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_7 + = NUMBER index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_6 + index VARIABLE_6 VARIABLE_2 + return NUMBER and index index VARIABLE_6 VARIABLE_6 + sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + NUMBER VARIABLE_0 index while in
predict: while in
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 = VARIABLE_6 < FUNCTION_CALL_10 VARIABLE_2 = VARIABLE_1 = VARIABLE_2 + VARIABLE_7 = while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_7 while in while VARIABLE_7 + + VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 = NUMBER VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_1
predict: return VARIABLE_1
predict: else return VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_2 / FUNCTION_CALL_5
predict: return VARIABLE_3 = VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 in FUNCTION_CALL_7 return VARIABLE_0 sublist VARIABLE_7 / NUMBER + return NUMBER in index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 - =
predict: for VARIABLE_2 in FUNCTION_CALL_2 NUMBER FUNCTION_CALL_5 VARIABLE_0 - * VARIABLE_1 in
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 in FUNCTION_CALL_5
predict: index VARIABLE_4 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * FUNCTION_CALL_4 index VARIABLE_5 VARIABLE_2 + VARIABLE_0 ( VARIABLE_0 = VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 * for VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 + VARIABLE_4 VARIABLE_0 return
predict: FUNCTION_CALL_4 VARIABLE_0 = NUMBER EMPTY_LIST =
predict: return VARIABLE_3 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index NUMBER VARIABLE_0 index VARIABLE_4 VARIABLE_2 = NUMBER <
predict: if > FUNCTION_CALL_4 + index VARIABLE_4 VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 FUNCTION_CALL_4 index NUMBER VARIABLE_0 = index in and FUNCTION_CALL_4
predict: return VARIABLE_0
predict: VARIABLE_0 index VARIABLE_3
predict: for VARIABLE_4 in
predict: if VARIABLE_4 > VARIABLE_2 VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4 =
predict: return
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 > VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = FUNCTION_CALL_7 >=
predict: return VARIABLE_2
Edit distance = 731
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: for index VARIABLE_4 VARIABLE_1 VARIABLE_3 sublist in FUNCTION_CALL_7 NUMBER index VARIABLE_4 VARIABLE_1 or VARIABLE_0 < VARIABLE_4 == index VARIABLE_6 = VARIABLE_8 index VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 index VARIABLE_1 VARIABLE_1 + + index VARIABLE_4 VARIABLE_1 if VARIABLE_7 VARIABLE_1 = FUNCTION_CALL_4 true return false return FUNCTION_CALL_3 VARIABLE_1 = FUNCTION_CALL_4 != VARIABLE_0 index VARIABLE_1
predict: index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_8 index VARIABLE_1 VARIABLE_1 + + VARIABLE_2 VARIABLE_1 VARIABLE_7 VARIABLE_0 > index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 = VARIABLE_6 else return VARIABLE_8 index VARIABLE_1 VARIABLE_1 + + VARIABLE_2 index VARIABLE_8 VARIABLE_0 > index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 = VARIABLE_6 NUMBER VARIABLE_1 VARIABLE_7 VARIABLE_2 < VARIABLE_3 if VARIABLE_8 and VARIABLE_3 != VARIABLE_5 VARIABLE_1 NUMBER VARIABLE_6 VARIABLE_3 in VARIABLE_2 and VARIABLE_3 != VARIABLE_5 VARIABLE_1 FUNCTION_CALL_10 index for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_5 NUMBER VARIABLE_3 VARIABLE_2 = VARIABLE_7 VARIABLE_2 VARIABLE_8 index VARIABLE_4 VARIABLE_1 return FUNCTION_CALL_6 in VARIABLE_2 VARIABLE_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_8 VARIABLE_5 VARIABLE_2 in VARIABLE_2 VARIABLE_4 == FUNCTION_CALL_8 for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_10 VARIABLE_0 > VARIABLE_1 VARIABLE_1 = VARIABLE_5 =
predict: return in VARIABLE_2 FUNCTION_CALL_5 if VARIABLE_3 > VARIABLE_1 for < EMPTY_LIST VARIABLE_0 FUNCTION_CALL_3
predict: index VARIABLE_4 VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * NUMBER return VARIABLE_0 * in FUNCTION_CALL_7 NUMBER return VARIABLE_0 VARIABLE_2 in
predict: return VARIABLE_0 == FUNCTION_CALL_2
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 return VARIABLE_0 - FUNCTION_CALL_5
predict: VARIABLE_2 = NUMBER VARIABLE_0 = VARIABLE_0 < VARIABLE_3 + VARIABLE_2 = NUMBER return VARIABLE_3 = VARIABLE_1 = NUMBER while
predict: if VARIABLE_7 VARIABLE_4 VARIABLE_0 VARIABLE_3 sublist or VARIABLE_0 < or sublist in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_2 VARIABLE_4 VARIABLE_0 VARIABLE_1 in STRING_CONST NUMBER STRING_CONST if FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 STRING_CONST FUNCTION_CALL_4 STRING_CONST FUNCTION_CALL_3 VARIABLE_0 NUMBER = in FUNCTION_CALL_7 NUMBER return FUNCTION_CALL_2 VARIABLE_4 VARIABLE_0 STRING_CONST if FUNCTION_CALL_3 VARIABLE_0 == in FUNCTION_CALL_7 NUMBER return FUNCTION_CALL_2 else if VARIABLE_0 FUNCTION_CALL_3 VARIABLE_0 NUMBER if VARIABLE_2 != in FUNCTION_CALL_7 NUMBER return FUNCTION_CALL_2 VARIABLE_4 VARIABLE_0 NUMBER if VARIABLE_2 != in FUNCTION_CALL_7 NUMBER return FUNCTION_CALL_2 if VARIABLE_0 NUMBER
predict: VARIABLE_1 = NUMBER FUNCTION_CALL_4 VARIABLE_0 > NUMBER VARIABLE_2 > VARIABLE_1 return VARIABLE_1 in VARIABLE_2 = NUMBER if while
predict: index VARIABLE_4 VARIABLE_1 index VARIABLE_2 = sublist VARIABLE_1 : - sublist index VARIABLE_2 index sublist index VARIABLE_2 VARIABLE_3 VARIABLE_2 = VARIABLE_2 + index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 = VARIABLE_0 index VARIABLE_3
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_0 index VARIABLE_2 + +
predict: = FUNCTION_CALL_3 return FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 sublist VARIABLE_4 VARIABLE_0 index VARIABLE_4 VARIABLE_1 VARIABLE_2 + VARIABLE_7 VARIABLE_3 VARIABLE_4 VARIABLE_0 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 VARIABLE_0 VARIABLE_2 + VARIABLE_2 = VARIABLE_0 =
predict: if index VARIABLE_2 = return return false else return if return true if else return for index VARIABLE_4 VARIABLE_1 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER VARIABLE_4 + VARIABLE_2 + FUNCTION_CALL_3 index VARIABLE_6 = VARIABLE_8 index VARIABLE_4 VARIABLE_0 return false return true VARIABLE_1 = NUMBER VARIABLE_5 VARIABLE_2 = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 if VARIABLE_1
predict: VARIABLE_0 <= FUNCTION_CALL_3 VARIABLE_1 != VARIABLE_0 = NUMBER return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1 + = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2 = NUMBER while
Edit distance = 487
predict: VARIABLE_0 * NUMBER
predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 + VARIABLE_1 * NUMBER return VARIABLE_0 + +
predict: for index VARIABLE_4 VARIABLE_1 in return VARIABLE_1 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 in FUNCTION_CALL_7 NUMBER return VARIABLE_1 if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_4 VARIABLE_0 VARIABLE_4 < VARIABLE_3 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return VARIABLE_1 return false return true index FUNCTION_CALL_4 VARIABLE_0 - index VARIABLE_4 VARIABLE_1 index VARIABLE_5 VARIABLE_2 != VARIABLE_0 index VARIABLE_1 in VARIABLE_0 index
predict: return for VARIABLE_2 return VARIABLE_1 and for index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 + VARIABLE_3 in VARIABLE_0 for VARIABLE_2 =
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER return VARIABLE_0 index FUNCTION_CALL_2 / NUMBER else FUNCTION_CALL_3
predict: VARIABLE_1 = EMPTY_LIST for VARIABLE_3 in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 = VARIABLE_1 return VARIABLE_1 FUNCTION_CALL_5
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 in VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 in FUNCTION_CALL_4 VARIABLE_1 in VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 index FUNCTION_CALL_5 < ( in FUNCTION_CALL_4 FUNCTION_CALL_5
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER ) / NUMBER
predict: true return VARIABLE_2 VARIABLE_1 . FUNCTION_CALL_8 for in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if in return false return index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 != index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 if if VARIABLE_3 == and VARIABLE_3 VARIABLE_0 + for VARIABLE_2 index VARIABLE_1 VARIABLE_1 + + VARIABLE_2 - - VARIABLE_2 = NUMBER for / NUMBER FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 =
predict: return VARIABLE_5 NUMBER FUNCTION_CALL_3 VARIABLE_1
predict: VARIABLE_4 VARIABLE_0 VARIABLE_2 = while index VARIABLE_4 VARIABLE_1 index VARIABLE_1 != VARIABLE_0 EMPTY_LIST in NUMBER if FUNCTION_CALL_4 in VARIABLE_1 VARIABLE_1 . if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 VARIABLE_0 = in > VARIABLE_1 if FUNCTION_CALL_4
predict: for VARIABLE_4 VARIABLE_0 VARIABLE_2 VARIABLE_0 = index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 VARIABLE_0 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 in FUNCTION_CALL_7 NUMBER and VARIABLE_4 VARIABLE_0 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_2 VARIABLE_0 = in FUNCTION_CALL_7 NUMBER if VARIABLE_3 == if FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if in ( VARIABLE_0 if FUNCTION_CALL_4 return false else return true VARIABLE_1 + + if FUNCTION_CALL_2 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_3 STRING_CONST if ( if FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = VARIABLE_0 FUNCTION_CALL_3 NUMBER else if VARIABLE_1 + + if FUNCTION_CALL_2 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_3 STRING_CONST if ( if FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = VARIABLE_0 FUNCTION_CALL_3 NUMBER else if VARIABLE_0 + + STRING_CONST
predict: index VARIABLE_4 VARIABLE_1 VARIABLE_2 VARIABLE_0 = in FUNCTION_CALL_7 NUMBER if VARIABLE_3 == for VARIABLE_1 return VARIABLE_2 in FUNCTION_CALL_4 VARIABLE_1 + VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: VARIABLE_3 = NUMBER for VARIABLE_2 in VARIABLE_0 + + = VARIABLE_1 index VARIABLE_3 in FUNCTION_CALL_4 NUMBER return VARIABLE_3
predict: return VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 return and VARIABLE_3 VARIABLE_0 NUMBER == index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_0 + for VARIABLE_4 in in VARIABLE_0 index VARIABLE_2 for VARIABLE_2 VARIABLE_1 VARIABLE_8
Edit distance = 379
predict: index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_3 > for VARIABLE_3 in VARIABLE_0 if VARIABLE_3 VARIABLE_2 = EMPTY_LIST
predict: VARIABLE_0 + + if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 - = false VARIABLE_2 return VARIABLE_1 = true for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 /
predict: VARIABLE_2 = NUMBER for VARIABLE_1 in VARIABLE_0 + VARIABLE_1 index VARIABLE_2 in VARIABLE_0 index FUNCTION_CALL_1 return
predict: if index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER VARIABLE_3 NUMBER return false return if index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER true index VARIABLE_4 VARIABLE_4 + + else VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_3 for index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 index VARIABLE_6 = VARIABLE_8 index VARIABLE_4 VARIABLE_0 and VARIABLE_3 NUMBER true NUMBER index VARIABLE_4 VARIABLE_4 + + else if VARIABLE_7 NUMBER and for index index in in NUMBER index VARIABLE_2 + NUMBER continue and VARIABLE_3 ( else return false return VARIABLE_1 . VARIABLE_0 if FUNCTION_CALL_6 in ( for
predict: VARIABLE_2 = NUMBER for VARIABLE_3 in VARIABLE_0 + = VARIABLE_1 index VARIABLE_3 return VARIABLE_2
predict: VARIABLE_1 = NUMBER for VARIABLE_2 + VARIABLE_0 return
predict: return VARIABLE_4 VARIABLE_0 VARIABLE_1 + + NUMBER for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: return in NUMBER VARIABLE_4 NUMBER index VARIABLE_6 < NUMBER and in and VARIABLE_3 VARIABLE_0 VARIABLE_2 NUMBER and for in VARIABLE_0 return FUNCTION_CALL_6 else in return FUNCTION_CALL_6 for VARIABLE_4 in VARIABLE_3 > VARIABLE_7 + NUMBER VARIABLE_5 index if in for VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 EMPTY_LIST VARIABLE_2 . index VARIABLE_4 VARIABLE_1 = NUMBER VARIABLE_2 EMPTY_LIST VARIABLE_2 . VARIABLE_4 VARIABLE_0 = VARIABLE_2 in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index = <= VARIABLE_4 = return or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return FUNCTION_CALL_6 if if VARIABLE_3 == index VARIABLE_6 < VARIABLE_0 index if FUNCTION_CALL_7
predict: for VARIABLE_2 in VARIABLE_0 = VARIABLE_1 + return
predict: VARIABLE_1 = NUMBER for VARIABLE_2 in VARIABLE_0 if VARIABLE_2 > VARIABLE_1 = NUMBER VARIABLE_2 VARIABLE_0 index VARIABLE_3 in VARIABLE_0 index FUNCTION_CALL_1 return
predict: for index VARIABLE_4 VARIABLE_1 index in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_2 = VARIABLE_4 VARIABLE_0 = for in VARIABLE_4 VARIABLE_0 VARIABLE_0 + if FUNCTION_CALL_4 in FUNCTION_CALL_7 NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false return = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and if VARIABLE_1 VARIABLE_0 STRING_CONST if VARIABLE_0 + if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false return = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and if VARIABLE_1 VARIABLE_0 STRING_CONST if VARIABLE_0 + if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false = VARIABLE_1 STRING_CONST
predict: VARIABLE_0 if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index VARIABLE_2 = NUMBER return false return VARIABLE_0 = NUMBER return true - NUMBER for VARIABLE_2 > VARIABLE_1 VARIABLE_1 . FUNCTION_CALL_2 VARIABLE_0 index
predict: if index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER or true if VARIABLE_7 VARIABLE_4 VARIABLE_0 VARIABLE_0 % index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER or VARIABLE_7 VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_6 < return return false for index VARIABLE_4 VARIABLE_1 in VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 in FUNCTION_CALL_4 true if else return return false return VARIABLE_1 if VARIABLE_0 % NUMBER FUNCTION_CALL_5 and sublist VARIABLE_7 / NUMBER + NUMBER FUNCTION_CALL_5 NUMBER FUNCTION_CALL_5 VARIABLE_1 = FUNCTION_CALL_4 and NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return
Edit distance = 450
predict: return FUNCTION_CALL_6 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = if FUNCTION_CALL_6 index index VARIABLE_4 VARIABLE_1 true else for for VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 + index VARIABLE_3 sublist return true in if VARIABLE_2 != if index VARIABLE_1 - index VARIABLE_3 VARIABLE_1 index VARIABLE_3 VARIABLE_0 = for VARIABLE_4 sublist index VARIABLE_4 VARIABLE_1 VARIABLE_2 FUNCTION_CALL_11 NUMBER VARIABLE_0 + = NUMBER VARIABLE_4
predict: VARIABLE_0 * NUMBER * NUMBER
predict: if VARIABLE_0 == NUMBER or else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -
predict: and return in in FUNCTION_CALL_7 NUMBER VARIABLE_3 NUMBER for index VARIABLE_6 VARIABLE_4 . index index VARIABLE_2 = index VARIABLE_3 + VARIABLE_1 index in NUMBER for VARIABLE_2 VARIABLE_0 =
predict: return FUNCTION_CALL_6 VARIABLE_1 + = VARIABLE_0 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER return FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER true else for VARIABLE_5 return else in in else in VARIABLE_2 + + index VARIABLE_3 index VARIABLE_3 index VARIABLE_2 = VARIABLE_5 true else index VARIABLE_4 + index VARIABLE_4 + for VARIABLE_4 index VARIABLE_2 = VARIABLE_5 NUMBER else index VARIABLE_3 if VARIABLE_2 == VARIABLE_4 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if in index VARIABLE_4 + index VARIABLE_4 + for VARIABLE_4 index VARIABLE_2 = VARIABLE_5 else index VARIABLE_4 + index VARIABLE_6 = if in VARIABLE_2 + + index VARIABLE_3 index VARIABLE_3 index VARIABLE_2 = index VARIABLE_6 VARIABLE_5 NUMBER NUMBER VARIABLE_7 + index VARIABLE_6 = index in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_7 + VARIABLE_8 == NUMBER VARIABLE_1 =
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 NUMBER return false for VARIABLE_1 return true if FUNCTION_CALL_5
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 index index VARIABLE_2 return for VARIABLE_4 in VARIABLE_1 + = VARIABLE_0 VARIABLE_4 VARIABLE_3 index VARIABLE_4 VARIABLE_1 true else VARIABLE_0 VARIABLE_5 VARIABLE_4 VARIABLE_3 index VARIABLE_2 else for VARIABLE_4 in VARIABLE_4 VARIABLE_3 else index VARIABLE_3 VARIABLE_1 + = VARIABLE_0 VARIABLE_4 VARIABLE_3 index VARIABLE_4 VARIABLE_1 else VARIABLE_5 VARIABLE_2 != VARIABLE_4 VARIABLE_3 and for VARIABLE_4 in VARIABLE_2 != VARIABLE_0 index VARIABLE_3 + + if VARIABLE_0 for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 VARIABLE_0
predict: VARIABLE_0 = if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 . FUNCTION_CALL_5 index index VARIABLE_4 VARIABLE_1 index VARIABLE_2 index VARIABLE_2 = while or VARIABLE_0 < VARIABLE_1 + = VARIABLE_0 if if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 index VARIABLE_2 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER return true in + VARIABLE_1 return false return true
