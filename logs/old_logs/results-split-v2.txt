predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 * NUMBER
predict: return VARIABLE_0 + VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_0 . NUMBER VARIABLE_1 +
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1
predict: return VARIABLE_2
predict: VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER >
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: index for VARIABLE_5 VARIABLE_1 and NUMBER return VARIABLE_0 VARIABLE_0 NUMBER VARIABLE_1 . and VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 != EMPTY_LIST FUNCTION_CALL_4 VARIABLE_1
predict: index if FUNCTION_CALL_4 index VARIABLE_1 > return VARIABLE_0 FUNCTION_CALL_4 STRING_CONST in VARIABLE_1 FUNCTION_CALL_3 FUNCTION_CALL_4 VARIABLE_0 + VARIABLE_1 . FUNCTION_CALL_4 VARIABLE_0 = NUMBER
predict: = VARIABLE_1 = NUMBER
predict: while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5
predict: return VARIABLE_0 if else VARIABLE_0 index in VARIABLE_0 = VARIABLE_1 = NUMBER >
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_1
predict: > = VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3 NUMBER VARIABLE_1
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 index VARIABLE_2 VARIABLE_0 + +
predict: return VARIABLE_1
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 + = VARIABLE_2
predict: return VARIABLE_1
Edit distance = 87
predict: VARIABLE_1 = NUMBER VARIABLE_0
predict: for VARIABLE_2 VARIABLE_0 VARIABLE_1 VARIABLE_1 + VARIABLE_2 VARIABLE_3
predict: return VARIABLE_1
predict: return FUNCTION_CALL_3 VARIABLE_0 FUNCTION_CALL_9 VARIABLE_1
predict: = VARIABLE_2 = NUMBER
predict: index VARIABLE_1 in FUNCTION_CALL_4 in in FUNCTION_CALL_4 index VARIABLE_1 and = VARIABLE_2 +
predict: return VARIABLE_2
predict: for VARIABLE_2 VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_0 = VARIABLE_0 NUMBER
predict: index VARIABLE_2 for in index VARIABLE_1 + VARIABLE_0 and in return NUMBER VARIABLE_0 index for FUNCTION_CALL_4 VARIABLE_0 VARIABLE_0 NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 in FUNCTION_CALL_4 in in return VARIABLE_0 VARIABLE_2 + = VARIABLE_1 VARIABLE_1 VARIABLE_3 in < FUNCTION_CALL_3
predict: return VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = = VARIABLE_2 = NUMBER
predict: return for in return VARIABLE_0 VARIABLE_1 + VARIABLE_2 FUNCTION_CALL_4 VARIABLE_3 and VARIABLE_2 VARIABLE_3 = VARIABLE_1 VARIABLE_4 in <
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 for in return VARIABLE_0 for VARIABLE_5 index VARIABLE_2 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index for VARIABLE_5 index VARIABLE_2 + VARIABLE_3 + VARIABLE_3 VARIABLE_0 index VARIABLE_1
predict: return VARIABLE_2
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_2 VARIABLE_3 VARIABLE_1 VARIABLE_3 in VARIABLE_0
predict: return VARIABLE_2
predict: return VARIABLE_3 in FUNCTION_CALL_4 in return VARIABLE_0 index VARIABLE_2 in index VARIABLE_1 . FUNCTION_CALL_5 + + index VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_4 = VARIABLE_0 = NUMBER VARIABLE_2 = NUMBER VARIABLE_5 FUNCTION_CALL_7
predict: while index VARIABLE_5 else VARIABLE_0 <= return return VARIABLE_3 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index for VARIABLE_5 return VARIABLE_0 index index VARIABLE_5 and index VARIABLE_2 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index VARIABLE_2 + VARIABLE_3 VARIABLE_1
predict: for VARIABLE_0 in FUNCTION_CALL_15 NUMBER FUNCTION_CALL_3 VARIABLE_0 + NUMBER VARIABLE_0
predict: return VARIABLE_0 in FUNCTION_CALL_4 VARIABLE_1 < in return NUMBER return VARIABLE_0 VARIABLE_2 < return NUMBER return VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 STRING_CONST FUNCTION_CALL_5
predict: return VARIABLE_0 if else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index return NUMBER or return VARIABLE_0 else VARIABLE_0 <= return VARIABLE_2 VARIABLE_4 = index return NUMBER and + NUMBER
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 != NUMBER FUNCTION_CALL_3 VARIABLE_0 FUNCTION_CALL_2 NUMBER
predict: return VARIABLE_0 else if FUNCTION_CALL_2 return NUMBER else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = return NUMBER FUNCTION_CALL_3 STRING_CONST if return VARIABLE_0 FUNCTION_CALL_2 return NUMBER else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index VARIABLE_1 NUMBER FUNCTION_CALL_3 STRING_CONST index VARIABLE_1 + and STRING_CONST
Edit distance = 235
predict: for VARIABLE_0 = NUMBER VARIABLE_0 < VARIABLE_0 + +
predict: if VARIABLE_0 % NUMBER == NUMBER VARIABLE_0 = NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST %
predict: else if VARIABLE_0 % NUMBER == NUMBER == FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % = NUMBER == FUNCTION_CALL_2 STRING_CONST
predict: else FUNCTION_CALL_2 VARIABLE_0
predict: for VARIABLE_0 = NUMBER
predict: return VARIABLE_0 if VARIABLE_5 FUNCTION_CALL_3 return NUMBER in return NUMBER and return VARIABLE_0 FUNCTION_CALL_3 in FUNCTION_CALL_4 NUMBER == NUMBER FUNCTION_CALL_4 + + index STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 FUNCTION_CALL_3 in FUNCTION_CALL_4 NUMBER NUMBER FUNCTION_CALL_4 + + ( index STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 FUNCTION_CALL_3 in FUNCTION_CALL_4 NUMBER NUMBER FUNCTION_CALL_4 + + ( index STRING_CONST
predict: else FUNCTION_CALL_4 + + ( VARIABLE_0 NUMBER
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 in
predict: if FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 NUMBER
predict: return false
predict: return true
predict: if VARIABLE_0 = NUMBER
predict: return false else
predict: if VARIABLE_0 = NUMBER
predict: return true else
predict: index VARIABLE_1 for in return NUMBER = for VARIABLE_5 FUNCTION_CALL_3 in VARIABLE_0 + VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: VARIABLE_0 = true
predict: return VARIABLE_2 VARIABLE_4 = for index VARIABLE_1 index return NUMBER index VARIABLE_1 VARIABLE_2 < index VARIABLE_2 / return NUMBER index VARIABLE_1 + + return VARIABLE_0 and return VARIABLE_2 VARIABLE_4 = VARIABLE_2 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_1 != NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER
predict: while VARIABLE_2 VARIABLE_0 +
predict: if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER +
predict: return false VARIABLE_2 = VARIABLE_2 + NUMBER return true
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_0 * VARIABLE_1 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_3 = VARIABLE_0 NUMBER
predict: while VARIABLE_0 VARIABLE_1 = VARIABLE_3 = VARIABLE_2 + VARIABLE_1 return VARIABLE_3 = VARIABLE_2 VARIABLE_3 VARIABLE_3 < VARIABLE_4
predict: VARIABLE_0 ==
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 = VARIABLE_1 VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: if VARIABLE_0 NUMBER NUMBER
predict: return
predict: else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1 in
predict: return VARIABLE_0
predict: if VARIABLE_0 = NUMBER
predict: return return NUMBER else index VARIABLE_2 + = VARIABLE_0 . * - NUMBER FUNCTION_CALL_2 VARIABLE_0
predict: return FUNCTION_CALL_4
predict: VARIABLE_4 = VARIABLE_0 NUMBER +
predict: index in FUNCTION_CALL_5 for VARIABLE_1 VARIABLE_0 * VARIABLE_0 == for VARIABLE_0 NUMBER VARIABLE_1 > NUMBER while VARIABLE_1 VARIABLE_2 VARIABLE_1
predict: return VARIABLE_0
predict: if VARIABLE_0 = NUMBER
predict: return else
predict: return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER NUMBER
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
Edit distance = 194
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 + = VARIABLE_1 and VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + + = VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = VARIABLE_1 = NUMBER = VARIABLE_0
predict: index VARIABLE_1 for in FUNCTION_CALL_15 return NUMBER and index VARIABLE_2 + VARIABLE_0 VARIABLE_1 VARIABLE_0 in VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER
predict: while index VARIABLE_1 VARIABLE_0 > return NUMBER VARIABLE_1 VARIABLE_1 return VARIABLE_0 index while VARIABLE_1 in NUMBER
predict: return VARIABLE_0
predict: return VARIABLE_2 VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER
predict: if != VARIABLE_2 in VARIABLE_0 != index VARIABLE_1 - NUMBER VARIABLE_0 index VARIABLE_2 - !=
predict: return false + VARIABLE_1
predict: return true
predict: for VARIABLE_1 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER
predict: if != VARIABLE_1 in VARIABLE_0 = VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0 - NUMBER - != !=
predict: return false
predict: return true
predict: VARIABLE_1 VARIABLE_0 =
predict: for VARIABLE_2 FUNCTION_CALL_2 NUMBER VARIABLE_1
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2 ==
predict: return false VARIABLE_3 =
predict: return true
predict: NUMBER / NUMBER FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 =
predict: index in index VARIABLE_2 VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_1 return NUMBER NUMBER == for VARIABLE_2 NUMBER VARIABLE_2 + = VARIABLE_1 VARIABLE_2 <=
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 ==
predict: return index false in if and index FUNCTION_CALL_5 ==
predict: return true
predict: VARIABLE_1 = VARIABLE_3 = FUNCTION_CALL_6
predict: return in in FUNCTION_CALL_4 NUMBER + return VARIABLE_3 sublist return NUMBER return VARIABLE_3 - VARIABLE_1 index VARIABLE_0 = return index VARIABLE_1 VARIABLE_2 = VARIABLE_1 = NUMBER VARIABLE_4
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: return true
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 +
predict: sublist if return VARIABLE_0 return VARIABLE_3 VARIABLE_0 = EMPTY_LIST & return VARIABLE_0 sublist FUNCTION_CALL_5 return VARIABLE_0 - return VARIABLE_3 index VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: for VARIABLE_1 = NUMBER FUNCTION_CALL_3 VARIABLE_0 . FUNCTION_CALL_3 - NUMBER ) / (
predict: if VARIABLE_0 VARIABLE_1 index != VARIABLE_0 VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 index
predict: return false
predict: return true
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 +
predict: sublist if return VARIABLE_0 return VARIABLE_3 VARIABLE_0 = EMPTY_LIST & return VARIABLE_0 sublist FUNCTION_CALL_5 return VARIABLE_0 - return VARIABLE_3 index VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1 index VARIABLE_3
predict: VARIABLE_1 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 index in VARIABLE_0 index VARIABLE_3 VARIABLE_1 index in VARIABLE_0 = =
predict: return VARIABLE_0
Edit distance = 217
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 VARIABLE_1 =
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 index VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_0
predict: index VARIABLE_1 = NUMBER VARIABLE_0 index VARIABLE_3 = and VARIABLE_0 index VARIABLE_3 VARIABLE_2 = VARIABLE_0 index = VARIABLE_2 = VARIABLE_0 index VARIABLE_1
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + +
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +
predict: return VARIABLE_0 if index index VARIABLE_2 VARIABLE_0 VARIABLE_2 < index VARIABLE_2 + NUMBER
predict: else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: if VARIABLE_0 index VARIABLE_2 > VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_6 index VARIABLE_2 + NUMBER
predict: return VARIABLE_0
predict: VARIABLE_7 = VARIABLE_1 index VARIABLE_4
predict: if VARIABLE_7 == NUMBER or NUMBER
predict: return VARIABLE_4
predict: return VARIABLE_3 else return in FUNCTION_CALL_2 EMPTY_LIST VARIABLE_2 == index VARIABLE_5 VARIABLE_0 == NUMBER VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_7 index NUMBER + NUMBER / NUMBER VARIABLE_7 index index in index VARIABLE_4 VARIABLE_1 = / NUMBER VARIABLE_7 index NUMBER VARIABLE_0 index in index VARIABLE_4
predict: while index VARIABLE_2 = < VARIABLE_1 VARIABLE_1 VARIABLE_1 VARIABLE_0 <= VARIABLE_3 index
predict: return VARIABLE_0 if VARIABLE_1 VARIABLE_0 > VARIABLE_1 = NUMBER VARIABLE_2 + NUMBER VARIABLE_2 index VARIABLE_5 VARIABLE_2 VARIABLE_3 index FUNCTION_CALL_12 VARIABLE_0 index VARIABLE_1 < index VARIABLE_2 VARIABLE_3 VARIABLE_3 VARIABLE_1 < = VARIABLE_2 <= VARIABLE_1
predict: index else return FUNCTION_CALL_12 index VARIABLE_1 index VARIABLE_0 in while + NUMBER VARIABLE_0 = VARIABLE_0 VARIABLE_5
predict: return VARIABLE_5
predict: if FUNCTION_CALL_6 VARIABLE_4 NUMBER or NUMBER
predict: return VARIABLE_4
predict: return NUMBER else return VARIABLE_0 VARIABLE_1 VARIABLE_1 / FUNCTION_CALL_7 FUNCTION_CALL_6 NUMBER VARIABLE_4
predict: return VARIABLE_3
predict: index VARIABLE_5 FUNCTION_CALL_1 = and VARIABLE_3 = VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_1 = NUMBER return VARIABLE_3 VARIABLE_0 VARIABLE_5 index index VARIABLE_4 FUNCTION_CALL_1 NUMBER = and VARIABLE_7 index and index VARIABLE_6 VARIABLE_1 = VARIABLE_4 and VARIABLE_1 index index and VARIABLE_2 . = VARIABLE_4 and VARIABLE_1 FUNCTION_CALL_12 VARIABLE_4 index
predict: for VARIABLE_9 NUMBER VARIABLE_5
predict: index if index VARIABLE_6 VARIABLE_1 in and index VARIABLE_6 + VARIABLE_1 and VARIABLE_7 index NUMBER index VARIABLE_9 VARIABLE_1 = else index VARIABLE_6 + and index VARIABLE_2 VARIABLE_6 NUMBER FUNCTION_CALL_12 VARIABLE_8 VARIABLE_1 = index VARIABLE_1 VARIABLE_7 VARIABLE_1 VARIABLE_2 =
predict: return VARIABLE_3
predict: <= NUMBER VARIABLE_2 FUNCTION_CALL_7 if
predict: if VARIABLE_0 =
predict: return index VARIABLE_2 VARIABLE_1 = VARIABLE_1 index VARIABLE_4 VARIABLE_1 = VARIABLE_1 return FUNCTION_CALL_2 VARIABLE_0 VARIABLE_2 index index VARIABLE_4 index < VARIABLE_1 index VARIABLE_2 VARIABLE_0 VARIABLE_1 and VARIABLE_3 VARIABLE_0 index index and VARIABLE_3 FUNCTION_CALL_5 in VARIABLE_0 = else return index VARIABLE_1 in = index VARIABLE_4 VARIABLE_1 > VARIABLE_5 if index VARIABLE_2 in index VARIABLE_5 for EMPTY_LIST VARIABLE_0 VARIABLE_1 EMPTY_LIST = VARIABLE_0 index VARIABLE_2 in VARIABLE_5
predict: if NUMBER or VARIABLE_0 == NUMBER VARIABLE_0
predict: return return VARIABLE_0 else = VARIABLE_1 VARIABLE_1 = VARIABLE_1 EMPTY_LIST VARIABLE_1 index VARIABLE_6 and in FUNCTION_CALL_4 NUMBER VARIABLE_9 and VARIABLE_7 index = index = VARIABLE_0 VARIABLE_1 = index VARIABLE_5 and VARIABLE_3 NUMBER / NUMBER VARIABLE_0 = VARIABLE_4 = / NUMBER VARIABLE_0
predict: while VARIABLE_9 VARIABLE_7 + < VARIABLE_1 VARIABLE_8 index VARIABLE_5 VARIABLE_3 = = VARIABLE_7 index VARIABLE_4 VARIABLE_2 = VARIABLE_0
predict: if VARIABLE_2 = VARIABLE_3 index VARIABLE_7 + = VARIABLE_2 + + VARIABLE_7 index VARIABLE_3 + + NUMBER VARIABLE_2 while VARIABLE_8 and VARIABLE_8 VARIABLE_7 + = VARIABLE_6 else VARIABLE_8 VARIABLE_6
predict: return VARIABLE_6 NUMBER
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: else FUNCTION_CALL_3 VARIABLE_0 in VARIABLE_0 index NUMBER FUNCTION_CALL_2 VARIABLE_0 / NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 = VARIABLE_1 = NUMBER
predict: return VARIABLE_0
predict: index VARIABLE_2 FUNCTION_CALL_1 = EMPTY_LIST and VARIABLE_3 = VARIABLE_0 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_3 * VARIABLE_1 = VARIABLE_2 = FUNCTION_CALL_5 . FUNCTION_CALL_5 and
predict: return VARIABLE_2
Edit distance = 513
predict: else VARIABLE_0 . and VARIABLE_2 FUNCTION_CALL_5
predict: for VARIABLE_3 in VARIABLE_0 * VARIABLE_3 + VARIABLE_1 = VARIABLE_1 + NUMBER VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1
predict: return VARIABLE_1 VARIABLE_2
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 VARIABLE_2 + +
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 = VARIABLE_3 = NUMBER
predict: while VARIABLE_3 < VARIABLE_2 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 index VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_2 + = NUMBER
predict: return VARIABLE_2
predict: = FUNCTION_CALL_5 EMPTY_LIST VARIABLE_0
predict: for VARIABLE_0 VARIABLE_3 VARIABLE_1
predict: if VARIABLE_3 > VARIABLE_2 = VARIABLE_0 in FUNCTION_CALL_5 VARIABLE_3
predict: return VARIABLE_0
predict: = VARIABLE_3 = VARIABLE_1 = EMPTY_LIST VARIABLE_2 index
predict: for VARIABLE_2 VARIABLE_0
predict: index VARIABLE_2 if VARIABLE_5 > VARIABLE_3 VARIABLE_0 else VARIABLE_0 > return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index FUNCTION_CALL_5 return VARIABLE_2 VARIABLE_4 index VARIABLE_2 FUNCTION_CALL_5 = VARIABLE_2 + if index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_2 + NUMBER
predict: return VARIABLE_2
predict: VARIABLE_1 EMPTY_LIST
predict: for VARIABLE_3 VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_1 +
predict: return VARIABLE_1
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 + NUMBER
predict: return VARIABLE_1
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_1 * NUMBER VARIABLE_2 = VARIABLE_0 * NUMBER return VARIABLE_2
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_0 * NUMBER * NUMBER
Edit distance = 101
predict: return in return VARIABLE_0 ( * NUMBER and * NUMBER ( ( VARIABLE_1
predict: VARIABLE_1 = VARIABLE_3 = VARIABLE_0 = VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_1 = * NUMBER * VARIABLE_3 =
predict: return VARIABLE_2 = NUMBER VARIABLE_1 = NUMBER
predict: return VARIABLE_0 * ( + NUMBER VARIABLE_1 * NUMBER VARIABLE_2 + ( ( (
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 = VARIABLE_2 index VARIABLE_1 index FUNCTION_CALL_1
predict: return VARIABLE_1
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 FUNCTION_CALL_5 FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_3 in FUNCTION_CALL_2 VARIABLE_1 in VARIABLE_0
predict: return NUMBER and FUNCTION_CALL_2 NUMBER VARIABLE_0 = ( VARIABLE_0 index VARIABLE_1 VARIABLE_0 (
predict: while return VARIABLE_0 VARIABLE_1 > FUNCTION_CALL_4 VARIABLE_0 in ( FUNCTION_CALL_3 VARIABLE_1
predict: in if for VARIABLE_1 index VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 STRING_CONST VARIABLE_1 and if VARIABLE_5 > VARIABLE_3 VARIABLE_1 index VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 = = VARIABLE_0 = (
predict: VARIABLE_1 = FUNCTION_CALL_5 FUNCTION_CALL_5 VARIABLE_2
predict: for VARIABLE_3 = NUMBER VARIABLE_3 VARIABLE_0 . FUNCTION_CALL_6 VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_1 = NUMBER
predict: while FUNCTION_CALL_4 VARIABLE_0 NUMBER VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 VARIABLE_1 = VARIABLE_2 while
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_1 in VARIABLE_0 + VARIABLE_1 VARIABLE_2 index VARIABLE_1 index FUNCTION_CALL_1
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: return VARIABLE_2 for in return NUMBER NUMBER return NUMBER VARIABLE_1 in FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_1
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_1
predict: = = VARIABLE_1
predict: return VARIABLE_2 for in return VARIABLE_0 index and in index VARIABLE_1 and VARIABLE_3 VARIABLE_4 VARIABLE_0 +
predict: return VARIABLE_3
predict: VARIABLE_1 . NUMBER VARIABLE_0 = VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_2 for else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 NUMBER return VARIABLE_2 else VARIABLE_0 <= return VARIABLE_0 FUNCTION_CALL_4 VARIABLE_7 + return VARIABLE_2 index VARIABLE_1 = for VARIABLE_2 VARIABLE_0 *
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER NUMBER VARIABLE_1 = VARIABLE_1 + VARIABLE_0 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 + VARIABLE_4 = VARIABLE_3
predict: return VARIABLE_4
Edit distance = 196
predict: VARIABLE_3 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 + VARIABLE_3 VARIABLE_1 index VARIABLE_2 return VARIABLE_3
predict: VARIABLE_2 == NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 + VARIABLE_1 index VARIABLE_3 index
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_3 VARIABLE_0 VARIABLE_2 ) + ( (
predict: return VARIABLE_1
predict: for VARIABLE_0 sublist NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: for VARIABLE_0 sublist NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_0 = STRING_CONST
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER STRING_CONST VARIABLE_0
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER STRING_CONST VARIABLE_0
predict: index VARIABLE_1 if index VARIABLE_3 for VARIABLE_5 in VARIABLE_0 FUNCTION_CALL_6 VARIABLE_0 NUMBER FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 =
predict: VARIABLE_0 NUMBER NUMBER for VARIABLE_0 for NUMBER
predict: return VARIABLE_0 if index VARIABLE_3 and FUNCTION_CALL_3 NUMBER return and VARIABLE_0 index VARIABLE_3 VARIABLE_1 = NUMBER VARIABLE_0 > NUMBER STRING_CONST FUNCTION_CALL_4
predict: if VARIABLE_5 in > if for + EMPTY_LIST = FUNCTION_CALL_4 VARIABLE_0 > VARIABLE_0 + STRING_CONST FUNCTION_CALL_4 NUMBER FUNCTION_CALL_3
predict: return VARIABLE_0 for index VARIABLE_3 VARIABLE_7 == NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_7 == NUMBER VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_5 VARIABLE_0 NUMBER VARIABLE_2 = NUMBER
predict: if VARIABLE_1 VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else if FUNCTION_CALL_6 STRING_CONST VARIABLE_1
predict: else if VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else FUNCTION_CALL_6 VARIABLE_0
predict: return VARIABLE_0 if in FUNCTION_CALL_4 NUMBER
predict: return false
predict: if return VARIABLE_0 = NUMBER
predict: return true
predict: sublist else FUNCTION_CALL_3 for index VARIABLE_2 return VARIABLE_2 VARIABLE_4 = VARIABLE_5 in VARIABLE_2 FUNCTION_CALL_5 return VARIABLE_0 and VARIABLE_0 = NUMBER for EMPTY_LIST VARIABLE_1
predict: if VARIABLE_5 in VARIABLE_2 FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 = NUMBER
predict: return false index else else continue if + + NUMBER and continue
predict: return true
predict: while VARIABLE_0 = FUNCTION_CALL_3 VARIABLE_1 != NUMBER VARIABLE_0 + VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0
predict: return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 = NUMBER
predict: return true
predict: if VARIABLE_0 % NUMBER VARIABLE_0 NUMBER
predict: return false
predict: index VARIABLE_1 for in and FUNCTION_CALL_3 FUNCTION_CALL_4 NUMBER ) + NUMBER ) FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_4 NUMBER
predict: if VARIABLE_0 % VARIABLE_1 = NUMBER
predict: return false
predict: else return true
predict: return NUMBER VARIABLE_0 = NUMBER or VARIABLE_0 = NUMBER
predict: else VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: / NUMBER return VARIABLE_0 * ( VARIABLE_0 + NUMBER
predict: if VARIABLE_0 NUMBER FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_0 + <
predict: else NUMBER
Edit distance = 227
predict: index VARIABLE_2 if else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 <= return NUMBER or index VARIABLE_2 in FUNCTION_CALL_4 return NUMBER VARIABLE_1 + return NUMBER + if VARIABLE_0 index VARIABLE_2 + VARIABLE_1 = VARIABLE_0 VARIABLE_2 = NUMBER = NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_0 = FUNCTION_CALL_2 VARIABLE_0
predict: VARIABLE_3 = true VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER FUNCTION_CALL_6 VARIABLE_4 =
predict: while VARIABLE_2 < VARIABLE_4
predict: return VARIABLE_0 if index index VARIABLE_2 != return VARIABLE_0 index VARIABLE_4 VARIABLE_1 = false VARIABLE_4 if VARIABLE_3 VARIABLE_1 VARIABLE_4 NUMBER VARIABLE_4 VARIABLE_2
predict: in for in return VARIABLE_2 VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 NUMBER return FUNCTION_CALL_2 / NUMBER FUNCTION_CALL_4 <= <= VARIABLE_1
predict: if VARIABLE_5 VARIABLE_1 == VARIABLE_0 VARIABLE_0 - VARIABLE_1 VARIABLE_0 - NUMBER FUNCTION_CALL_4 VARIABLE_0 VARIABLE_0
predict: return false and VARIABLE_0 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 NUMBER == VARIABLE_1 ==
predict: return true
predict: for else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 VARIABLE_1 return NUMBER VARIABLE_1 return else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 < VARIABLE_1 + FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != FUNCTION_CALL_4 VARIABLE_0 index FUNCTION_CALL_3 - VARIABLE_1
predict: return false
predict: return true
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_0 VARIABLE_1 VARIABLE_1 VARIABLE_2
predict: if VARIABLE_2 = VARIABLE_0
predict: return true
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: if FUNCTION_CALL_4 VARIABLE_0 = NUMBER
predict: true return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 . VARIABLE_1
predict: if VARIABLE_2 = VARIABLE_1
predict: return FUNCTION_CALL_5 VARIABLE_0
predict: else return false
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 VARIABLE_1
predict: return VARIABLE_0 + index index VARIABLE_2 VARIABLE_7 + = NUMBER return VARIABLE_0 index VARIABLE_1 index - NUMBER VARIABLE_0 = VARIABLE_0 index VARIABLE_2 VARIABLE_1 = VARIABLE_0 index VARIABLE_2 + VARIABLE_0 index VARIABLE_2 in VARIABLE_1 VARIABLE_0
predict: VARIABLE_1 index FUNCTION_CALL_7 VARIABLE_0
predict: for else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 VARIABLE_3 NUMBER VARIABLE_3 VARIABLE_0 VARIABLE_3 +
predict: if VARIABLE_3 != VARIABLE_4 VARIABLE_3 != VARIABLE_5 VARIABLE_1 VARIABLE_3 VARIABLE_0 VARIABLE_3
predict: else if VARIABLE_3 = VARIABLE_4 - VARIABLE_2 VARIABLE_3 VARIABLE_0 VARIABLE_5
predict: else VARIABLE_1 VARIABLE_3 VARIABLE_0 VARIABLE_4 FUNCTION_CALL_4 FUNCTION_CALL_5
predict: return VARIABLE_2
predict: return VARIABLE_0 = VARIABLE_1 return index index ) ( index VARIABLE_1 in VARIABLE_0 index ( index index VARIABLE_2 = VARIABLE_0 ( index VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 index VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 . = VARIABLE_1 =
predict: for VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_3
predict: for VARIABLE_3 in FUNCTION_CALL_7 NUMBER VARIABLE_3 - VARIABLE_2 - NUMBER
predict: return VARIABLE_0 if index VARIABLE_4 else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 >= VARIABLE_0 index VARIABLE_4 VARIABLE_1 + return NUMBER NUMBER return VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_1 index FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 VARIABLE_4 VARIABLE_2
predict: return VARIABLE_0
predict: = VARIABLE_0 = EMPTY_LIST VARIABLE_1 = NUMBER VARIABLE_2 = NUMBER
predict: while else VARIABLE_0 . FUNCTION_CALL_8 VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 VARIABLE_1 index VARIABLE_2 < FUNCTION_CALL_6 VARIABLE_4 FUNCTION_CALL_6 VARIABLE_2 < VARIABLE_3
predict: if VARIABLE_5 > VARIABLE_3 VARIABLE_1 return + VARIABLE_1 sublist VARIABLE_0 VARIABLE_3 = FUNCTION_CALL_7 index VARIABLE_2 VARIABLE_4 < VARIABLE_1 VARIABLE_3
predict: in else FUNCTION_CALL_7 = while FUNCTION_CALL_4 VARIABLE_2 + index VARIABLE_2 VARIABLE_0 VARIABLE_4
predict: return VARIABLE_2 VARIABLE_4 if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index if VARIABLE_1 VARIABLE_3 index VARIABLE_0 = FUNCTION_CALL_7 NUMBER VARIABLE_3 >
predict: return VARIABLE_2 VARIABLE_4 if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index index VARIABLE_2 VARIABLE_4 index VARIABLE_0 = FUNCTION_CALL_7 > NUMBER VARIABLE_4
predict: VARIABLE_0 = NUMBER VARIABLE_1 = NUMBER
predict: for VARIABLE_6 == NUMBER VARIABLE_8 FUNCTION_CALL_12 VARIABLE_7 + FUNCTION_CALL_12
predict: if VARIABLE_6 index VARIABLE_7 = FUNCTION_CALL_12 VARIABLE_7 + NUMBER VARIABLE_0 index VARIABLE_3 + + + if VARIABLE_3 = VARIABLE_7 VARIABLE_6 VARIABLE_5
predict: if VARIABLE_3 = FUNCTION_CALL_12 VARIABLE_8 + NUMBER VARIABLE_5 VARIABLE_6 = VARIABLE_4 VARIABLE_4 + + + if VARIABLE_7
predict: if VARIABLE_7 VARIABLE_4 < VARIABLE_8 VARIABLE_3 VARIABLE_1 VARIABLE_5 VARIABLE_6 = VARIABLE_4 VARIABLE_7 VARIABLE_4 + +
predict: in FUNCTION_CALL_4 else return VARIABLE_5 VARIABLE_6 VARIABLE_8 VARIABLE_3 VARIABLE_3 + + + if - VARIABLE_2 + -
predict: return VARIABLE_5
Edit distance = 465
