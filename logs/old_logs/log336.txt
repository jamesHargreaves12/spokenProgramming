test enhanced v2
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: index VARIABLE_1 in index return VARIABLE_2 VARIABLE_4 = return NUMBER VARIABLE_1 index <= VARIABLE_1 + FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != FUNCTION_CALL_4 index FUNCTION_CALL_3 VARIABLE_0 - VARIABLE_1
predict: return false
predict: return true
predict: FUNCTION_CALL_1 = VARIABLE_5 = = FUNCTION_CALL_10 VARIABLE_4
predict: index VARIABLE_4 FUNCTION_CALL_9 FUNCTION_CALL_12 index index VARIABLE_3 = return VARIABLE_3 VARIABLE_5 FUNCTION_CALL_10 index index VARIABLE_4 FUNCTION_CALL_1 NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 index NUMBER VARIABLE_0 = index VARIABLE_3 VARIABLE_7 index index VARIABLE_3 VARIABLE_6 = FUNCTION_CALL_1 VARIABLE_1 = VARIABLE_4 and index FUNCTION_CALL_9 and VARIABLE_2
predict: for VARIABLE_8 NUMBER VARIABLE_5
predict: index VARIABLE_6 if index VARIABLE_6 VARIABLE_7 + VARIABLE_1 VARIABLE_7 index NUMBER FUNCTION_CALL_4 index VARIABLE_8 index else index VARIABLE_6 VARIABLE_7 + index VARIABLE_2 index VARIABLE_6 NUMBER FUNCTION_CALL_4 index VARIABLE_8 index = VARIABLE_1 VARIABLE_7 VARIABLE_2 =
predict: return VARIABLE_3
predict: VARIABLE_0 = EMPTY_LIST
predict: for in < VARIABLE_3 in VARIABLE_1
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_0
predict: return VARIABLE_0
predict: * NUMBER VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0 * NUMBER
predict: return VARIABLE_0 = FUNCTION_CALL_2 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER
predict: VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 while
predict: return VARIABLE_3
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 <= NUMBER VARIABLE_0 + NUMBER in *
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER
predict: FUNCTION_CALL_3 VARIABLE_0
predict: else if VARIABLE_0 FUNCTION_CALL_2 NUMBER == NUMBER FUNCTION_CALL_3 VARIABLE_0 = NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_2 NUMBER STRING_CONST if
predict: STRING_CONST and
predict: VARIABLE_1 in FUNCTION_CALL_4 NUMBER
predict: while FUNCTION_CALL_4 VARIABLE_0 > NUMBER VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1
predict: VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1 .
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: return VARIABLE_0
predict: for = VARIABLE_1 VARIABLE_0 index VARIABLE_3 = index VARIABLE_3 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 VARIABLE_0 index VARIABLE_1 =
predict: if VARIABLE_0 = NUMBER
predict: return false else
predict: if VARIABLE_0 = NUMBER
predict: return true else
