predict: VARIABLE_1 = VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 VARIABLE_1
predict: index VARIABLE_1 in FUNCTION_CALL_4 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_0 = return NUMBER index VARIABLE_1 VARIABLE_0 < VARIABLE_1 + + FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != FUNCTION_CALL_4 VARIABLE_0 index FUNCTION_CALL_3 - VARIABLE_1
predict: return false
predict: return true
predict: index VARIABLE_5 FUNCTION_CALL_1 = and VARIABLE_3 = VARIABLE_0 NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_2 FUNCTION_CALL_10 return return VARIABLE_3 VARIABLE_0 VARIABLE_5 FUNCTION_CALL_10 index return FUNCTION_CALL_1 NUMBER = VARIABLE_7 and index VARIABLE_6 index VARIABLE_1 = = VARIABLE_4 index index VARIABLE_2 VARIABLE_2 = VARIABLE_4 FUNCTION_CALL_12
predict: for VARIABLE_8 FUNCTION_CALL_2 NUMBER VARIABLE_5
predict: index VARIABLE_6 if and in VARIABLE_6 VARIABLE_7 + VARIABLE_1 NUMBER VARIABLE_7 index index VARIABLE_9 VARIABLE_5 else index VARIABLE_6 VARIABLE_7 + index VARIABLE_2 NUMBER index VARIABLE_6 index VARIABLE_9 = index VARIABLE_1 VARIABLE_7 VARIABLE_5 VARIABLE_2 =
predict: return VARIABLE_3
predict: VARIABLE_0 = FUNCTION_CALL_4 EMPTY_LIST
predict: for VARIABLE_0 VARIABLE_3 VARIABLE_1
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0 in
predict: return VARIABLE_0
predict: index VARIABLE_1 * NUMBER VARIABLE_2 = = VARIABLE_0
predict: return VARIABLE_0 * NUMBER
predict: return VARIABLE_0 = FUNCTION_CALL_2 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_4 FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 + VARIABLE_1 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_3 = VARIABLE_0 = NUMBER
predict: VARIABLE_0 VARIABLE_1 = VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 in return VARIABLE_3 VARIABLE_3 VARIABLE_4 while
predict: return VARIABLE_0 if else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_0 = return NUMBER or return VARIABLE_0 else VARIABLE_0 <= return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_0 = return NUMBER VARIABLE_0 NUMBER
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 != NUMBER FUNCTION_CALL_3 VARIABLE_0 FUNCTION_CALL_2 NUMBER
predict: return VARIABLE_0 else if FUNCTION_CALL_2 return NUMBER else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = return NUMBER FUNCTION_CALL_3 STRING_CONST if return VARIABLE_0 FUNCTION_CALL_2 return NUMBER else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = NUMBER FUNCTION_CALL_3 STRING_CONST index + and STRING_CONST
predict: VARIABLE_1 = NUMBER
predict: while FUNCTION_CALL_4 VARIABLE_0 NUMBER VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_2 VARIABLE_1 VARIABLE_1 = VARIABLE_2 +
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1 .
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 VARIABLE_2 + +
predict: return VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = VARIABLE_1 VARIABLE_0 index VARIABLE_3 = VARIABLE_2 VARIABLE_0 index VARIABLE_3 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 index VARIABLE_0 = FUNCTION_CALL_4
predict: if VARIABLE_0 = NUMBER
predict: return false else
predict: if VARIABLE_0 = NUMBER
predict: return true else
predict: index VARIABLE_1 in FUNCTION_CALL_4 in return NUMBER + VARIABLE_2 FUNCTION_CALL_3 index VARIABLE_0 VARIABLE_1 VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: while VARIABLE_0 = VARIABLE_1 VARIABLE_1 VARIABLE_1 != VARIABLE_0 + NUMBER FUNCTION_CALL_4 VARIABLE_0
predict: return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1
Edit distance = 284
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 * NUMBER
predict: return VARIABLE_0 + VARIABLE_1 +
predict: for VARIABLE_1 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 < / NUMBER
predict: if index VARIABLE_1 in VARIABLE_0 VARIABLE_2 != index VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0 - NUMBER -
predict: return false
predict: return true
predict: > = VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3 and VARIABLE_2
predict: return VARIABLE_2
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: else FUNCTION_CALL_3 sublist NUMBER FUNCTION_CALL_2 VARIABLE_0 / NUMBER
predict: VARIABLE_1 EMPTY_LIST
predict: for VARIABLE_3 VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 +
predict: return VARIABLE_1
predict: return VARIABLE_0 = index VARIABLE_1 in index ) NUMBER VARIABLE_0 ( index VARIABLE_1 in VARIABLE_0 index NUMBER ) index in index VARIABLE_2 = VARIABLE_0 ( index VARIABLE_2
predict: return NUMBER VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: < / NUMBER FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 =
predict: index for index VARIABLE_2 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index return NUMBER < index for and NUMBER VARIABLE_2 + = VARIABLE_1 VARIABLE_2 <=
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 VARIABLE_0
predict: return false if and VARIABLE_3 + VARIABLE_1 index
predict: return true
predict: return FUNCTION_CALL_3 VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: while VARIABLE_1 != EMPTY_LIST VARIABLE_1
predict: index if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 > return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_3 FUNCTION_CALL_4 VARIABLE_0 + VARIABLE_1 . FUNCTION_CALL_4 VARIABLE_0 = NUMBER
predict: for VARIABLE_0 = NUMBER NUMBER
predict: return VARIABLE_0 if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_3 return NUMBER in return NUMBER and return VARIABLE_0 FUNCTION_CALL_3 return NUMBER == NUMBER FUNCTION_CALL_4 + + FUNCTION_CALL_5 STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_3 return NUMBER NUMBER FUNCTION_CALL_4 + + ( FUNCTION_CALL_5 STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_3 return NUMBER NUMBER FUNCTION_CALL_4 + + ( FUNCTION_CALL_5 STRING_CONST
predict: else FUNCTION_CALL_4 + + ( VARIABLE_0 NUMBER
predict: index VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + + VARIABLE_3 index
predict: return VARIABLE_1
predict: VARIABLE_3 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 + VARIABLE_3 = VARIABLE_1 index VARIABLE_2 return VARIABLE_3
predict: = NUMBER VARIABLE_1
predict: index VARIABLE_2 for in return VARIABLE_0 index and index FUNCTION_CALL_4 and VARIABLE_3 VARIABLE_4 VARIABLE_0 +
predict: return VARIABLE_3
Edit distance = 180
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_1 in VARIABLE_0 + VARIABLE_1 index VARIABLE_2 VARIABLE_0 index FUNCTION_CALL_1
predict: return VARIABLE_2
predict: if VARIABLE_0 = NUMBER )
predict: return false
predict: if VARIABLE_0 = NUMBER )
predict: return true
predict: for else return FUNCTION_CALL_3 in sublist index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 index VARIABLE_0 index FUNCTION_CALL_4 ) +
predict: if VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 ) VARIABLE_1 = NUMBER
predict: return false else return ) continue and index FUNCTION_CALL_4 index index VARIABLE_5 for VARIABLE_3 index if continue else ) index
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_2 VARIABLE_3 + VARIABLE_3 in VARIABLE_0
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_1 = VARIABLE_1 + VARIABLE_0 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 + VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_2 <= NUMBER FUNCTION_CALL_7 if
predict: if >=
predict: return index VARIABLE_2 = VARIABLE_5 index VARIABLE_4 VARIABLE_0 = VARIABLE_5 return FUNCTION_CALL_2 VARIABLE_0 VARIABLE_2 VARIABLE_5 index VARIABLE_4 index <= VARIABLE_0 < VARIABLE_5 sublist NUMBER : index VARIABLE_2 VARIABLE_0 VARIABLE_5 and VARIABLE_3 VARIABLE_0 index and VARIABLE_3 + VARIABLE_1 + in VARIABLE_0 >= else return index VARIABLE_1 in >= index VARIABLE_4 > VARIABLE_5 if index VARIABLE_2 in index VARIABLE_5 for EMPTY_LIST == VARIABLE_1 = EMPTY_LIST VARIABLE_0 VARIABLE_2 in VARIABLE_5
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 = VARIABLE_2 index VARIABLE_1 index FUNCTION_CALL_1
predict: return VARIABLE_1
predict: for VARIABLE_1 = NUMBER NUMBER VARIABLE_0 = STRING_CONST
predict: index VARIABLE_1 if == return VARIABLE_0 = STRING_CONST + NUMBER FUNCTION_CALL_4
predict: index VARIABLE_1 if == return VARIABLE_0 = STRING_CONST + NUMBER FUNCTION_CALL_4
predict: index VARIABLE_1 if in == for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 VARIABLE_0 + VARIABLE_0 FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4
predict: FUNCTION_CALL_11 VARIABLE_1 = VARIABLE_1 VARIABLE_0
predict: for VARIABLE_2 in NUMBER VARIABLE_1
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2
predict: return false VARIABLE_3
predict: return true
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 = NUMBER
predict: return true
predict: if VARIABLE_0 % NUMBER NUMBER NUMBER
predict: return false
predict: index VARIABLE_1 for in FUNCTION_CALL_3 in FUNCTION_CALL_4 ) NUMBER == + NUMBER ) FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_4 == NUMBER
predict: if VARIABLE_0 % VARIABLE_1 = NUMBER
predict: return false
predict: else return true
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
Edit distance = 253
predict: VARIABLE_1 = VARIABLE_3 = FUNCTION_CALL_6
predict: return in in FUNCTION_CALL_4 return NUMBER + return VARIABLE_3 sublist return NUMBER < return for NUMBER VARIABLE_4 - index VARIABLE_3 VARIABLE_1 index VARIABLE_0 = VARIABLE_4 index VARIABLE_1 VARIABLE_2 =
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: return true
predict: VARIABLE_0 * NUMBER * NUMBER
predict: if VARIABLE_0 <= NUMBER
predict: return
predict: else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_0 = = NUMBER
predict: index VARIABLE_2 in for in for VARIABLE_5 EMPTY_LIST index VARIABLE_1 + VARIABLE_0 and EMPTY_LIST in VARIABLE_0 index for FUNCTION_CALL_4 VARIABLE_0 VARIABLE_0 NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: = VARIABLE_1 = NUMBER
predict: in VARIABLE_6 = NUMBER VARIABLE_8 FUNCTION_CALL_12 VARIABLE_7 + FUNCTION_CALL_12
predict: if VARIABLE_6 index VARIABLE_7 = FUNCTION_CALL_12 VARIABLE_7 + NUMBER VARIABLE_1 VARIABLE_5 index VARIABLE_3 + + FUNCTION_CALL_5 if VARIABLE_3 = VARIABLE_7 VARIABLE_6
predict: if VARIABLE_3 = FUNCTION_CALL_12 VARIABLE_8 + NUMBER VARIABLE_5 VARIABLE_6 = VARIABLE_7 VARIABLE_4 VARIABLE_4 + + FUNCTION_CALL_5 if
predict: if VARIABLE_7 VARIABLE_4 <= VARIABLE_8 VARIABLE_3 VARIABLE_1 VARIABLE_5 VARIABLE_6 = VARIABLE_4 VARIABLE_7 VARIABLE_4 + +
predict: in FUNCTION_CALL_4 else return VARIABLE_5 VARIABLE_6 index VARIABLE_8 VARIABLE_3 VARIABLE_3 + + FUNCTION_CALL_5 if == in FUNCTION_CALL_5 ==
predict: return VARIABLE_5
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 in
predict: if FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 NUMBER
predict: return false
predict: return true
predict: VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_8 VARIABLE_0
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 FUNCTION_CALL_8 + VARIABLE_3
predict: if VARIABLE_3 != VARIABLE_4 VARIABLE_3 != VARIABLE_5 VARIABLE_1 VARIABLE_3 VARIABLE_0 VARIABLE_3
predict: else if VARIABLE_3 return VARIABLE_2 VARIABLE_3 VARIABLE_0 VARIABLE_5
predict: else VARIABLE_3 = VARIABLE_0 VARIABLE_4 +
predict: return VARIABLE_2
predict: VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER
predict: while VARIABLE_2 VARIABLE_0 NUMBER
predict: if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER
predict: return false VARIABLE_2 = VARIABLE_2 + NUMBER return true
predict: VARIABLE_7 VARIABLE_0 = VARIABLE_4
predict: if VARIABLE_7 == NUMBER or NUMBER
predict: return VARIABLE_4
predict: VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4 sublist / NUMBER NUMBER VARIABLE_2 = NUMBER VARIABLE_0 = NUMBER VARIABLE_5 = EMPTY_LIST VARIABLE_7 + VARIABLE_7 / NUMBER sublist NUMBER index VARIABLE_7 FUNCTION_CALL_10 VARIABLE_4 else VARIABLE_3 =
predict: while index VARIABLE_2 else VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_1 = NUMBER or VARIABLE_0 < VARIABLE_3 index
predict: if return VARIABLE_0 else VARIABLE_0 > return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_1 VARIABLE_2 + NUMBER VARIABLE_2 in VARIABLE_5 index VARIABLE_2 VARIABLE_3 FUNCTION_CALL_12 VARIABLE_0 index VARIABLE_1 < index VARIABLE_2 VARIABLE_3 VARIABLE_3 < VARIABLE_1 . FUNCTION_CALL_8 VARIABLE_5 else VARIABLE_0 VARIABLE_2 <= VARIABLE_1
predict: index else return FUNCTION_CALL_12 index VARIABLE_1 index VARIABLE_0 + while FUNCTION_CALL_5 + NUMBER VARIABLE_0 = VARIABLE_0 VARIABLE_5
predict: return VARIABLE_5
predict: VARIABLE_0 = true
predict: return VARIABLE_2 VARIABLE_4 = for VARIABLE_1 NUMBER return NUMBER index VARIABLE_1 VARIABLE_2 < index VARIABLE_2 / return NUMBER index VARIABLE_1 VARIABLE_1 + VARIABLE_1 + in FUNCTION_CALL_4 + return VARIABLE_0 and return VARIABLE_2 VARIABLE_4 = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 in VARIABLE_1 != NUMBER
predict: return VARIABLE_0
predict: = VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_0 == NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_0 * VARIABLE_1 VARIABLE_0
predict: = VARIABLE_0 = EMPTY_LIST = NUMBER VARIABLE_2 = NUMBER
predict: VARIABLE_1 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_3 VARIABLE_2 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_4
predict: return VARIABLE_3 if VARIABLE_5 > VARIABLE_3 EMPTY_LIST VARIABLE_7 + index VARIABLE_1 VARIABLE_1 index VARIABLE_3 EMPTY_LIST = FUNCTION_CALL_7 index VARIABLE_2 VARIABLE_4 EMPTY_LIST < VARIABLE_1
predict: while else return FUNCTION_CALL_7 = VARIABLE_1 index FUNCTION_CALL_5 VARIABLE_2 + index VARIABLE_2 VARIABLE_4 VARIABLE_0
predict: index if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 EMPTY_LIST return VARIABLE_3 else VARIABLE_0 > return NUMBER FUNCTION_CALL_7 = VARIABLE_0 STRING_CONST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 EMPTY_LIST index
predict: index if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 EMPTY_LIST return else VARIABLE_0 > return NUMBER FUNCTION_CALL_7 = VARIABLE_0 FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 EMPTY_LIST index
predict: return VARIABLE_0 = NUMBER =
predict: while index VARIABLE_1 > return NUMBER VARIABLE_1 VARIABLE_1 VARIABLE_0 - VARIABLE_1 in NUMBER
predict: return VARIABLE_0
predict: and VARIABLE_2 . VARIABLE_0
predict: for VARIABLE_3 in VARIABLE_0 * VARIABLE_3 = VARIABLE_1 = VARIABLE_2 + VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1
predict: return VARIABLE_1 VARIABLE_2
Edit distance = 409
predict: return NUMBER VARIABLE_0 = NUMBER NUMBER
predict: else VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: for VARIABLE_2 = VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: if VARIABLE_0 index VARIABLE_2 > VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_0 index VARIABLE_2 + + + + NUMBER VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_6
predict: return VARIABLE_0
predict: return in return VARIABLE_0 ) * NUMBER return VARIABLE_2 * NUMBER FUNCTION_CALL_4 ( VARIABLE_1
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 + =
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_3 VARIABLE_2 in VARIABLE_0 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2
predict: return VARIABLE_1
predict: index FUNCTION_CALL_11 NUMBER = VARIABLE_2 = VARIABLE_1
predict: index VARIABLE_2 for else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index return NUMBER index VARIABLE_2 else VARIABLE_0 <= return VARIABLE_0 FUNCTION_CALL_4 VARIABLE_2 + + index VARIABLE_1 VARIABLE_0 index VARIABLE_2 VARIABLE_0 *
predict: return VARIABLE_1
predict: return VARIABLE_0 for else VARIABLE_0 return NUMBER index return NUMBER VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_5 VARIABLE_0 NUMBER VARIABLE_2 = NUMBER
predict: if VARIABLE_1 VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_1 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else FUNCTION_CALL_6 VARIABLE_0 + +
predict: VARIABLE_1 = FUNCTION_CALL_5 FUNCTION_CALL_5 VARIABLE_2
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 . FUNCTION_CALL_6 VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1 in
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_2 =
predict: return VARIABLE_2
predict: return FUNCTION_CALL_4 VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: VARIABLE_4 = VARIABLE_0 = NUMBER VARIABLE_2 = NUMBER VARIABLE_5 FUNCTION_CALL_7
predict: while index VARIABLE_5 else VARIABLE_0 <= return return VARIABLE_3 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index for VARIABLE_5 return VARIABLE_0 index index VARIABLE_5 and index VARIABLE_2 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index VARIABLE_2 + VARIABLE_3 VARIABLE_1
predict: return NUMBER and FUNCTION_CALL_2 NUMBER VARIABLE_0 FUNCTION_CALL_4 VARIABLE_2 = VARIABLE_1 FUNCTION_CALL_4
predict: while return VARIABLE_0 VARIABLE_1 > FUNCTION_CALL_4 VARIABLE_0 in FUNCTION_CALL_4 FUNCTION_CALL_3 VARIABLE_1
predict: index if for VARIABLE_5 for in + index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 for VARIABLE_5 and STRING_CONST if + VARIABLE_1 FUNCTION_CALL_4 = = VARIABLE_0 = FUNCTION_CALL_4
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 for in return VARIABLE_0 for VARIABLE_5 index VARIABLE_2 else VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index for VARIABLE_5 index VARIABLE_2 + for VARIABLE_5 and VARIABLE_3 + VARIABLE_3 VARIABLE_0 index VARIABLE_1 index
predict: return VARIABLE_2
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 for in return VARIABLE_0 VARIABLE_2 + + * VARIABLE_1 VARIABLE_3 in + FUNCTION_CALL_3
predict: return VARIABLE_2
Edit distance = 209
predict: return VARIABLE_0 + index index VARIABLE_2 in FUNCTION_CALL_4 return VARIABLE_0 index VARIABLE_1 return - return VARIABLE_0 index VARIABLE_1 return FUNCTION_CALL_3 return VARIABLE_0 index index VARIABLE_2 VARIABLE_0 + index index VARIABLE_2 in FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_1 - NUMBER * VARIABLE_0 index VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: return else index VARIABLE_2 VARIABLE_0 . - NUMBER FUNCTION_CALL_2 VARIABLE_0
predict: return FUNCTION_CALL_4
predict: VARIABLE_1 = NUMBER
predict: index VARIABLE_2 for in return NUMBER NUMBER VARIABLE_1 return VARIABLE_1 VARIABLE_0 index VARIABLE_2 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 index VARIABLE_2 in VARIABLE_0 index VARIABLE_2 in VARIABLE_0 * VARIABLE_1 - NUMBER = FUNCTION_CALL_5
predict: return VARIABLE_0
predict: return NUMBER VARIABLE_0 = NUMBER NUMBER
predict: in for <= VARIABLE_1 return VARIABLE_2 VARIABLE_4 = in FUNCTION_CALL_4 index VARIABLE_2 while VARIABLE_1 return VARIABLE_0 > return NUMBER VARIABLE_1 index FUNCTION_CALL_5 * VARIABLE_1 = VARIABLE_0 VARIABLE_0 + NUMBER
predict: return VARIABLE_0
predict: in for FUNCTION_CALL_3 for VARIABLE_5 VARIABLE_1 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_2 / NUMBER FUNCTION_CALL_4 VARIABLE_0 <= VARIABLE_1 <
predict: if VARIABLE_5 VARIABLE_1 ) VARIABLE_0 - VARIABLE_0 - NUMBER FUNCTION_CALL_4 VARIABLE_0
predict: return false and VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 + ) VARIABLE_0 )
predict: return true
predict: if FUNCTION_CALL_6 VARIABLE_4 or NUMBER
predict: return VARIABLE_4
predict: return VARIABLE_0 else return and return NUMBER VARIABLE_0 FUNCTION_CALL_10 FUNCTION_CALL_10 / FUNCTION_CALL_11 FUNCTION_CALL_7 FUNCTION_CALL_6 NUMBER VARIABLE_4
predict: return VARIABLE_3
predict: index VARIABLE_2 = = VARIABLE_2 = VARIABLE_4 = VARIABLE_2 NUMBER
predict: return for in return VARIABLE_0 in for VARIABLE_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_4 = VARIABLE_3 VARIABLE_2 + VARIABLE_3 = VARIABLE_1 VARIABLE_4 in
predict: return VARIABLE_0 for in return NUMBER return VARIABLE_0 VARIABLE_2 < return NUMBER return VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 STRING_CONST in
predict: if VARIABLE_0 = NUMBER
predict: return else
predict: return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_2
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 in VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_0
predict: and VARIABLE_2 = VARIABLE_1 = NUMBER
predict: return VARIABLE_0 * ( + NUMBER VARIABLE_1 * NUMBER VARIABLE_2 + ( ( (
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 + = VARIABLE_2
predict: return VARIABLE_1
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_1 VARIABLE_0 VARIABLE_0 NUMBER FUNCTION_CALL_11 and VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 in VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_1 in VARIABLE_0 index VARIABLE_3 VARIABLE_1 index VARIABLE_3 VARIABLE_1 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 =
predict: return VARIABLE_0
Edit distance = 247
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_4 index VARIABLE_3 VARIABLE_1
predict: return VARIABLE_4
predict: index VARIABLE_2 if else VARIABLE_0 <= or index VARIABLE_2 in VARIABLE_7 == NUMBER VARIABLE_1 + + VARIABLE_1 = VARIABLE_0 VARIABLE_2 = NUMBER VARIABLE_1 = NUMBER VARIABLE_1 VARIABLE_0 NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 == NUMBER
predict: for VARIABLE_3 in VARIABLE_0 index VARIABLE_2 + VARIABLE_1 index VARIABLE_3 index
predict: return VARIABLE_2
predict: return VARIABLE_0 = FUNCTION_CALL_6 . = VARIABLE_1 =
predict: for VARIABLE_2 in FUNCTION_CALL_7 index VARIABLE_3
predict: for VARIABLE_4 in FUNCTION_CALL_7 = NUMBER VARIABLE_3 - VARIABLE_2 - NUMBER
predict: if VARIABLE_0 index VARIABLE_4 > VARIABLE_0 index VARIABLE_4 + NUMBER VARIABLE_0 . FUNCTION_CALL_5 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + +
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 + +
predict: sublist if VARIABLE_0 index VARIABLE_2 else VARIABLE_0 VARIABLE_2 < return VARIABLE_0 sublist VARIABLE_2 + NUMBER
predict: else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 + NUMBER
predict: return VARIABLE_0 + FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_0 > NUMBER
predict: else NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER
predict: if != VARIABLE_0 index VARIABLE_2 in VARIABLE_0 != != VARIABLE_0 index VARIABLE_1 - NUMBER VARIABLE_2 = VARIABLE_0 -
predict: return false FUNCTION_CALL_5 index
predict: return true
predict: VARIABLE_0 ==
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 = VARIABLE_3 = NUMBER
predict: while VARIABLE_3 < VARIABLE_2 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 index VARIABLE_3
predict: if FUNCTION_CALL_4 VARIABLE_0 < NUMBER
predict: true return if VARIABLE_5 VARIABLE_1 + VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_0 . VARIABLE_1
predict: if VARIABLE_2 = VARIABLE_1
predict: return FUNCTION_CALL_5 VARIABLE_0
predict: else return false
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_1
predict: = VARIABLE_3 = . = EMPTY_LIST VARIABLE_2 index
predict: for VARIABLE_2 VARIABLE_0
predict: if VARIABLE_5 VARIABLE_0 index VARIABLE_2 else VARIABLE_0 > index VARIABLE_1 index FUNCTION_CALL_5 VARIABLE_5 index VARIABLE_2 FUNCTION_CALL_5 in VARIABLE_1 VARIABLE_2 + if + index VARIABLE_3
predict: return VARIABLE_3
predict: for VARIABLE_0 NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1
predict: return VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0 index VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 FUNCTION_CALL_3 VARIABLE_3 index +
predict: return VARIABLE_2
Edit distance = 167
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + + = VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_0 FUNCTION_CALL_5 NUMBER FUNCTION_CALL_3 VARIABLE_0 +
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = = NUMBER = VARIABLE_0
predict: index VARIABLE_1 for FUNCTION_CALL_5 return NUMBER and VARIABLE_3 VARIABLE_2 in + VARIABLE_0 index VARIABLE_2 VARIABLE_1 VARIABLE_0 + VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_3 = VARIABLE_0 = VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_1 = * NUMBER VARIABLE_3 = * VARIABLE_1 =
predict: VARIABLE_0 = VARIABLE_1 * NUMBER VARIABLE_2 = VARIABLE_0 * NUMBER return VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = index VARIABLE_1 VARIABLE_3 VARIABLE_0 VARIABLE_3 VARIABLE_0 VARIABLE_0 index VARIABLE_2 VARIABLE_2 VARIABLE_5 VARIABLE_0 index VARIABLE_1 =
predict: return VARIABLE_0
predict: for VARIABLE_0 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 for NUMBER )
predict: if VARIABLE_0 FUNCTION_CALL_3 NUMBER VARIABLE_0 = NUMBER FUNCTION_CALL_4 STRING_CONST > NUMBER
predict: if if VARIABLE_5 > VARIABLE_3 > + and VARIABLE_3 FUNCTION_CALL_4 FUNCTION_CALL_4 ) index > VARIABLE_0 index VARIABLE_5 STRING_CONST FUNCTION_CALL_4 ) NUMBER FUNCTION_CALL_3
predict: and VARIABLE_3 FUNCTION_CALL_1 FUNCTION_CALL_4 VARIABLE_2 = VARIABLE_0 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_3 * VARIABLE_1 = VARIABLE_2 + = FUNCTION_CALL_5 . FUNCTION_CALL_5
predict: return VARIABLE_2
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 = NUMBER VARIABLE_0 < VARIABLE_0 + +
predict: if VARIABLE_0 % NUMBER == NUMBER VARIABLE_0 % == NUMBER NUMBER == FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % NUMBER == == NUMBER FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % = NUMBER == FUNCTION_CALL_2 STRING_CONST
predict: else FUNCTION_CALL_2 VARIABLE_0 &
predict: = VARIABLE_2 = NUMBER
predict: for VARIABLE_1 in VARIABLE_0 + VARIABLE_2 + = VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_2
Edit distance = 133
predict: VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER >
predict: return VARIABLE_0
predict: for VARIABLE_0 FUNCTION_CALL_3 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 +
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_2
predict: return VARIABLE_0 if else VARIABLE_0 index in VARIABLE_0 = VARIABLE_1 = NUMBER >
predict: return VARIABLE_1
predict: if FUNCTION_CALL_10 VARIABLE_0 NUMBER NUMBER
predict: return return VARIABLE_0 else = VARIABLE_1 return VARIABLE_2 VARIABLE_4 = for VARIABLE_5 FUNCTION_CALL_10 return VARIABLE_0 / return NUMBER = return return VARIABLE_2 VARIABLE_4 = VARIABLE_2 EMPTY_LIST = index VARIABLE_6 and VARIABLE_3 NUMBER index VARIABLE_8 VARIABLE_7 = VARIABLE_1 + = in VARIABLE_0 VARIABLE_4 = VARIABLE_5 NUMBER / NUMBER VARIABLE_0
predict: while + VARIABLE_8 <= FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 = VARIABLE_3 = VARIABLE_5 index VARIABLE_8
predict: if VARIABLE_2 = VARIABLE_3 index + = VARIABLE_2 + else index + = VARIABLE_3 + + + VARIABLE_8 VARIABLE_8 VARIABLE_6 VARIABLE_7 VARIABLE_8 VARIABLE_6
predict: return VARIABLE_6 +
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: return VARIABLE_0
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_3 VARIABLE_0 VARIABLE_2 ) + ( (
predict: return VARIABLE_1
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER /
predict: VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_5 FUNCTION_CALL_4 FUNCTION_CALL_3 VARIABLE_1 in return VARIABLE_0
predict: for VARIABLE_1 = NUMBER FUNCTION_CALL_3 ( VARIABLE_0 . FUNCTION_CALL_3 - NUMBER ) /
predict: if VARIABLE_0 index VARIABLE_1 index != VARIABLE_0 VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 index
predict: return false
predict: return true
predict: VARIABLE_3 = true VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER FUNCTION_CALL_6 VARIABLE_4 = NUMBER
predict: while VARIABLE_2 < VARIABLE_4
predict: return VARIABLE_0 if index index VARIABLE_2 != return VARIABLE_2 VARIABLE_4 = return VARIABLE_0 index return VARIABLE_1 in FUNCTION_CALL_4 false return if VARIABLE_3 VARIABLE_1 VARIABLE_4 NUMBER VARIABLE_4 VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 +
predict: return VARIABLE_1
predict: for VARIABLE_5 VARIABLE_0 = VARIABLE_1 VARIABLE_2
predict: if VARIABLE_2 = VARIABLE_0
predict: return true
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER + VARIABLE_1 index VARIABLE_2 VARIABLE_0 *
predict: return VARIABLE_1
Edit distance = 195
