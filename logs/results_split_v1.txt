predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1
predict: return VARIABLE_2 VARIABLE_4 = for VARIABLE_1 VARIABLE_3 = return NUMBER VARIABLE_1 VARIABLE_3 < + + FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4 FUNCTION_CALL_3 VARIABLE_0 -
predict: return false
predict: return true
predict: index VARIABLE_3 and VARIABLE_3 FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 index VARIABLE_5 FUNCTION_CALL_10 index index VARIABLE_4 = VARIABLE_1 NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 index VARIABLE_2 = sublist VARIABLE_1 : - NUMBER VARIABLE_7 and index VARIABLE_6 index VARIABLE_1 = VARIABLE_4 index index VARIABLE_4 VARIABLE_2 = VARIABLE_2 in VARIABLE_4 and index FUNCTION_CALL_12 VARIABLE_4 FUNCTION_CALL_10 = FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 = = VARIABLE_5
predict: for VARIABLE_8 FUNCTION_CALL_5 NUMBER VARIABLE_5
predict: index VARIABLE_6 if and VARIABLE_3 = index VARIABLE_6 index VARIABLE_1 VARIABLE_1 + + and VARIABLE_3 VARIABLE_1 sublist VARIABLE_1 : - NUMBER VARIABLE_7 index NUMBER VARIABLE_0 VARIABLE_3 = index VARIABLE_9 index NUMBER VARIABLE_0 else index VARIABLE_6 index VARIABLE_1 VARIABLE_1 + + and index index VARIABLE_6 index NUMBER VARIABLE_0 VARIABLE_3 = index VARIABLE_9 VARIABLE_2 = index VARIABLE_3 VARIABLE_1 VARIABLE_7 VARIABLE_1 <
predict: return VARIABLE_3
predict: VARIABLE_0 = VARIABLE_1 = EMPTY_LIST >
predict: for VARIABLE_1 <
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 = FUNCTION_CALL_5
predict: return VARIABLE_0
predict: index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * index VARIABLE_1 VARIABLE_2 + return NUMBER = VARIABLE_0
predict: return VARIABLE_0 * NUMBER
predict: return VARIABLE_0 FUNCTION_CALL_2
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 *
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0
predict: while < VARIABLE_4 VARIABLE_1 = VARIABLE_2 + VARIABLE_2 = VARIABLE_1 = return VARIABLE_3 VARIABLE_3 VARIABLE_3
predict: return VARIABLE_0 if VARIABLE_3 = return NUMBER or return VARIABLE_0 VARIABLE_3 < or return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = return NUMBER and VARIABLE_0 - -
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER FUNCTION_CALL_3
predict: return VARIABLE_0 else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 return NUMBER == return NUMBER FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 + STRING_CONST if return VARIABLE_0 VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 return NUMBER VARIABLE_3 = return NUMBER FUNCTION_CALL_3 STRING_CONST index FUNCTION_CALL_5 and STRING_CONST
predict: VARIABLE_1 = NUMBER
predict: while FUNCTION_CALL_4 > NUMBER VARIABLE_1 = VARIABLE_2
predict: if VARIABLE_2 > VARIABLE_1 VARIABLE_1 = VARIABLE_2 =
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: index VARIABLE_2 for return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = return NUMBER index VARIABLE_2 VARIABLE_3 < index FUNCTION_CALL_4 return VARIABLE_0 index VARIABLE_2 sublist VARIABLE_7 / NUMBER + sublist VARIABLE_7 / NUMBER + return VARIABLE_0 index index VARIABLE_2 VARIABLE_6 return VARIABLE_0 index index VARIABLE_2 VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1 = VARIABLE_1 = >
predict: if VARIABLE_0 == NUMBER
predict: return false else
predict: if VARIABLE_0 == NUMBER
predict: return true else
predict: index VARIABLE_1 for VARIABLE_6 return NUMBER VARIABLE_4 + index NUMBER VARIABLE_0 FUNCTION_CALL_3 index return VARIABLE_0 < VARIABLE_1 - - NUMBER VARIABLE_0
predict: index NUMBER VARIABLE_0 if index FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_3 VARIABLE_1 = NUMBER VARIABLE_1
predict: return false
predict: return true
predict: while <= NUMBER VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 != NUMBER VARIABLE_0 + + VARIABLE_0 index FUNCTION_CALL_3 VARIABLE_0
predict: return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1
Edit distance = 334
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 + * NUMBER
predict: return VARIABLE_0 + + VARIABLE_2
predict: for VARIABLE_1 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 < /
predict: if != VARIABLE_0 index VARIABLE_1 in VARIABLE_0 != VARIABLE_0 index VARIABLE_1 - NUMBER - FUNCTION_CALL_4 !=
predict: return false
predict: return true
predict: return NUMBER index VARIABLE_3 = == VARIABLE_2 =
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 + = FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0
predict: return VARIABLE_2
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: else FUNCTION_CALL_3 FUNCTION_CALL_2 VARIABLE_0 index VARIABLE_2 = NUMBER FUNCTION_CALL_2 /
predict: VARIABLE_1 = > EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: return VARIABLE_3 if . for = VARIABLE_1 VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 >
predict: return VARIABLE_1
predict: index VARIABLE_8 = VARIABLE_1 index in index VARIABLE_2 FUNCTION_CALL_5 index in FUNCTION_CALL_5 index in index VARIABLE_2 VARIABLE_0 = VARIABLE_0 FUNCTION_CALL_5 index VARIABLE_2 in return VARIABLE_0 in FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_2 * VARIABLE_1 + NUMBER /
predict: and VARIABLE_3 = == / FUNCTION_CALL_4 VARIABLE_1 =
predict: in for index VARIABLE_2 index return VARIABLE_2 VARIABLE_4 = index VARIABLE_3 = return NUMBER - - index VARIABLE_2 index VARIABLE_3 < or return VARIABLE_2 VARIABLE_4 = index VARIABLE_3 = index VARIABLE_8 = VARIABLE_1 index index VARIABLE_6 VARIABLE_6 + index VARIABLE_2 VARIABLE_0 + for VARIABLE_2 ==
predict: if VARIABLE_0 index VARIABLE_2 != FUNCTION_CALL_4 VARIABLE_0 -
predict: return false if and VARIABLE_3 FUNCTION_CALL_5 ==
predict: return true
predict: return VARIABLE_3 VARIABLE_0 . FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: while VARIABLE_1 in
predict: index FUNCTION_CALL_4 if index index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 > return VARIABLE_0 in VARIABLE_1 FUNCTION_CALL_3 index FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 = VARIABLE_1 VARIABLE_1 . FUNCTION_CALL_4 VARIABLE_0 = VARIABLE_2 VARIABLE_0
predict: for VARIABLE_0 = NUMBER
predict: return VARIABLE_0 if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER and return VARIABLE_0 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER == FUNCTION_CALL_4 index STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 ( index STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 ( index STRING_CONST
predict: else FUNCTION_CALL_4 ( VARIABLE_0 index -
predict: index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 == NUMBER =
predict: in in and VARIABLE_2 + VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_1
predict: VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 + + + = VARIABLE_1 index VARIABLE_2 return VARIABLE_3
predict: VARIABLE_1 = NUMBER
predict: index for and VARIABLE_3 == in = and VARIABLE_3 VARIABLE_4 + index VARIABLE_0 VARIABLE_2 in
predict: return VARIABLE_3
Edit distance = 279
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 != FUNCTION_CALL_5 - VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_1 in VARIABLE_0 + VARIABLE_1 index VARIABLE_2 = FUNCTION_CALL_1
predict: return VARIABLE_2
predict: if VARIABLE_0 = NUMBER ==
predict: return false
predict: if VARIABLE_0 = NUMBER
predict: return true
predict: else return FUNCTION_CALL_3 for index VARIABLE_2 VARIABLE_7 + = NUMBER VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 return VARIABLE_0 and VARIABLE_3 == NUMBER FUNCTION_CALL_4 for ( VARIABLE_0
predict: if VARIABLE_0 index FUNCTION_CALL_8 index VARIABLE_0 ( VARIABLE_1 = NUMBER
predict: return false else return ( continue and VARIABLE_3 VARIABLE_0 NUMBER == NUMBER = index index VARIABLE_3 VARIABLE_0 index for and VARIABLE_3 == if == NUMBER else
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 + VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_1 = VARIABLE_1 + VARIABLE_0 =
predict: return VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 + + + VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_2 <= NUMBER FUNCTION_CALL_7 if
predict: if ==
predict: return index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_4 index VARIABLE_3 = VARIABLE_0 index NUMBER index VARIABLE_5 in index VARIABLE_2 and VARIABLE_3 VARIABLE_0 NUMBER == NUMBER = return VARIABLE_0 EMPTY_LIST and VARIABLE_3 = index VARIABLE_8 = VARIABLE_1 return FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 and VARIABLE_3 VARIABLE_0 index == index VARIABLE_4 == VARIABLE_2 <= VARIABLE_3 < VARIABLE_0 index FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 VARIABLE_0 NUMBER == and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_0 index VARIABLE_3 and VARIABLE_3 VARIABLE_0 VARIABLE_3 VARIABLE_0 NUMBER == and VARIABLE_3 = in VARIABLE_0 if FUNCTION_CALL_2 VARIABLE_0 NUMBER == else return index VARIABLE_8 = VARIABLE_1 index in if FUNCTION_CALL_2 VARIABLE_0 NUMBER == index VARIABLE_4 > VARIABLE_5 if index VARIABLE_2 in VARIABLE_5 for EMPTY_LIST ==
predict: for VARIABLE_2 in VARIABLE_0 = VARIABLE_1 +
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = FUNCTION_CALL_1
predict: return VARIABLE_1
predict: for VARIABLE_1 in FUNCTION_CALL_2 NUMBER NUMBER = FUNCTION_CALL_4 STRING_CONST
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER + STRING_CONST VARIABLE_0
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER + STRING_CONST VARIABLE_0
predict: index VARIABLE_8 = VARIABLE_1 index if index for VARIABLE_0 index FUNCTION_CALL_6 VARIABLE_0 return VARIABLE_0 + return NUMBER VARIABLE_0 index FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 =
predict: index VARIABLE_1 VARIABLE_0 = VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_2 NUMBER
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index index VARIABLE_1 -
predict: return index false if = VARIABLE_2
predict: return true
predict: if VARIABLE_0 = NUMBER or
predict: return true
predict: if VARIABLE_0 % NUMBER == NUMBER or VARIABLE_0 NUMBER
predict: return false
predict: index VARIABLE_8 = VARIABLE_1 index for in VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 in FUNCTION_CALL_4 NUMBER index in return NUMBER VARIABLE_0 sublist VARIABLE_7 / NUMBER + index FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER
predict: if VARIABLE_0 % VARIABLE_1 = NUMBER
predict: return false
predict: else return true
predict: VARIABLE_0 * NUMBER VARIABLE_0 * NUMBER
predict: return VARIABLE_0
Edit distance = 341
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_3 = FUNCTION_CALL_6
predict: index VARIABLE_4 for index VARIABLE_2 = return NUMBER VARIABLE_1 + VARIABLE_7 + = NUMBER index VARIABLE_3 sublist VARIABLE_1 : - return NUMBER < index VARIABLE_4 for index VARIABLE_4 VARIABLE_0 - index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = return VARIABLE_0 = index VARIABLE_4 sublist VARIABLE_1 index VARIABLE_2 = VARIABLE_0
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: return true
predict: VARIABLE_0 * NUMBER * NUMBER
predict: if VARIABLE_0 == NUMBER or
predict: return NUMBER
predict: else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: = VARIABLE_1 = = VARIABLE_0 index VARIABLE_0 NUMBER
predict: index VARIABLE_2 for in index VARIABLE_8 = VARIABLE_1 + VARIABLE_1 FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 index VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 index VARIABLE_3 in and NUMBER VARIABLE_0 index for FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0
predict: return VARIABLE_0
predict: = NUMBER VARIABLE_1 = NUMBER
predict: index VARIABLE_2 = for VARIABLE_6 return NUMBER index VARIABLE_8 index VARIABLE_7 VARIABLE_7 + = VARIABLE_0
predict: if VARIABLE_6 index index VARIABLE_7 index VARIABLE_2 = index NUMBER VARIABLE_0 VARIABLE_0 - VARIABLE_2 + + index VARIABLE_3 index VARIABLE_3 index VARIABLE_7 index VARIABLE_2 = VARIABLE_6 index VARIABLE_7 VARIABLE_6 VARIABLE_5 index VARIABLE_8 NUMBER VARIABLE_0 index VARIABLE_7 + =
predict: index VARIABLE_3 if index VARIABLE_2 = index NUMBER VARIABLE_0 VARIABLE_0 - index VARIABLE_4 + index VARIABLE_4 + index VARIABLE_4 index VARIABLE_7 index VARIABLE_2 = VARIABLE_6 NUMBER VARIABLE_5 index index VARIABLE_2 + VARIABLE_8 index
predict: index VARIABLE_7 if index VARIABLE_4 VARIABLE_1 < or return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER index VARIABLE_8 index VARIABLE_3 index VARIABLE_4 + index VARIABLE_4 + index VARIABLE_7 index VARIABLE_4 index VARIABLE_2 = VARIABLE_0 index VARIABLE_6 VARIABLE_5 VARIABLE_0
predict: else return VARIABLE_6 VARIABLE_5 index index VARIABLE_2 = index VARIABLE_8 index VARIABLE_3 index VARIABLE_3 index VARIABLE_2 + + - = =
predict: return VARIABLE_5
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 in
predict: if FUNCTION_CALL_5 VARIABLE_0 == NUMBER
predict: return false
predict: return true
predict: VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 VARIABLE_0 FUNCTION_CALL_8
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 FUNCTION_CALL_8 + +
predict: if VARIABLE_3 != VARIABLE_4 and VARIABLE_3 != VARIABLE_5 VARIABLE_1 VARIABLE_3 VARIABLE_0 index VARIABLE_3
predict: if else return index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_5 return VARIABLE_0 VARIABLE_3 VARIABLE_2
predict: else VARIABLE_3 VARIABLE_0 == VARIABLE_4 =
predict: return VARIABLE_2
predict: = VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 < VARIABLE_0
predict: if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER
predict: return false VARIABLE_2 + NUMBER return true
predict: VARIABLE_7 == NUMBER VARIABLE_0 VARIABLE_4
predict: if VARIABLE_7 == NUMBER or
predict: return VARIABLE_4
predict: VARIABLE_1 = FUNCTION_CALL_10 / NUMBER VARIABLE_2 = NUMBER == NUMBER VARIABLE_5 = EMPTY_LIST VARIABLE_7 + FUNCTION_CALL_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 / NUMBER VARIABLE_0 index VARIABLE_7 FUNCTION_CALL_10 VARIABLE_4 FUNCTION_CALL_2 VARIABLE_0 index VARIABLE_3 = else
predict: while index VARIABLE_2 VARIABLE_1 < index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index index NUMBER VARIABLE_0 or VARIABLE_0 < VARIABLE_3 VARIABLE_0 index
predict: index NUMBER VARIABLE_0 if return VARIABLE_0 VARIABLE_1 > return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_2 VARIABLE_5 index index index VARIABLE_3 return VARIABLE_0 index VARIABLE_7 VARIABLE_3 VARIABLE_1 VARIABLE_3 < return VARIABLE_2 VARIABLE_4 = VARIABLE_5 VARIABLE_2 index index VARIABLE_3 and index VARIABLE_3 < VARIABLE_2 or VARIABLE_1
predict: while else return in = index VARIABLE_4 + NUMBER VARIABLE_0 VARIABLE_0 = VARIABLE_0 VARIABLE_5 return VARIABLE_0 index VARIABLE_1 index
predict: return VARIABLE_5
predict: VARIABLE_0 = true
predict: index VARIABLE_8 = VARIABLE_1 for return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER return NUMBER index VARIABLE_8 = VARIABLE_1 VARIABLE_3 < index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / return NUMBER index VARIABLE_8 = VARIABLE_1 VARIABLE_3 + + return VARIABLE_0 and return VARIABLE_2 VARIABLE_4 = index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 != NUMBER
predict: return VARIABLE_0
predict: = VARIABLE_0 NUMBER * NUMBER
predict: VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_2 VARIABLE_0 * return VARIABLE_0
predict: = VARIABLE_0 = EMPTY_LIST VARIABLE_1 = NUMBER VARIABLE_2 = NUMBER
predict: while index VARIABLE_8 = VARIABLE_1 == VARIABLE_3 < index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 index index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_2 < VARIABLE_0 index VARIABLE_3
predict: index VARIABLE_8 = VARIABLE_1 if VARIABLE_1 VARIABLE_2 + + sublist index VARIABLE_3 VARIABLE_3 VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_2 index VARIABLE_5 VARIABLE_2 < VARIABLE_4 VARIABLE_1 index VARIABLE_3
predict: in else return FUNCTION_CALL_7 VARIABLE_7 + = NUMBER while index NUMBER VARIABLE_0 = VARIABLE_2 + + index VARIABLE_2 index VARIABLE_4 VARIABLE_0
predict: index NUMBER VARIABLE_0 if VARIABLE_1 FUNCTION_CALL_6 index if VARIABLE_3 VARIABLE_1 VARIABLE_0 = FUNCTION_CALL_8 index VARIABLE_3 index VARIABLE_7 VARIABLE_6 VARIABLE_0 = FUNCTION_CALL_7 NUMBER VARIABLE_3 >
predict: index NUMBER VARIABLE_0 if VARIABLE_1 FUNCTION_CALL_6 index VARIABLE_7 VARIABLE_6 VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 index VARIABLE_4 index VARIABLE_7 VARIABLE_6 VARIABLE_0 NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_4 >
predict: = = VARIABLE_0 = NUMBER
predict: while index VARIABLE_8 = VARIABLE_1 == > return NUMBER + index VARIABLE_8 = VARIABLE_1 VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 - VARIABLE_1 FUNCTION_CALL_2 NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 and == =
predict: index VARIABLE_3 for in return VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * index NUMBER VARIABLE_0 index VARIABLE_3 VARIABLE_2 + index VARIABLE_1 and index FUNCTION_CALL_5 and in VARIABLE_2 . =
predict: return . VARIABLE_2
Edit distance = 638
predict: return NUMBER if VARIABLE_0 = NUMBER or
predict: else * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 -
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 -
predict: if FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 > FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_0 = VARIABLE_2 = VARIABLE_0 = FUNCTION_CALL_6 index FUNCTION_CALL_5
predict: return VARIABLE_0
predict: return in index index VARIABLE_2 * return NUMBER and VARIABLE_3 * NUMBER VARIABLE_0 index VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 = FUNCTION_CALL_5 and
predict: return VARIABLE_2
predict: index VARIABLE_1 = NUMBER
predict: index VARIABLE_2 for VARIABLE_2 = VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_1
predict: return NUMBER VARIABLE_2 = VARIABLE_1 and VARIABLE_1
predict: index VARIABLE_2 for VARIABLE_3 = return NUMBER index VARIABLE_2 VARIABLE_3 < VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_6 + index VARIABLE_2 VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 +
predict: return VARIABLE_1
predict: for VARIABLE_4 VARIABLE_0 NUMBER VARIABLE_1 return NUMBER VARIABLE_1 == index FUNCTION_CALL_5 VARIABLE_0 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_5 NUMBER VARIABLE_2 =
predict: if VARIABLE_1 VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_1 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else FUNCTION_CALL_6 if VARIABLE_2 =
predict: VARIABLE_1 = FUNCTION_CALL_5 . VARIABLE_2
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < . FUNCTION_CALL_8 + +
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 = VARIABLE_0 = VARIABLE_0 * FUNCTION_CALL_5
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 . VARIABLE_2 = VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_0 + NUMBER ) / NUMBER return VARIABLE_0 *
predict: VARIABLE_4 = VARIABLE_0 = NUMBER VARIABLE_2 = NUMBER VARIABLE_5 FUNCTION_CALL_7
predict: while index VARIABLE_5 VARIABLE_3 < index VARIABLE_4 index VARIABLE_3 VARIABLE_3 VARIABLE_3 = index NUMBER VARIABLE_0 VARIABLE_4 VARIABLE_0 index index VARIABLE_5 and index VARIABLE_2 VARIABLE_3 = index VARIABLE_2 sublist VARIABLE_7 / NUMBER + index NUMBER VARIABLE_0 = index VARIABLE_3 VARIABLE_1 VARIABLE_2 +
predict: and VARIABLE_3 VARIABLE_0 + = VARIABLE_0 NUMBER return VARIABLE_3 VARIABLE_0 < NUMBER VARIABLE_2 = VARIABLE_1
predict: while VARIABLE_4 VARIABLE_0 = VARIABLE_2 > VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_4 VARIABLE_5 EMPTY_LIST FUNCTION_CALL_3 VARIABLE_1
predict: if VARIABLE_0 + = in for = index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_0 index NUMBER VARIABLE_0 VARIABLE_0 + = if and VARIABLE_3 = index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = NUMBER FUNCTION_CALL_4 VARIABLE_0 =
predict: VARIABLE_2
predict: index VARIABLE_3 for in index NUMBER VARIABLE_0 VARIABLE_4 VARIABLE_0 index NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_3 = index NUMBER VARIABLE_0 index VARIABLE_2 sublist VARIABLE_7 / NUMBER + index NUMBER VARIABLE_0 = index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index index index NUMBER VARIABLE_0 VARIABLE_2 FUNCTION_CALL_5 index VARIABLE_3
predict: return
predict: VARIABLE_2 = NUMBER
predict: index VARIABLE_3 for in index NUMBER VARIABLE_0 VARIABLE_4 VARIABLE_0 index VARIABLE_6 VARIABLE_6 + index VARIABLE_2 VARIABLE_2 + = VARIABLE_0 = VARIABLE_3 in VARIABLE_1 + = FUNCTION_CALL_4
predict: return VARIABLE_2
Edit distance = 287
predict: VARIABLE_0 index VARIABLE_1 in VARIABLE_0 index VARIABLE_2 + VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 * VARIABLE_0 index VARIABLE_2 + - NUMBER VARIABLE_0 index VARIABLE_1 - VARIABLE_0 index VARIABLE_2 +
predict: VARIABLE_0 = NUMBER
predict: return return NUMBER else VARIABLE_6 index VARIABLE_7 VARIABLE_0 + . * FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_0
predict: return FUNCTION_CALL_4
predict: VARIABLE_1 = NUMBER
predict: index VARIABLE_2 for VARIABLE_2 == return NUMBER VARIABLE_7 + = NUMBER return NUMBER index VARIABLE_8 = VARIABLE_1 return VARIABLE_0 index VARIABLE_2 VARIABLE_2 + VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 - = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * VARIABLE_1 = = FUNCTION_CALL_5
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER VARIABLE_0 =
predict: for VARIABLE_3 index VARIABLE_2 <= index VARIABLE_8 = VARIABLE_1 VARIABLE_3 = index VARIABLE_2 while index VARIABLE_8 = VARIABLE_1 > return NUMBER and index VARIABLE_8 = VARIABLE_1 index VARIABLE_3 VARIABLE_1 VARIABLE_1 * VARIABLE_0 = VARIABLE_0 VARIABLE_0 + = NUMBER
predict: return VARIABLE_0
predict: in for index NUMBER VARIABLE_0 / NUMBER FUNCTION_CALL_4 VARIABLE_2 <= < VARIABLE_1 = NUMBER
predict: index NUMBER VARIABLE_0 if index VARIABLE_8 = VARIABLE_1 ( VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - NUMBER VARIABLE_0
predict: return false and VARIABLE_0 and ( VARIABLE_3 (
predict: return true
predict: if FUNCTION_CALL_6 VARIABLE_4 == NUMBER or
predict: return VARIABLE_4
predict: return NUMBER else return VARIABLE_0 index NUMBER VARIABLE_0 index NUMBER VARIABLE_0 NUMBER / NUMBER FUNCTION_CALL_11 VARIABLE_4 FUNCTION_CALL_7 VARIABLE_3 index VARIABLE_1 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 return VARIABLE_2 VARIABLE_4 = NUMBER VARIABLE_4
predict: return VARIABLE_3
predict: VARIABLE_4 = VARIABLE_2 = NUMBER VARIABLE_2
predict: index NUMBER VARIABLE_0 for = VARIABLE_3 index VARIABLE_2 FUNCTION_CALL_4 and and VARIABLE_3 + return VARIABLE_3 = VARIABLE_1 VARIABLE_4 in VARIABLE_0 VARIABLE_4 in
predict: return VARIABLE_0 for VARIABLE_2 == return VARIABLE_0 VARIABLE_3 < return NUMBER return VARIABLE_0 VARIABLE_3 + + FUNCTION_CALL_2 VARIABLE_0 STRING_CONST FUNCTION_CALL_5
predict: if VARIABLE_0 == NUMBER
predict: return NUMBER else
predict: return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER -
predict: VARIABLE_2 == index index VARIABLE_8 = VARIABLE_1 FUNCTION_CALL_5 index return VARIABLE_3 index return VARIABLE_0 FUNCTION_CALL_5 index index index VARIABLE_3 index VARIABLE_2 VARIABLE_0 VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0
predict: return NUMBER and VARIABLE_2 = VARIABLE_1 = NUMBER
predict: return VARIABLE_0 * NUMBER VARIABLE_0 + FUNCTION_CALL_5 * NUMBER + FUNCTION_CALL_5 index VARIABLE_0 index
predict: for VARIABLE_2 in VARIABLE_0 + = VARIABLE_1
predict: return VARIABLE_1
predict: index VARIABLE_8 = VARIABLE_1 and index NUMBER VARIABLE_0 VARIABLE_7 + = NUMBER VARIABLE_2 + = NUMBER return VARIABLE_0 VARIABLE_3 * VARIABLE_0 NUMBER VARIABLE_3 * and VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1 in VARIABLE_1 = VARIABLE_0 =
predict: return VARIABLE_0
Edit distance = 286
predict: VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0 + = VARIABLE_4 VARIABLE_1 index FUNCTION_CALL_5
predict: return VARIABLE_4
predict: if < NUMBER VARIABLE_2 = NUMBER VARIABLE_0 = NUMBER VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 +
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 + + + VARIABLE_1 index VARIABLE_3 = index
predict: return VARIABLE_2
predict: index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = = and VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_6
predict: for VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_3
predict: for VARIABLE_4 in FUNCTION_CALL_7 NUMBER VARIABLE_3 - -
predict: if VARIABLE_0 index VARIABLE_4 > VARIABLE_4 + NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_0 VARIABLE_1 in VARIABLE_1 index VARIABLE_4 . FUNCTION_CALL_8
predict: return VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + +
predict: for VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 + +
predict: return VARIABLE_0 if index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 == VARIABLE_3 < return VARIABLE_0 index sublist VARIABLE_7 / NUMBER + NUMBER
predict: else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 + NUMBER
predict: VARIABLE_1 + + FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_0 > NUMBER
predict: else NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_5 NUMBER VARIABLE_1 / in
predict: index if return VARIABLE_0 index VARIABLE_3 VARIABLE_0 - VARIABLE_2 NUMBER VARIABLE_1 - index != in VARIABLE_0 index
predict: return false FUNCTION_CALL_5 index
predict: return true
predict: VARIABLE_2 = VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 VARIABLE_2 *
predict: return VARIABLE_0
predict: VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 = VARIABLE_3 = NUMBER
predict: while < VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_0 < NUMBER
predict: true return index if VARIABLE_2 index index FUNCTION_CALL_5 VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_1
predict: if VARIABLE_2 = VARIABLE_1 index
predict: return FUNCTION_CALL_5 VARIABLE_0
predict: else return false
predict: for VARIABLE_2 in VARIABLE_0 + = VARIABLE_1
predict: return VARIABLE_1
predict: index and VARIABLE_3 EMPTY_LIST = VARIABLE_4 . = FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_3
predict: for VARIABLE_2 VARIABLE_0
predict: index VARIABLE_2 if FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 > VARIABLE_1 index index FUNCTION_CALL_5 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 index VARIABLE_7 VARIABLE_6 + = NUMBER VARIABLE_0 index VARIABLE_2 in VARIABLE_0 index index index
predict: return
predict: for VARIABLE_0 FUNCTION_CALL_3 NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER *
predict: return VARIABLE_2
predict: index VARIABLE_3 for in return VARIABLE_0 index VARIABLE_2 index index VARIABLE_8 = VARIABLE_1 index index VARIABLE_0 . FUNCTION_CALL_5 FUNCTION_CALL_4 = VARIABLE_0 index VARIABLE_3
predict: return VARIABLE_2
Edit distance = 214
predict: VARIABLE_0 = VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 + = VARIABLE_1 = VARIABLE_2
predict: return VARIABLE_0
predict: for VARIABLE_0 FUNCTION_CALL_5 NUMBER FUNCTION_CALL_3 VARIABLE_0 = VARIABLE_1
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = NUMBER VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 =
predict: index VARIABLE_8 = VARIABLE_1 index for FUNCTION_CALL_5 return NUMBER and index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 + VARIABLE_0 and VARIABLE_1 = FUNCTION_CALL_11 VARIABLE_1 = in VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_3 = VARIABLE_0 = VARIABLE_1 = NUMBER * NUMBER VARIABLE_2 = VARIABLE_1 * NUMBER = VARIABLE_0 =
predict: VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 * NUMBER return VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 index VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_0 * NUMBER VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1 =
predict: return VARIABLE_0
predict: return VARIABLE_0 NUMBER NUMBER for = FUNCTION_CALL_4
predict: if VARIABLE_0 . FUNCTION_CALL_3 NUMBER VARIABLE_0 = NUMBER FUNCTION_CALL_4 FUNCTION_CALL_4 STRING_CONST > = FUNCTION_CALL_11
predict: if for > if VARIABLE_1 = = and index FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_3 > FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 = STRING_CONST index FUNCTION_CALL_4 FUNCTION_CALL_4 NUMBER FUNCTION_CALL_3
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER EMPTY_LIST FUNCTION_CALL_11 VARIABLE_2 =
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_3 + VARIABLE_1 FUNCTION_CALL_5 . FUNCTION_CALL_5 NUMBER VARIABLE_2 = VARIABLE_1 and
predict: return VARIABLE_2
predict: VARIABLE_0 * NUMBER VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 < + +
predict: if VARIABLE_0 = NUMBER and % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST % NUMBER
predict: else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % = NUMBER FUNCTION_CALL_2 STRING_CONST
predict: else FUNCTION_CALL_2 VARIABLE_0
predict: VARIABLE_2 = NUMBER =
predict: index VARIABLE_8 = VARIABLE_1 index for in return VARIABLE_0 in FUNCTION_CALL_4 index VARIABLE_3 VARIABLE_1 and VARIABLE_3 = VARIABLE_2 +
predict: return VARIABLE_2
Edit distance = 173
predict: VARIABLE_0 + VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + VARIABLE_0 * NUMBER / >
predict: return VARIABLE_0
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / + +
predict: if VARIABLE_0 index VARIABLE_3 != FUNCTION_CALL_5 - VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER NUMBER
predict: while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 . FUNCTION_CALL_5 VARIABLE_2
predict: return VARIABLE_0 if == VARIABLE_6 = VARIABLE_0 NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_1 = VARIABLE_1 <
predict: return VARIABLE_1
predict: if FUNCTION_CALL_10 VARIABLE_0 == NUMBER or
predict: return return VARIABLE_0 else VARIABLE_3 index VARIABLE_8 VARIABLE_1 = index NUMBER VARIABLE_0 VARIABLE_3 = FUNCTION_CALL_10 index index NUMBER VARIABLE_0 return VARIABLE_0 / return NUMBER = index VARIABLE_4 return VARIABLE_2 VARIABLE_4 = VARIABLE_2 index NUMBER EMPTY_LIST index VARIABLE_6 and VARIABLE_3 VARIABLE_2 == index VARIABLE_8 VARIABLE_7 = VARIABLE_1 + VARIABLE_1 VARIABLE_0 return VARIABLE_2 VARIABLE_4 = index VARIABLE_5 and VARIABLE_3 / NUMBER VARIABLE_0
predict: while VARIABLE_7 VARIABLE_8 <= FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_3 = VARIABLE_5 index VARIABLE_8 VARIABLE_7 +
predict: if VARIABLE_2 < VARIABLE_3 index VARIABLE_2 + = VARIABLE_7 else VARIABLE_6 index VARIABLE_3 = VARIABLE_0 = VARIABLE_0 + + VARIABLE_8 VARIABLE_8 VARIABLE_7 + + VARIABLE_8 VARIABLE_7 VARIABLE_6
predict: return VARIABLE_6 =
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * VARIABLE_1 =
predict: return VARIABLE_0
predict: VARIABLE_1 = NUMBER
predict: index VARIABLE_2 in VARIABLE_2 == return NUMBER index VARIABLE_3 = VARIABLE_1 FUNCTION_CALL_6 index return VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = index VARIABLE_8 = VARIABLE_1 sublist VARIABLE_7 / NUMBER + index NUMBER VARIABLE_0 index VARIABLE_3 VARIABLE_3 + + ( index NUMBER VARIABLE_0 return VARIABLE_0 VARIABLE_2 = (
predict: return VARIABLE_1
predict: return VARIABLE_0 * + NUMBER /
predict: VARIABLE_0 = FUNCTION_CALL_3 FUNCTION_CALL_5 FUNCTION_CALL_4 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 return VARIABLE_0
predict: index VARIABLE_8 = VARIABLE_1 index in for VARIABLE_2 == VARIABLE_3 = / NUMBER ( FUNCTION_CALL_3 - NUMBER VARIABLE_0 . (
predict: return VARIABLE_0 if index VARIABLE_1 index VARIABLE_1 VARIABLE_0 != = VARIABLE_0 VARIABLE_1 FUNCTION_CALL_3 - NUMBER VARIABLE_0 .
predict: return false
predict: return true
predict: VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = true VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER FUNCTION_CALL_6 VARIABLE_4 =
predict: while VARIABLE_2 < VARIABLE_4
predict: return VARIABLE_0 if index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 != return VARIABLE_0 index index VARIABLE_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index index VARIABLE_3 = false index VARIABLE_4 if index VARIABLE_3 while VARIABLE_1 index VARIABLE_4 VARIABLE_0 + index VARIABLE_4 + VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 =
predict: return VARIABLE_1
predict: index NUMBER VARIABLE_0 = return VARIABLE_0 = VARIABLE_1 VARIABLE_2
predict: if VARIABLE_2 = VARIABLE_0
predict: return true
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER + + + = VARIABLE_0 index VARIABLE_2 VARIABLE_0
predict: return VARIABLE_1
Edit distance = 296
