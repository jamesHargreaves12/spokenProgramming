omega 0.5
predict: while index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: if return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while - VARIABLE_1 =
predict: while return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: if if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: if return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: return return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / FUNCTION_CALL_5 FUNCTION_CALL_5 for / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_2
predict: if index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: else if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + FUNCTION_CALL_4 VARIABLE_1
predict: if if FUNCTION_CALL_10 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == VARIABLE_0 = VARIABLE_6 VARIABLE_0 = VARIABLE_5 = for VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 for index VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 for VARIABLE_1 + VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while - VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 < FUNCTION_CALL_10 NUMBER VARIABLE_2 VARIABLE_6
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 for VARIABLE_1 VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6 if
predict: else index VARIABLE_1 + - index NUMBER index VARIABLE_7 + NUMBER VARIABLE_6 + ) VARIABLE_6 index VARIABLE_2 VARIABLE_7 VARIABLE_1 )
predict: while - VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_5 VARIABLE_5 index VARIABLE_3 < FUNCTION_CALL_10 for VARIABLE_1 VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 index VARIABLE_3 - VARIABLE_6 for VARIABLE_2 - VARIABLE_6 - VARIABLE_7 + for VARIABLE_3 index VARIABLE_8 VARIABLE_1 -
predict: return NUMBER FUNCTION_CALL_7 index VARIABLE_1 index VARIABLE_2 VARIABLE_1 VARIABLE_2 FUNCTION_CALL_4 if VARIABLE_2
predict: return VARIABLE_1 return VARIABLE_2
predict: else return NUMBER index VARIABLE_2 / VARIABLE_1 . FUNCTION_CALL_4 ( FUNCTION_CALL_5 VARIABLE_0
predict: return return VARIABLE_1 = FUNCTION_CALL_6 VARIABLE_0 + = VARIABLE_2 ) VARIABLE_0 + NUMBER FUNCTION_CALL_7
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_3 NUMBER
predict: return return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 * VARIABLE_1 index VARIABLE_2 FUNCTION_CALL_5 -
predict: for return VARIABLE_2 VARIABLE_4 in VARIABLE_4 in index VARIABLE_1 for * FUNCTION_CALL_4 VARIABLE_5 + VARIABLE_1 for VARIABLE_1 VARIABLE_0 VARIABLE_6 VARIABLE_2 in in VARIABLE_1 and
predict: return return VARIABLE_0
predict: index VARIABLE_2 = in EMPTY_LIST VARIABLE_5 in return NUMBER index FUNCTION_CALL_6 return VARIABLE_0 index VARIABLE_2 VARIABLE_3 in * VARIABLE_1 VARIABLE_3 VARIABLE_0
predict: return return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1 in VARIABLE_4 in
predict: if if VARIABLE_4 > VARIABLE_3 VARIABLE_0 VARIABLE_4 return VARIABLE_0
predict: for = EMPTY_LIST VARIABLE_0
predict: for in VARIABLE_0 VARIABLE_2 < VARIABLE_4 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 in
predict: if if index for and for VARIABLE_0 FUNCTION_CALL_4 VARIABLE_0 + = VARIABLE_4 )
predict: return return VARIABLE_0
predict: VARIABLE_2 index VARIABLE_3 =
predict: for VARIABLE_2 in VARIABLE_4
predict: if if VARIABLE_4 > VARIABLE_2 + VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4
predict: return return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if for VARIABLE_3 VARIABLE_1 FUNCTION_CALL_7 VARIABLE_3 >= VARIABLE_2
predict: return return VARIABLE_2
Edit distance = 630
omega 1.0
predict: while index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: if return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while - VARIABLE_1 =
predict: while return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: if if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: if return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: return return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / NUMBER FUNCTION_CALL_5 FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_5
predict: if index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: else if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + + + VARIABLE_1
predict: if if FUNCTION_CALL_10 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == VARIABLE_0 = VARIABLE_6 VARIABLE_0 = VARIABLE_5 = for VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 for index VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 for VARIABLE_1 + VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while - VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 < FUNCTION_CALL_10 NUMBER VARIABLE_2 VARIABLE_6
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 for VARIABLE_1 VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6 if
predict: else index VARIABLE_1 + - index NUMBER index VARIABLE_7 + NUMBER VARIABLE_6 + ) VARIABLE_6 index VARIABLE_2 VARIABLE_7 VARIABLE_1 )
predict: while - VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_5 VARIABLE_5 index VARIABLE_3 < FUNCTION_CALL_10 for VARIABLE_1 VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 index VARIABLE_3 - VARIABLE_6 for VARIABLE_2 - VARIABLE_6 - VARIABLE_7 + for VARIABLE_3 index VARIABLE_8 VARIABLE_1 -
predict: return NUMBER FUNCTION_CALL_7 index VARIABLE_1 index VARIABLE_2 in VARIABLE_1 . FUNCTION_CALL_4 if VARIABLE_2
predict: return VARIABLE_1 return VARIABLE_2
predict: else return NUMBER index VARIABLE_2 / VARIABLE_1 . FUNCTION_CALL_4 ( FUNCTION_CALL_5 VARIABLE_0
predict: return return VARIABLE_1 = FUNCTION_CALL_6 VARIABLE_0 + = VARIABLE_2 ) VARIABLE_0 + NUMBER FUNCTION_CALL_7
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_3 NUMBER
predict: return return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 * VARIABLE_1 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 -
predict: for return VARIABLE_2 VARIABLE_4 in VARIABLE_4 in index VARIABLE_1 for * FUNCTION_CALL_4 VARIABLE_5 + VARIABLE_1 for VARIABLE_1 VARIABLE_0 VARIABLE_6 VARIABLE_2 in in VARIABLE_1 and
predict: return return VARIABLE_0
predict: index VARIABLE_2 = in EMPTY_LIST VARIABLE_5 in return NUMBER index FUNCTION_CALL_6 return VARIABLE_0 index VARIABLE_2 VARIABLE_3 in * VARIABLE_1 VARIABLE_3 = VARIABLE_0
predict: return return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1 in VARIABLE_4 in
predict: if if VARIABLE_4 > VARIABLE_3 VARIABLE_0 VARIABLE_4 return VARIABLE_0
predict: for = EMPTY_LIST VARIABLE_0
predict: for in VARIABLE_0 VARIABLE_2 < VARIABLE_4 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 in
predict: if if index for and for VARIABLE_0 FUNCTION_CALL_4 VARIABLE_0 + = VARIABLE_4 )
predict: return return VARIABLE_0
predict: VARIABLE_2 index VARIABLE_3 =
predict: for VARIABLE_2 in VARIABLE_4
predict: if if VARIABLE_4 > VARIABLE_2 + VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4
predict: return return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if for VARIABLE_3 VARIABLE_1 VARIABLE_2 VARIABLE_3 FUNCTION_CALL_7 >=
predict: return return VARIABLE_2
Edit distance = 636
omega 1.5
predict: while index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: if return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while - VARIABLE_1 =
predict: while return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: if if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: if return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: return return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / NUMBER FUNCTION_CALL_5 FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 == NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_5
predict: if index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: else if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + + + VARIABLE_1
predict: if if FUNCTION_CALL_10 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == VARIABLE_0 = VARIABLE_6 VARIABLE_0 = VARIABLE_5 = for VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 for index VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 for VARIABLE_1 + VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while - VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 < FUNCTION_CALL_10 NUMBER VARIABLE_2 VARIABLE_6
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 for VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6 if
predict: else index VARIABLE_1 + - index NUMBER index VARIABLE_7 + NUMBER VARIABLE_6 + ) VARIABLE_6 index VARIABLE_2 VARIABLE_7 VARIABLE_1 )
predict: while - VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_3 < FUNCTION_CALL_10 VARIABLE_2 = VARIABLE_1 = VARIABLE_2 + VARIABLE_6 index VARIABLE_3 - VARIABLE_7 VARIABLE_6 ) VARIABLE_7 ) VARIABLE_6 - - VARIABLE_7 + for VARIABLE_1 VARIABLE_8 -
predict: return NUMBER FUNCTION_CALL_7 index VARIABLE_1 index VARIABLE_2 in VARIABLE_1 . FUNCTION_CALL_4 if VARIABLE_2
predict: return VARIABLE_1 return VARIABLE_2
predict: else return NUMBER index VARIABLE_2 / VARIABLE_1 . FUNCTION_CALL_4 ( FUNCTION_CALL_5 VARIABLE_0 =
predict: return return VARIABLE_1 = FUNCTION_CALL_6 VARIABLE_0 + = VARIABLE_2 ) VARIABLE_0 + NUMBER FUNCTION_CALL_7
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_3 NUMBER
predict: return return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 * VARIABLE_1 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 -
predict: for return VARIABLE_2 VARIABLE_4 in VARIABLE_4 in index VARIABLE_1 for * FUNCTION_CALL_4 VARIABLE_5 + VARIABLE_1 for VARIABLE_1 VARIABLE_0 VARIABLE_6 VARIABLE_2 in in VARIABLE_1 and
predict: return return VARIABLE_0
predict: index VARIABLE_2 = in EMPTY_LIST VARIABLE_5 in return NUMBER index FUNCTION_CALL_6 return VARIABLE_0 index VARIABLE_2 VARIABLE_3 in * VARIABLE_1 VARIABLE_3 = VARIABLE_0
predict: return return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1 in VARIABLE_4 in
predict: if if VARIABLE_4 > VARIABLE_3 VARIABLE_0 index VARIABLE_4 return VARIABLE_0
predict: for = EMPTY_LIST VARIABLE_0
predict: for in VARIABLE_0 VARIABLE_2 < VARIABLE_4 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 in
predict: if if index for and for VARIABLE_0 FUNCTION_CALL_4 VARIABLE_0 + = VARIABLE_4 )
predict: return return VARIABLE_0
predict: VARIABLE_2 index VARIABLE_3 =
predict: for VARIABLE_2 in VARIABLE_4
predict: if if VARIABLE_4 > VARIABLE_2 + VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4
predict: return return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if for VARIABLE_3 VARIABLE_1 index VARIABLE_3 VARIABLE_2 FUNCTION_CALL_7 >=
predict: return return VARIABLE_2
Edit distance = 641
omega 2.0
predict: while index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: if return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while - VARIABLE_1 =
predict: while return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: if if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + = NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: if return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: return return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / NUMBER FUNCTION_CALL_5 FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 == NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_5
predict: if index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: else if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + + + VARIABLE_1
predict: if if FUNCTION_CALL_10 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == VARIABLE_0 = VARIABLE_6 VARIABLE_0 = VARIABLE_5 = for VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 for index VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 for VARIABLE_1 + VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while - VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 < FUNCTION_CALL_10 NUMBER VARIABLE_2 VARIABLE_6
predict: if if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 = VARIABLE_1 index VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 VARIABLE_7 FUNCTION_CALL_11 VARIABLE_6 for
predict: else index VARIABLE_1 + - index NUMBER index VARIABLE_7 + NUMBER VARIABLE_6 + ) VARIABLE_6 index VARIABLE_2 VARIABLE_7 VARIABLE_1 )
predict: while - VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_3 < FUNCTION_CALL_10 for VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 index VARIABLE_3 - VARIABLE_6 for VARIABLE_2 - VARIABLE_6 - VARIABLE_7 + for VARIABLE_1 VARIABLE_8 -
predict: return NUMBER FUNCTION_CALL_7 index VARIABLE_1 index VARIABLE_2 in VARIABLE_1 . FUNCTION_CALL_4 if VARIABLE_2
predict: return VARIABLE_1 return VARIABLE_2
predict: else return NUMBER index VARIABLE_2 / VARIABLE_1 . FUNCTION_CALL_4 ( FUNCTION_CALL_5 VARIABLE_0 =
predict: return return VARIABLE_1 = FUNCTION_CALL_6 VARIABLE_0 + = VARIABLE_2 ) VARIABLE_0 + NUMBER FUNCTION_CALL_7
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_3 NUMBER
predict: return return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 index FUNCTION_CALL_5 VARIABLE_0 -
predict: for return VARIABLE_2 VARIABLE_4 in VARIABLE_4 in index VARIABLE_1 for * FUNCTION_CALL_4 VARIABLE_5 + VARIABLE_1 for VARIABLE_1 VARIABLE_0 VARIABLE_6 VARIABLE_2 in in VARIABLE_1 and
predict: return return VARIABLE_0
predict: index VARIABLE_2 = in EMPTY_LIST VARIABLE_5 in return NUMBER index FUNCTION_CALL_6 return VARIABLE_0 index VARIABLE_2 VARIABLE_3 in * VARIABLE_1 VARIABLE_3 = VARIABLE_0
predict: return return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1 in VARIABLE_4 in
predict: if if VARIABLE_4 > VARIABLE_3 VARIABLE_0 index VARIABLE_4 return VARIABLE_0
predict: for = EMPTY_LIST VARIABLE_0
predict: for in VARIABLE_0 VARIABLE_2 < VARIABLE_4 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 in
predict: if if index for and for VARIABLE_0 FUNCTION_CALL_4 VARIABLE_0 + = VARIABLE_4 )
predict: return return VARIABLE_0
predict: VARIABLE_2 index VARIABLE_3 =
predict: for VARIABLE_2 in VARIABLE_4
predict: if if VARIABLE_4 > VARIABLE_2 + VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4
predict: return return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if for VARIABLE_3 VARIABLE_1 index VARIABLE_3 VARIABLE_2 FUNCTION_CALL_7 >=
predict: return return VARIABLE_2
Edit distance = 640
omega 2.5
predict: while index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: if return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while - VARIABLE_1 =
predict: while return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: if if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + = NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: if return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: return return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / NUMBER FUNCTION_CALL_5 FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 == NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_5
predict: if index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: else return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: else if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + + + VARIABLE_1
predict: if if FUNCTION_CALL_10 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == VARIABLE_0 = VARIABLE_6 VARIABLE_0 = VARIABLE_5 = for VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 for index VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 for VARIABLE_1 + VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while - VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 < FUNCTION_CALL_10 NUMBER VARIABLE_2 VARIABLE_6
predict: if if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 = VARIABLE_1 VARIABLE_7 index VARIABLE_3 VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6 for
predict: else index VARIABLE_1 + - index NUMBER index VARIABLE_7 + NUMBER VARIABLE_6 + ) VARIABLE_6 index VARIABLE_2 VARIABLE_7 VARIABLE_1 )
predict: while - VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_3 < FUNCTION_CALL_10 for VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 index VARIABLE_3 - VARIABLE_6 for VARIABLE_2 - VARIABLE_6 - VARIABLE_7 + for VARIABLE_1 VARIABLE_8 -
predict: return NUMBER FUNCTION_CALL_7 index VARIABLE_1 index VARIABLE_2 in VARIABLE_1 . FUNCTION_CALL_4 if VARIABLE_2
predict: return VARIABLE_1 return VARIABLE_2
predict: else return NUMBER index VARIABLE_2 / VARIABLE_1 . FUNCTION_CALL_4 ( FUNCTION_CALL_5 VARIABLE_0 =
predict: return return VARIABLE_1 = FUNCTION_CALL_6 VARIABLE_0 + = VARIABLE_2 ) VARIABLE_0 + NUMBER FUNCTION_CALL_7
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_3 NUMBER
predict: return return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 index FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: for return VARIABLE_2 VARIABLE_4 in VARIABLE_4 in index VARIABLE_1 for * FUNCTION_CALL_4 VARIABLE_5 + VARIABLE_1 for VARIABLE_1 VARIABLE_0 VARIABLE_6 VARIABLE_2 in in VARIABLE_1 and
predict: return return VARIABLE_0
predict: index VARIABLE_2 = in EMPTY_LIST VARIABLE_5 in return NUMBER index FUNCTION_CALL_6 return VARIABLE_0 index VARIABLE_2 VARIABLE_3 in * VARIABLE_1 VARIABLE_3 = VARIABLE_0
predict: return return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1 in VARIABLE_4 in
predict: if if VARIABLE_4 > VARIABLE_3 VARIABLE_0 index VARIABLE_4 return VARIABLE_0
predict: for = EMPTY_LIST VARIABLE_0
predict: for in VARIABLE_0 VARIABLE_2 < VARIABLE_4 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 in
predict: if if index for and for VARIABLE_0 FUNCTION_CALL_4 VARIABLE_0 + = VARIABLE_4 )
predict: return return VARIABLE_0
predict: VARIABLE_2 index VARIABLE_3 =
predict: for VARIABLE_2 in VARIABLE_4
predict: if if VARIABLE_4 > VARIABLE_2 + VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4
predict: return return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if for VARIABLE_3 VARIABLE_1 index VARIABLE_3 VARIABLE_2 FUNCTION_CALL_7 >=
predict: return return VARIABLE_2
Edit distance = 642
