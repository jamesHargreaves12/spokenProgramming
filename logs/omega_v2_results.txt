omega 0.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 VARIABLE_7 == ( if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 = ( VARIABLE_7 == ( if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . NUMBER VARIABLE_0 > index VARIABLE_4 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= NUMBER if FUNCTION_CALL_6 VARIABLE_0 ( VARIABLE_0 NUMBER NUMBER VARIABLE_3 != return FUNCTION_CALL_6 VARIABLE_1 . VARIABLE_2 <= NUMBER ( VARIABLE_0 FUNCTION_CALL_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 VARIABLE_1 = VARIABLE_0 return FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 ( return FUNCTION_CALL_5 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and = FUNCTION_CALL_6
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if NUMBER VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER ( index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 VARIABLE in VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 VARIABLE_1 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 ( index VARIABLE_1 - VARIABLE_0 VARIABLE_2 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index in FUNCTION_CALL_7 NUMBER or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 NUMBER / VARIABLE_2 . FUNCTION_CALL_7 return FUNCTION_CALL_5 ( VARIABLE_1 / NUMBER VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_3 VARIABLE_2 = VARIABLE_2 VARIABLE_0 VARIABLE_2 = FUNCTION_CALL_3 return
predict: FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 = . index VARIABLE_3 FUNCTION_CALL_7 index index VARIABLE_2 index VARIABLE_4 + NUMBER VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER and if VARIABLE_5 index VARIABLE_2 = while VARIABLE_5 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_2 or if VARIABLE_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_2 + VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_7 index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_4 VARIABLE_1 index index VARIABLE_4 + if VARIABLE_5 index VARIABLE_2 = index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if VARIABLE_5 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 index index VARIABLE_4 + if VARIABLE_5 in FUNCTION_CALL_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 = index VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_2 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 while in return if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_5 if VARIABLE_5 index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 return false else return true return VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_2 VARIABLE_1 = in FUNCTION_CALL_5 VARIABLE_5 +
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index FUNCTION_CALL_10 while VARIABLE_5 < index VARIABLE_2 VARIABLE_0 . index VARIABLE_2 VARIABLE_0 . in return VARIABLE_7 + VARIABLE_8 NUMBER index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 else return if VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == FUNCTION_CALL_12 VARIABLE_9 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 ( index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = VARIABLE_0 index VARIABLE_2 ( VARIABLE_0 NUMBER index VARIABLE_2 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( VARIABLE_0 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( in VARIABLE_0 index VARIABLE_7 VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 == VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = return FUNCTION_CALL_5 index if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_5 index in VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_5 - * VARIABLE_1 return FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index * VARIABLE
predict: fo
r VARIABLE_4 VARIABLE_2 VARIABLE in index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * return VARIABLE_0 ( VARIABLE_0 NUMBER VARIABLE for in index VARIABLE_8 NUMBER index VARIABLE_2 VARIABLE_5 FUNCTION_CALL_9 and VARIABLE_3 NUMBER return VARIABLE_5
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: return index VARIABLE_2 VARIABLE_0 . VARIABLE_4 VARIABLE_0 = VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 ( VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 ( VARIABLE_0 VARIABLE for in VARIABLE_0 VARIABLE_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 if VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 VARIABLE_1 VARIABLE_1 = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 FUNCTION_CALL_8 VARIABLE_5 ( index VARIABLE_4 VARIABLE_1 VARIABLE in for index VARIABLE_3 VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: return index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_3 > if VARIABLE_4 VARIABLE_3 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 > NUMBER return VARIABLE_2 = FUNCTION_CALL_6 if FUNCTION_CALL_7 >= VARIABLE_2
Edit distance = 1086omega 1.0
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 VARIABLE_7 == ( if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 = ( VARIABLE_7 == ( if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . NUMBER VARIABLE_0 > index VARIABLE_4 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= NUMBER if FUNCTION_CALL_6 VARIABLE_0 ( VARIABLE_0 NUMBER NUMBER VARIABLE_3 != return FUNCTION_CALL_6 VARIABLE_1 . VARIABLE_2 <= NUMBER ( VARIABLE_0 FUNCTION_CALL_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 VARIABLE_1 = VARIABLE_0 return FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 ( return FUNCTION_CALL_5 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and = FUNCTION_CALL_6
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if NUMBER VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER ( index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 VARIABLE in VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 VARIABLE_1 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 ( index VARIABLE_1 - VARIABLE_0 VARIABLE_2 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index in FUNCTION_CALL_7 NUMBER or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 NUMBER / VARIABLE_2 . FUNCTION_CALL_7 return FUNCTION_CALL_5 ( VARIABLE_1 / NUMBER VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_3 VARIABLE_2 = VARIABLE_2 VARIABLE_0 VARIABLE_2 = FUNCTION_CALL_3 return
predict: FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 = . index VARIABLE_3 FUNCTION_CALL_7 index index VARIABLE_2 index VARIABLE_4 + NUMBER VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER and if VARIABLE_5 index VARIABLE_2 = while VARIABLE_5 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_2 or if VARIABLE_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_2 + VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_7 index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_4 VARIABLE_1 index index VARIABLE_4 + if VARIABLE_5 index VARIABLE_2 = index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if VARIABLE_5 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 index index VARIABLE_4 + if VARIABLE_5 in FUNCTION_CALL_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 = index VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_2 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 while in return if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_5 if VARIABLE_5 index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 return false else return true return VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_2 VARIABLE_1 = in FUNCTION_CALL_5 VARIABLE_5 +
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index FUNCTION_CALL_10 while VARIABLE_5 < index VARIABLE_2 VARIABLE_0 . index VARIABLE_2 VARIABLE_0 . in return VARIABLE_7 + VARIABLE_8 NUMBER index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 else return if VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == FUNCTION_CALL_12 VARIABLE_9 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 ( index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = VARIABLE_0 index VARIABLE_2 ( VARIABLE_0 NUMBER index VARIABLE_2 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( VARIABLE_0 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( in VARIABLE_0 index VARIABLE_7 VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 == VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = return FUNCTION_CALL_5 index if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_5 index in VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_5 - * VARIABLE_1 return FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE
predict: for VARIABLE_4 VARIABLE_2 VARIABLE in index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * return VARIABLE_0 ( VARIABLE_0 NUMBER VARIABLE for in index VARIABLE_8 NUMBER index VARIABLE_2 VARIABLE_5 FUNCTION_CALL_9 and VARIABLE_3 NUMBER return VARIABLE_5
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: return index VARIABLE_2 VARIABLE_0 . VARIABLE_4 VARIABLE_0 = VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 ( VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 ( VARIABLE_0 VARIABLE for in VARIABLE_0 VARIABLE_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 if VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 VARIABLE_1 VARIABLE_1 = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 FUNCTION_CALL_8 VARIABLE_5 ( index VARIABLE_4 VARIABLE_1 VARIABLE in for index VARIABLE_3 VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: return index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_3 > if VARIABLE_4 VARIABLE_3 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 > NUMBER VARIABLE_2 return VARIABLE_2 = FUNCTION_CALL_6 if FUNCTION_CALL_7 >=
Edit distance = 1085omega 1.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 VARIABLE_7 == ( if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 = ( VARIABLE_7 == ( if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . NUMBER VARIABLE_0 > index VARIABLE_4 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= NUMBER if FUNCTION_CALL_6 VARIABLE_0 ( VARIABLE_0 NUMBER NUMBER VARIABLE_3 != return FUNCTION_CALL_6 VARIABLE_1 . VARIABLE_2 <= NUMBER ( VARIABLE_0 FUNCTION_CALL_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 VARIABLE_1 = VARIABLE_0 return FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 ( return FUNCTION_CALL_5 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and = FUNCTION_CALL_6
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if NUMBER VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER ( index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 VARIABLE in VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 VARIABLE_1 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 ( index VARIABLE_1 - VARIABLE_0 VARIABLE_2 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index in FUNCTION_CALL_7 NUMBER or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 NUMBER / VARIABLE_2 . FUNCTION_CALL_7 return FUNCTION_CALL_5 ( VARIABLE_1 / NUMBER VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_3 VARIABLE_2 = VARIABLE_2 VARIABLE_0 VARIABLE_2 = FUNCTION_CALL_3 return
predict: FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 = . index VARIABLE_3 FUNCTION_CALL_7 index index VARIABLE_2 index VARIABLE_4 + NUMBER VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER and if VARIABLE_5 index VARIABLE_2 = while VARIABLE_5 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_2 or if VARIABLE_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_2 + VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_7 index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_4 VARIABLE_1 index index VARIABLE_4 + if VARIABLE_5 index VARIABLE_2 = index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if VARIABLE_5 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 index index VARIABLE_4 + if VARIABLE_5 in FUNCTION_CALL_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 = index VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_2 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 while in return if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_5 if VARIABLE_5 index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 return false else return true return VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_2 VARIABLE_1 = in FUNCTION_CALL_5 VARIABLE_5 +
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index FUNCTION_CALL_10 while VARIABLE_5 < index VARIABLE_2 VARIABLE_0 . index VARIABLE_2 VARIABLE_0 . in return VARIABLE_7 + VARIABLE_8 NUMBER index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 else return if VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == FUNCTION_CALL_12 VARIABLE_9 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 ( index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = VARIABLE_0 index VARIABLE_2 ( VARIABLE_0 NUMBER index VARIABLE_2 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( VARIABLE_0 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( in VARIABLE_0 index VARIABLE_7 VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 == VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = return FUNCTION_CALL_5 index if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_5 index in VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 * VARIABLE_1 return VARIABLE_0 - NUMBER FUNCTION_CALL_3
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE
predict: for VARIABLE_4 VARIABLE_2 VARIABLE in index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * return VARIABLE_0 ( VARIABLE_0 NUMBER VARIABLE for in index VARIABLE_8 NUMBER index VARIABLE_2 VARIABLE_5 FUNCTION_CALL_9 and VARIABLE_3 NUMBER return VARIABLE_5
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: return index VARIABLE_2 VARIABLE_0 . VARIABLE_4 VARIABLE_0 = VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 ( VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 ( VARIABLE_0 VARIABLE for in VARIABLE_0 VARIABLE_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 if VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 VARIABLE_1 VARIABLE_1 = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 FUNCTION_CALL_8 VARIABLE_5 ( index VARIABLE_4 VARIABLE_1 VARIABLE in for index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = EMPTY_LIST > VARIABLE_0
predict: return index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_3 > if VARIABLE_4 VARIABLE_3 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 > NUMBER VARIABLE_2 return VARIABLE_2 = FUNCTION_CALL_6 if FUNCTION_CALL_7 >=
Edit distance = 1088omega 2.0
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 VARIABLE_7 == ( if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 = ( VARIABLE_7 == ( if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . NUMBER VARIABLE_0 > index VARIABLE_4 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= NUMBER if FUNCTION_CALL_6 VARIABLE_0 ( VARIABLE_0 NUMBER NUMBER VARIABLE_3 != return FUNCTION_CALL_6 VARIABLE_1 . VARIABLE_2 <= NUMBER ( VARIABLE_0 FUNCTION_CALL_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 VARIABLE_1 = VARIABLE_0 return FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 ( return FUNCTION_CALL_5 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and = FUNCTION_CALL_6
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if NUMBER VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER ( index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 VARIABLE in VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 VARIABLE_1 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 ( index VARIABLE_1 - VARIABLE_0 VARIABLE_2 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index in FUNCTION_CALL_7 NUMBER or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 NUMBER / VARIABLE_2 . FUNCTION_CALL_7 return FUNCTION_CALL_5 ( VARIABLE_1 / NUMBER VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_3 VARIABLE_2 = VARIABLE_2 VARIABLE_0 VARIABLE_2 = FUNCTION_CALL_3 return
predict: FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 = . index VARIABLE_3 FUNCTION_CALL_7 index index VARIABLE_2 index VARIABLE_4 + NUMBER VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER and if VARIABLE_5 index VARIABLE_2 = while VARIABLE_5 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_2 or if VARIABLE_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_2 + VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_7 index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_4 VARIABLE_1 index index VARIABLE_4 + if VARIABLE_5 index VARIABLE_2 = index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if VARIABLE_5 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 index index VARIABLE_4 + if VARIABLE_5 in FUNCTION_CALL_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 = index VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_2 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 while in return if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_5 if VARIABLE_5 index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 return false else return true return VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_2 VARIABLE_1 = in FUNCTION_CALL_5 VARIABLE_5 +
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index FUNCTION_CALL_10 while VARIABLE_5 < index VARIABLE_2 VARIABLE_0 . index VARIABLE_2 VARIABLE_0 . in return VARIABLE_7 + VARIABLE_8 NUMBER index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 else return if VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == FUNCTION_CALL_12 VARIABLE_9 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 ( index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = VARIABLE_0 index VARIABLE_2 ( VARIABLE_0 NUMBER index VARIABLE_2 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( VARIABLE_0 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( in VARIABLE_0 index VARIABLE_7 VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 == VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = return FUNCTION_CALL_5 index if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_5 index in VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 * VARIABLE_1 return VARIABLE_0 - NUMBER FUNCTION_CALL_3
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE in
predict: for VARIABLE_4 VARIABLE_2 VARIABLE in index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * return VARIABLE_0 ( VARIABLE_0 NUMBER VARIABLE for in index VARIABLE_8 NUMBER index VARIABLE_2 VARIABLE_5 FUNCTION_CALL_9 and VARIABLE_3 NUMBER return VARIABLE_5
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: return index VARIABLE_2 VARIABLE_0 . VARIABLE_4 VARIABLE_0 = VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 ( VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 ( VARIABLE_0 VARIABLE for in VARIABLE_0 VARIABLE_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 if VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 VARIABLE_1 VARIABLE_1 = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 FUNCTION_CALL_8 VARIABLE_5 ( index VARIABLE_4 VARIABLE_1 VARIABLE in for index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = EMPTY_LIST > VARIABLE_0
predict: return index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_3 > if VARIABLE_4 VARIABLE_3 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = FUNCTION_CALL_6 > NUMBER VARIABLE_2 return VARIABLE_2 if FUNCTION_CALL_7 >=
Edit distance = 1089omega 2.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 VARIABLE_7 == ( if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 = ( VARIABLE_7 == ( if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . NUMBER VARIABLE_0 > index VARIABLE_4 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= NUMBER if FUNCTION_CALL_6 VARIABLE_0 ( VARIABLE_0 NUMBER NUMBER VARIABLE_3 != return FUNCTION_CALL_6 VARIABLE_1 . VARIABLE_2 <= NUMBER ( VARIABLE_0 FUNCTION_CALL_3 VARIABLE_4 VARIABLE_0 VARIABLE_1 VARIABLE_1 = VARIABLE_0 return FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 ( return FUNCTION_CALL_5 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if return FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and = FUNCTION_CALL_6
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if NUMBER VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER ( index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 VARIABLE in VARIABLE_4 VARIABLE_0 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 VARIABLE_1 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 ( index VARIABLE_1 - VARIABLE_0 VARIABLE_2 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index in FUNCTION_CALL_7 NUMBER or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 NUMBER / VARIABLE_2 . FUNCTION_CALL_7 return FUNCTION_CALL_5 ( VARIABLE_1 / NUMBER VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_3 VARIABLE_2 = VARIABLE_2 VARIABLE_0 VARIABLE_2 = FUNCTION_CALL_3 return
predict: FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 = . index VARIABLE_3 FUNCTION_CALL_7 index index VARIABLE_2 index VARIABLE_4 + NUMBER VARIABLE_0 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 index VARIABLE_2 = in FUNCTION_CALL_7 NUMBER and if VARIABLE_5 index VARIABLE_2 = while VARIABLE_5 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_2 or if VARIABLE_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_2 + VARIABLE_0 index VARIABLE_7 VARIABLE_3 index FUNCTION_CALL_7 index index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_4 VARIABLE_1 index index VARIABLE_4 + if VARIABLE_5 index VARIABLE_2 = index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if VARIABLE_5 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_7 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 index index VARIABLE_4 + if VARIABLE_5 in FUNCTION_CALL_5 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 = index VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 return return false else return true in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if index VARIABLE_2 VARIABLE_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_5 index VARIABLE_4 VARIABLE_1 in FUNCTION_CALL_4 while in return if VARIABLE_5 FUNCTION_CALL_4 if VARIABLE_5 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = in FUNCTION_CALL_5 if VARIABLE_5 index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 return false else return true return VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_2 VARIABLE_1 = in FUNCTION_CALL_5 VARIABLE_5 +
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while index VARIABLE_2 VARIABLE_0 . in VARIABLE_7 VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index FUNCTION_CALL_10 while VARIABLE_5 < index VARIABLE_2 VARIABLE_0 . index VARIABLE_2 VARIABLE_0 . in return VARIABLE_7 + VARIABLE_8 NUMBER index VARIABLE_6 VARIABLE_6 + = NUMBER ( index VARIABLE_8 index VARIABLE_6 VARIABLE_2 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 else return if VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = NUMBER ( VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == FUNCTION_CALL_12 VARIABLE_9 VARIABLE_7 index index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 ( index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = VARIABLE_0 index VARIABLE_2 ( VARIABLE_0 NUMBER index VARIABLE_2 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( VARIABLE_0 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return ( in VARIABLE_0 index VARIABLE_7 VARIABLE_4 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 == VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER if if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = return FUNCTION_CALL_5 index if FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER in FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 index VARIABLE_4 + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in FUNCTION_CALL_5 index in VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 * VARIABLE_1 return VARIABLE_0 - NUMBER FUNCTION_CALL_3
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE in
predict: for VARIABLE_4 VARIABLE_2 VARIABLE in index VARIABLE_4 VARIABLE_1 = ( index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * return VARIABLE_0 ( VARIABLE_0 NUMBER VARIABLE for in index VARIABLE_8 NUMBER index VARIABLE_2 VARIABLE_5 FUNCTION_CALL_9 and VARIABLE_3 NUMBER return VARIABLE_5
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: return index VARIABLE_2 VARIABLE_0 . VARIABLE_4 VARIABLE_0 = VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 ( VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 ( VARIABLE_0 VARIABLE for in VARIABLE_0 VARIABLE_2 VARIABLE_0 index VARIABLE_7 VARIABLE_4 if VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 VARIABLE_1 VARIABLE_1 = or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 FUNCTION_CALL_8 VARIABLE_5 ( index VARIABLE_4 VARIABLE_1 VARIABLE in for index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = EMPTY_LIST > VARIABLE_0
predict: return index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_3 > if VARIABLE_4 VARIABLE_3 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 if VARIABLE_0 > NUMBER VARIABLE_2 return VARIABLE_2 FUNCTION_CALL_7 >= FUNCTION_CALL_6
Edit distance = 1086omega 0.5
predict: while index VARIABLE_2 and index VARIABLE_1 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 index VARIABLE_1 VARIABLE_2 while VARIABLE_2 VARIABLE_0 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 return VARIABLE_2 index VARIABLE_2 while return . VARIABLE_1 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 index VARIABLE_1 = and VARIABLE_2 VARIABLE_0 VARIABLE_2 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 ( NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 FUNCTION_CALL_9 if VARIABLE_7 VARIABLE_2 VARIABLE_2 VARIABLE VARIABLE_1 = FUNCTION_CALL_10 ( and VARIABLE_2 VARIABLE_0 index VARIABLE_6 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 ( FUNCTION_CALL_5 index VARIABLE_1 VARIABLE_2 < FUNCTION_CALL_6 FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 return NUMBER return return index VARIABLE_2 sublist VARIABLE_1 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index = VARIABLE_0 + VARIABLE_7 / VARIABLE_2 in VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 return VARIABLE_3 < in NUMBER return ( VARIABLE_6 = - NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index NUMBER VARIABLE_3 . FUNCTION_CALL_5 FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == NUMBER while index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_1 index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 return = index VARIABLE_6 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 index VARIABLE_3 index VARIABLE_5 index VARIABLE_1 FUNCTION_CALL_4 sublist VARIABLE_1 NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = VARIABLE_3 ) VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 VARIABLE_6 return VARIABLE_1 return VARIABLE_4 > NUMBER return . index VARIABLE_7 + ( index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 == index VARIABLE_7 VARIABLE_3 VARIABLE_1 index index VARIABLE_8 VARIABLE_6 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return if VARIABLE_3 VARIABLE_0 index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 index VARIABLE_3 VARIABLE_3 VARIABLE_6 while VARIABLE_5 < = NUMBER index VARIABLE_7 VARIABLE_3 == index VARIABLE_6 VARIABLE_5 = = NUMBER ( VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( NUMBER index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( sublist VARIABLE_1 = VARIABLE_4 sublist VARIABLE_1 VARIABLE VARIABLE_2 VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 ==
predict: index VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 return VARIABLE_1 index VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / NUMBER return FUNCTION_CALL_5 return VARIABLE_4 VARIABLE FUNCTION_CALL_6 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + NUMBER return FUNCTION_CALL_4 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1 VARIABLE
predict: VARIABLE_2 FUNCTION_CALL_5 in VARIABLE_0 index VARIABLE_2 VARIABLE_1 return VARIABLE_0 - FUNCTION_CALL_2 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 = VARIABLE_0 * VARIABLE_1 -
predict: index VARIABLE_4 VARIABLE_4 for in index VARIABLE_1 ( * VARIABLE_1 index VARIABLE_5 = return ( VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_8 in FUNCTION_CALL_9 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_6 VARIABLE_3 EMPTY_LIST
predict: for VARIABLE in VARIABLE_1 > VARIABLE_3 = NUMBER return VARIABLE_0 + if VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_4
predict: return VARIABLE_4 VARIABLE_1 = FUNCTION_CALL_10 ( return VARIABLE_0 ( and VARIABLE_2 VARIABLE_1 VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_3 return VARIABLE_1 VARIABLE_1 . ( VARIABLE_1 for VARIABLE_3 EMPTY_LIST = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 and index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 VARIABLE_2 in for VARIABLE_4 VARIABLE_3 index VARIABLE_2
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 > NUMBER VARIABLE_3 return VARIABLE_2 VARIABLE_0 >= FUNCTION_CALL_7 EMPTY_LIST for VARIABLE_3 VARIABLE_0
Edit distance = 718omega 1.0
predict: while index VARIABLE_2 and index VARIABLE_1 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 index VARIABLE_1 VARIABLE_2 while VARIABLE_2 VARIABLE_0 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 return VARIABLE_2 index VARIABLE_2 while return . VARIABLE_1 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 index VARIABLE_1 = and VARIABLE_2 VARIABLE_0 VARIABLE_2 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 ( NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 FUNCTION_CALL_9 if VARIABLE_7 VARIABLE_2 VARIABLE_2 VARIABLE VARIABLE_1 = FUNCTION_CALL_10 ( and VARIABLE_2 VARIABLE_0 index VARIABLE_6 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 ( FUNCTION_CALL_5 index VARIABLE_1 VARIABLE_2 < FUNCTION_CALL_6 FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 return NUMBER return return index VARIABLE_2 sublist VARIABLE_1 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index = VARIABLE_0 + VARIABLE_7 / VARIABLE_2 in VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 return VARIABLE_3 < in NUMBER return ( VARIABLE_6 = - NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index NUMBER VARIABLE_3 . FUNCTION_CALL_5 FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == NUMBER while index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_1 index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 return = index VARIABLE_6 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 index VARIABLE_3 index VARIABLE_5 index VARIABLE_1 FUNCTION_CALL_4 sublist VARIABLE_1 NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = VARIABLE_3 ) VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 VARIABLE_6 return VARIABLE_1 return VARIABLE_4 > NUMBER return . index VARIABLE_7 + ( index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 == index VARIABLE_7 VARIABLE_3 VARIABLE_1 index index VARIABLE_8 VARIABLE_6 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return if VARIABLE_3 VARIABLE_0 index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 index VARIABLE_3 VARIABLE_3 VARIABLE_6 while VARIABLE_5 < = NUMBER index VARIABLE_7 VARIABLE_3 == index VARIABLE_6 VARIABLE_5 = = NUMBER ( VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( NUMBER index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( sublist VARIABLE_1 = VARIABLE_4 sublist VARIABLE_1 VARIABLE VARIABLE_2 VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: index VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 return VARIABLE_1 index VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / NUMBER return FUNCTION_CALL_5 return VARIABLE_4 VARIABLE FUNCTION_CALL_6 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + NUMBER return FUNCTION_CALL_4 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1 VARIABLE
predict: VARIABLE_2 FUNCTION_CALL_5 in VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 - FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 = VARIABLE_0 = VARIABLE_0 * VARIABLE_1 FUNCTION_CALL_5 - NUMBER
predict: index VARIABLE_4 VARIABLE_4 for in index VARIABLE_1 ( * VARIABLE_1 index VARIABLE_5 = VARIABLE_1 return ( VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_8 in FUNCTION_CALL_9 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_6 VARIABLE_3 EMPTY_LIST
predict: for VARIABLE in VARIABLE_1 > VARIABLE_3 = NUMBER return VARIABLE_0 + if VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_4
predict: return VARIABLE_4 VARIABLE_1 = FUNCTION_CALL_10 ( return VARIABLE_0 ( and VARIABLE_2 VARIABLE_1 VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_3 return VARIABLE_1 VARIABLE_1 . ( VARIABLE_1 for VARIABLE_3 EMPTY_LIST = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 and index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 VARIABLE_2 in for VARIABLE_4 VARIABLE_3 index VARIABLE_2
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 > NUMBER VARIABLE_3 return VARIABLE_2 VARIABLE_0 if FUNCTION_CALL_6 FUNCTION_CALL_7 >=
Edit distance = 723omega 1.5
predict: while index VARIABLE_2 and index VARIABLE_1 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 index VARIABLE_1 VARIABLE_2 while VARIABLE_2 VARIABLE_0 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 return VARIABLE_2 index VARIABLE_2 while return . VARIABLE_1 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 index VARIABLE_1 = and VARIABLE_2 VARIABLE_0 VARIABLE_2 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 ( NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 FUNCTION_CALL_9 if VARIABLE_7 VARIABLE_2 VARIABLE_2 VARIABLE VARIABLE_1 = FUNCTION_CALL_10 ( and VARIABLE_2 VARIABLE_0 index VARIABLE_6 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 ( FUNCTION_CALL_5 index VARIABLE_1 VARIABLE_2 < FUNCTION_CALL_6 FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 return NUMBER return return index VARIABLE_2 sublist VARIABLE_1 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index = VARIABLE_0 + VARIABLE_7 / VARIABLE_2 in VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 return VARIABLE_3 < in NUMBER return ( VARIABLE_6 = - NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index NUMBER VARIABLE_3 . FUNCTION_CALL_5 FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == NUMBER while index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_1 index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 return = index VARIABLE_6 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 index VARIABLE_3 index VARIABLE_5 index VARIABLE_1 FUNCTION_CALL_4 sublist VARIABLE_1 NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = VARIABLE_3 ) VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 VARIABLE_6 return VARIABLE_1 return VARIABLE_4 > NUMBER return . index VARIABLE_7 + ( index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 == index VARIABLE_7 VARIABLE_3 VARIABLE_1 index index VARIABLE_8 VARIABLE_6 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return if VARIABLE_3 VARIABLE_0 index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 index VARIABLE_3 VARIABLE_3 VARIABLE_6 while VARIABLE_5 < = NUMBER index VARIABLE_7 VARIABLE_3 == index VARIABLE_6 VARIABLE_5 = = NUMBER ( VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( NUMBER index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( sublist VARIABLE_1 = VARIABLE_4 sublist VARIABLE_1 VARIABLE VARIABLE_2 VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: index VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 return VARIABLE_1 index VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / NUMBER return FUNCTION_CALL_5 return VARIABLE_4 VARIABLE FUNCTION_CALL_6 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + NUMBER return FUNCTION_CALL_4 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1 VARIABLE
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 - in FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 = VARIABLE_0 = VARIABLE_0 * VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: index VARIABLE_4 VARIABLE_4 for in index VARIABLE_1 ( * VARIABLE_1 index VARIABLE_5 = VARIABLE_1 return ( VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_8 in FUNCTION_CALL_9 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_6 VARIABLE_3 EMPTY_LIST
predict: for VARIABLE in VARIABLE_1 > VARIABLE_3 = NUMBER return VARIABLE_0 + if VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_4
predict: return VARIABLE_4 VARIABLE_1 = FUNCTION_CALL_10 ( return VARIABLE_0 ( and VARIABLE_2 VARIABLE_1 VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_3 return VARIABLE_1 VARIABLE_1 . ( VARIABLE_1 for VARIABLE_3 EMPTY_LIST = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 and index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 VARIABLE_2 in for VARIABLE_4 VARIABLE_3 index VARIABLE_2
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 if VARIABLE_0 > NUMBER VARIABLE_0 VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_7 >= FUNCTION_CALL_6
Edit distance = 719omega 2.0
predict: while index VARIABLE_2 and index VARIABLE_1 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 index VARIABLE_1 VARIABLE_2 while VARIABLE_2 VARIABLE_0 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 return VARIABLE_2 index VARIABLE_2 while return . VARIABLE_1 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 index VARIABLE_1 = and VARIABLE_2 VARIABLE_0 VARIABLE_2 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 ( NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 FUNCTION_CALL_9 if VARIABLE_7 VARIABLE_2 VARIABLE_2 VARIABLE VARIABLE_1 = FUNCTION_CALL_10 ( and VARIABLE_2 VARIABLE_0 index VARIABLE_6 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 ( FUNCTION_CALL_5 index VARIABLE_1 VARIABLE_2 < FUNCTION_CALL_6 FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 return NUMBER return return index VARIABLE_2 sublist VARIABLE_1 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index = VARIABLE_0 + VARIABLE_7 / VARIABLE_2 in VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 return VARIABLE_3 < in NUMBER return ( VARIABLE_6 = - NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index NUMBER VARIABLE_3 . FUNCTION_CALL_5 FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == NUMBER while index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_1 index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 return = index VARIABLE_6 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 index VARIABLE_3 index VARIABLE_5 index VARIABLE_1 FUNCTION_CALL_4 sublist VARIABLE_1 NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = VARIABLE_3 ) VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 VARIABLE_6 return VARIABLE_1 return VARIABLE_4 > NUMBER return . index VARIABLE_7 + ( index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 == index VARIABLE_7 VARIABLE_3 VARIABLE_1 index index VARIABLE_8 VARIABLE_6 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return if VARIABLE_3 VARIABLE_0 index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 index VARIABLE_3 VARIABLE_3 VARIABLE_6 while VARIABLE_5 < = NUMBER index VARIABLE_7 VARIABLE_3 == index VARIABLE_6 VARIABLE_5 = = NUMBER ( VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( NUMBER index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( sublist VARIABLE_1 = VARIABLE_4 sublist VARIABLE_1 VARIABLE VARIABLE_2 VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: index VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 return VARIABLE_1 index VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / NUMBER return FUNCTION_CALL_5 return VARIABLE_4 VARIABLE FUNCTION_CALL_6 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + NUMBER return FUNCTION_CALL_4 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1 VARIABLE
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 - in FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 = VARIABLE_0 = VARIABLE_0 * VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: index VARIABLE_4 VARIABLE_4 for in index VARIABLE_1 ( * VARIABLE_1 index VARIABLE_5 = VARIABLE_1 return ( VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_8 in FUNCTION_CALL_9 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_6 EMPTY_LIST VARIABLE_3
predict: for VARIABLE in VARIABLE_1 > VARIABLE_3 = NUMBER return VARIABLE_0 + if VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_4
predict: return VARIABLE_4 VARIABLE_1 = FUNCTION_CALL_10 ( return VARIABLE_0 ( and VARIABLE_2 VARIABLE_1 VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_3 return VARIABLE_1 VARIABLE_1 . ( VARIABLE_1 for VARIABLE_3 EMPTY_LIST = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 and index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 VARIABLE_2 in for VARIABLE_4 VARIABLE_3 index VARIABLE_2
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 if VARIABLE_0 > NUMBER VARIABLE_0 VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_7 >= FUNCTION_CALL_6
Edit distance = 719omega 2.5
predict: while index VARIABLE_2 and index VARIABLE_1 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 index VARIABLE_1 VARIABLE_2 while VARIABLE_2 VARIABLE_0 FUNCTION_CALL_9 ( NUMBER FUNCTION_CALL_4 return VARIABLE_2 index VARIABLE_2 while return . VARIABLE_1 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 index VARIABLE_1 = and VARIABLE_2 VARIABLE_0 VARIABLE_2 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 ( NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 FUNCTION_CALL_9 if VARIABLE_7 VARIABLE_2 VARIABLE_2 VARIABLE VARIABLE_1 = FUNCTION_CALL_10 ( and VARIABLE_2 VARIABLE_0 index VARIABLE_6 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 ( FUNCTION_CALL_5 index VARIABLE_1 VARIABLE_2 < FUNCTION_CALL_6 FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 return NUMBER return return index VARIABLE_2 sublist VARIABLE_1 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index = VARIABLE_0 + VARIABLE_7 / VARIABLE_2 in VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 return VARIABLE_3 < in NUMBER return ( VARIABLE_6 = - NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index NUMBER VARIABLE_3 . FUNCTION_CALL_5 FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == NUMBER while index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 return in FUNCTION_CALL_11 VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_1 index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 return = index VARIABLE_6 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 return in FUNCTION_CALL_11 VARIABLE_3 index VARIABLE_3 index VARIABLE_5 index VARIABLE_1 FUNCTION_CALL_4 sublist VARIABLE_1 NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = VARIABLE_3 ) VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 VARIABLE_6 return VARIABLE_1 return VARIABLE_4 > NUMBER return . index VARIABLE_7 + ( index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 == index VARIABLE_7 VARIABLE_3 VARIABLE_1 index index VARIABLE_8 VARIABLE_6 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return if VARIABLE_3 VARIABLE_0 index VARIABLE_2 VARIABLE_6 VARIABLE_3 < index VARIABLE_6 index VARIABLE_3 VARIABLE_3 VARIABLE_6 while VARIABLE_5 < = NUMBER index VARIABLE_7 VARIABLE_3 == index VARIABLE_6 VARIABLE_5 = = NUMBER ( VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( NUMBER index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_10 ( sublist VARIABLE_1 = VARIABLE_4 sublist VARIABLE_1 VARIABLE VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: index VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 return VARIABLE_1 index VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_1 index FUNCTION_CALL_4 VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / NUMBER return FUNCTION_CALL_5 return VARIABLE_4 VARIABLE FUNCTION_CALL_6 index VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + NUMBER return FUNCTION_CALL_4 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_1 VARIABLE
predict: VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 - in FUNCTION_CALL_2 NUMBER
predict: VARIABLE_0 = VARIABLE_0 * VARIABLE_1 = NUMBER for VARIABLE FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: index VARIABLE_4 VARIABLE_4 for in index VARIABLE_1 ( * VARIABLE_1 index VARIABLE_5 = VARIABLE_1 return ( VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_8 in FUNCTION_CALL_9 VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 = EMPTY_LIST FUNCTION_CALL_6
predict: for VARIABLE in VARIABLE_1 > VARIABLE_3 = NUMBER return VARIABLE_0 + if VARIABLE_0 VARIABLE_2 VARIABLE_4 VARIABLE_4
predict: return VARIABLE_4 VARIABLE_1 = FUNCTION_CALL_10 ( return VARIABLE_0 ( and VARIABLE_2 VARIABLE_1 VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_3 return VARIABLE_1 VARIABLE_1 . ( VARIABLE_1 for VARIABLE_3 EMPTY_LIST = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 and index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 VARIABLE_2 in for VARIABLE_4 VARIABLE_3 index VARIABLE_2
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 if VARIABLE_0 > NUMBER VARIABLE_0 VARIABLE_3 return VARIABLE_2 FUNCTION_CALL_7 >= FUNCTION_CALL_6
Edit distance = 720