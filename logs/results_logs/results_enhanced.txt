test enhanced v2 old
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: index VARIABLE_1 in index return VARIABLE_2 VARIABLE_4 = return NUMBER VARIABLE_1 index <= VARIABLE_1 + FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != FUNCTION_CALL_4 index FUNCTION_CALL_3 VARIABLE_0 - VARIABLE_1
predict: return false
predict: return true
predict: FUNCTION_CALL_1 = VARIABLE_5 = = FUNCTION_CALL_10 VARIABLE_4
predict: index VARIABLE_4 FUNCTION_CALL_9 FUNCTION_CALL_12 index index VARIABLE_3 = return VARIABLE_3 VARIABLE_5 FUNCTION_CALL_10 index index VARIABLE_4 FUNCTION_CALL_1 NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 index NUMBER = index VARIABLE_3 VARIABLE_7 index index VARIABLE_3 VARIABLE_6 = FUNCTION_CALL_1 VARIABLE_1 = VARIABLE_4 and index FUNCTION_CALL_9 and VARIABLE_2
predict: for VARIABLE_8 NUMBER VARIABLE_5
predict: index VARIABLE_6 if index VARIABLE_6 + VARIABLE_1 VARIABLE_7 index NUMBER FUNCTION_CALL_4 index VARIABLE_9 = else index VARIABLE_6 + index VARIABLE_3 index VARIABLE_2 index VARIABLE_6 NUMBER FUNCTION_CALL_4 index VARIABLE_9 = VARIABLE_1 VARIABLE_7 VARIABLE_2 =
predict: return VARIABLE_3
predict: VARIABLE_0 = EMPTY_LIST
predict: for in < VARIABLE_3 in VARIABLE_1
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_0
predict: return VARIABLE_0
predict: * NUMBER VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0 * NUMBER
predict: return VARIABLE_0 = FUNCTION_CALL_2 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER
predict: VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 while
predict: return VARIABLE_3
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 <= NUMBER VARIABLE_0 + NUMBER in *
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER
predict: FUNCTION_CALL_3 VARIABLE_0
predict: else if VARIABLE_0 = NUMBER FUNCTION_CALL_3 if VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_2 STRING_CONST FUNCTION_CALL_2 NUMBER
predict: STRING_CONST
predict: VARIABLE_1 in FUNCTION_CALL_4 NUMBER
predict: while FUNCTION_CALL_4 VARIABLE_0 > NUMBER VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1
predict: VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1 .
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 + + VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: return VARIABLE_0
predict: for = VARIABLE_1 VARIABLE_0 index VARIABLE_3 = index VARIABLE_3 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 VARIABLE_0 index VARIABLE_1 =
predict: if VARIABLE_0 = NUMBER
predict: return false else
predict: if VARIABLE_0 = NUMBER
predict: return true else
predict: index VARIABLE_1 in return VARIABLE_2 VARIABLE_4 = VARIABLE_2 index NUMBER VARIABLE_7 + = NUMBER FUNCTION_CALL_3 index VARIABLE_0 + = VARIABLE_1 in *
predict: if FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: while VARIABLE_0 <= VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 != VARIABLE_0 + NUMBER VARIABLE_0 FUNCTION_CALL_3
predict: return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1
Edit distance = 213
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 * NUMBER
predict: return VARIABLE_0 + VARIABLE_1 + VARIABLE_2
predict: for VARIABLE_1 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 < / NUMBER
predict: if VARIABLE_1 in VARIABLE_0 != != VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0 - NUMBER -
predict: return false
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3
predict: return VARIABLE_2
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: else FUNCTION_CALL_3 VARIABLE_0 = NUMBER FUNCTION_CALL_2 VARIABLE_0 / NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_1 EMPTY_LIST
predict: for for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_1
predict: return VARIABLE_0 = index VARIABLE_1 index index index index VARIABLE_1 in VARIABLE_0 index index in index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: / NUMBER VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for for VARIABLE_2 = NUMBER VARIABLE_2 = VARIABLE_1 VARIABLE_2 + NUMBER for VARIABLE_2
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2
predict: return false
predict: return true
predict: return FUNCTION_CALL_3 VARIABLE_0 FUNCTION_CALL_9 VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 != EMPTY_LIST
predict: if FUNCTION_CALL_4 VARIABLE_1 > VARIABLE_0
predict: VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0 . VARIABLE_0 = NUMBER
predict: FUNCTION_CALL_4 VARIABLE_1
predict: for VARIABLE_0 = NUMBER NUMBER
predict: if VARIABLE_0 FUNCTION_CALL_3 NUMBER == NUMBER VARIABLE_0 = NUMBER FUNCTION_CALL_3 NUMBER
predict: FUNCTION_CALL_4 VARIABLE_1 + ( ) STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_3 return NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 VARIABLE_1 + ( ) STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_3 return NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 VARIABLE_1 + ( ) STRING_CONST
predict: else FUNCTION_CALL_4 VARIABLE_0 index
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_3 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 + VARIABLE_3 index VARIABLE_2
predict: return VARIABLE_3
predict: = > VARIABLE_1
predict: index for index VARIABLE_2 VARIABLE_0 = NUMBER VARIABLE_3 VARIABLE_4 +
predict: return VARIABLE_3
Edit distance = 136
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3
predict: VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for for VARIABLE_1 in VARIABLE_0 + VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_2
predict: if VARIABLE_0 = NUMBER
predict: return false
predict: if VARIABLE_0 = NUMBER
predict: return true
predict: else FUNCTION_CALL_4
predict: for VARIABLE_2 = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0
predict: if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 = NUMBER
predict: return false else return in FUNCTION_CALL_4 else and
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_2 VARIABLE_1 index VARIABLE_3 + VARIABLE_3 in VARIABLE_0
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_1 = VARIABLE_1 + VARIABLE_0 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + + VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_2 <= NUMBER FUNCTION_CALL_7 if
predict: if >=
predict: return index VARIABLE_4 VARIABLE_2 in return = index VARIABLE_4 <= <= = = FUNCTION_CALL_11 FUNCTION_CALL_11 return VARIABLE_0 in VARIABLE_0 >= FUNCTION_CALL_3 else return in VARIABLE_1 >= FUNCTION_CALL_3 > index VARIABLE_4 VARIABLE_5 if VARIABLE_2 index VARIABLE_5 for for FUNCTION_CALL_3 index index VARIABLE_1 EMPTY_LIST if VARIABLE_0 = VARIABLE_2 VARIABLE_5
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 = VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_1
predict: for for VARIABLE_1 = NUMBER NUMBER VARIABLE_0 = STRING_CONST
predict: if VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_2 + STRING_CONST VARIABLE_0
predict: if VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_2 + STRING_CONST VARIABLE_0
predict: index if index VARIABLE_1 VARIABLE_0 index FUNCTION_CALL_6 NUMBER VARIABLE_0 + = NUMBER VARIABLE_1 FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4
predict: VARIABLE_1 index VARIABLE_0 VARIABLE_1
predict: for VARIABLE_2 in NUMBER VARIABLE_1
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index - VARIABLE_2
predict: return false
predict: return true
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 = NUMBER
predict: return true
predict: if VARIABLE_0 % NUMBER == NUMBER VARIABLE_0 <= NUMBER
predict: return false
predict: index for index VARIABLE_1 in FUNCTION_CALL_3 VARIABLE_1 + + NUMBER == + NUMBER index FUNCTION_CALL_5 FUNCTION_CALL_4 == NUMBER
predict: if VARIABLE_0 % VARIABLE_1 = NUMBER
predict: return false
predict: else return true
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
Edit distance = 187
predict: = VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_2 VARIABLE_4 = for VARIABLE_4 return NUMBER = return VARIABLE_3 VARIABLE_1 < VARIABLE_4 == - index VARIABLE_3 index VARIABLE_1 VARIABLE_0 = VARIABLE_4 index index VARIABLE_1 VARIABLE_2 = = VARIABLE_1 < VARIABLE_4 + NUMBER
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: return true
predict: VARIABLE_0 * NUMBER * NUMBER
predict: if VARIABLE_0 NUMBER or NUMBER
predict: return NUMBER
predict: else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: = VARIABLE_0 FUNCTION_CALL_3 NUMBER
predict: index for VARIABLE_2 in EMPTY_LIST index VARIABLE_1 + index in FUNCTION_CALL_4 return VARIABLE_0 index for index NUMBER and EMPTY_LIST in
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER VARIABLE_1 = NUMBER
predict: return VARIABLE_2 VARIABLE_4 = for VARIABLE_6 return NUMBER VARIABLE_8 index FUNCTION_CALL_12 VARIABLE_7 + = FUNCTION_CALL_12
predict: if VARIABLE_6 index VARIABLE_7 = FUNCTION_CALL_12 index VARIABLE_7 + NUMBER
predict: VARIABLE_5 index VARIABLE_6 = VARIABLE_7 VARIABLE_3 VARIABLE_3 + +
predict: if VARIABLE_3 = FUNCTION_CALL_12 index VARIABLE_8 + NUMBER
predict: VARIABLE_5 VARIABLE_6 = VARIABLE_7 VARIABLE_4 VARIABLE_4 + +
predict: if VARIABLE_7 VARIABLE_4 <= VARIABLE_8 VARIABLE_3
predict: VARIABLE_5 VARIABLE_6 = VARIABLE_4 VARIABLE_7 VARIABLE_4 + +
predict: return VARIABLE_5
predict: for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 NUMBER
predict: if FUNCTION_CALL_5 VARIABLE_0 NUMBER
predict: return false
predict: return true
predict: VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 VARIABLE_0 FUNCTION_CALL_8
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 FUNCTION_CALL_8 + VARIABLE_3
predict: if VARIABLE_3 != VARIABLE_4 VARIABLE_3 != VARIABLE_5
predict: return VARIABLE_3 = VARIABLE_0 VARIABLE_3
predict: else if VARIABLE_3 = VARIABLE_4
predict: VARIABLE_2 VARIABLE_3 VARIABLE_0 VARIABLE_5
predict: else VARIABLE_3 = VARIABLE_0 VARIABLE_4
predict: return VARIABLE_2
predict: VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 = NUMBER
predict: while VARIABLE_2 VARIABLE_0
predict: if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER
predict: VARIABLE_7 . VARIABLE_4
predict: if VARIABLE_7 == NUMBER or NUMBER
predict: return VARIABLE_4
predict: VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4 sublist VARIABLE_7 / NUMBER + NUMBER VARIABLE_2 = NUMBER VARIABLE_0 = NUMBER VARIABLE_5 = EMPTY_LIST VARIABLE_7 / NUMBER NUMBER VARIABLE_0 index VARIABLE_7 sublist FUNCTION_CALL_10 VARIABLE_4 VARIABLE_3 = else
predict: while index VARIABLE_2 < VARIABLE_1 VARIABLE_0 <= VARIABLE_3
predict: return VARIABLE_0 if if > return VARIABLE_2 VARIABLE_4 = in FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_1 < index VARIABLE_2 VARIABLE_3 index VARIABLE_3 < VARIABLE_1 . FUNCTION_CALL_8 or VARIABLE_2 VARIABLE_1
predict: return VARIABLE_3 FUNCTION_CALL_12 index VARIABLE_2 in VARIABLE_2 + NUMBER VARIABLE_2 = VARIABLE_5
predict: index else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 + NUMBER VARIABLE_0 = VARIABLE_0 VARIABLE_5
predict: return VARIABLE_5
predict: VARIABLE_0 = true
predict: return VARIABLE_2 VARIABLE_4 = for index VARIABLE_1 in FUNCTION_CALL_4 return NUMBER index VARIABLE_1 VARIABLE_2 < index VARIABLE_2 / return NUMBER index VARIABLE_1 + NUMBER + in FUNCTION_CALL_4 + return VARIABLE_0 and return VARIABLE_2 VARIABLE_4 = FUNCTION_CALL_4 VARIABLE_2 in VARIABLE_1 != NUMBER +
predict: return VARIABLE_0
predict: VARIABLE_0 * NUMBER
predict: * NUMBER
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: = VARIABLE_0 = EMPTY_LIST VARIABLE_1 = NUMBER VARIABLE_2 = NUMBER
predict: VARIABLE_1 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_3 VARIABLE_2 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_4
predict: if VARIABLE_3 index VARIABLE_1 < VARIABLE_4 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1 + VARIABLE_1 FUNCTION_CALL_7 EMPTY_LIST EMPTY_LIST
predict: else FUNCTION_CALL_7 = EMPTY_LIST VARIABLE_0 index VARIABLE_2 + VARIABLE_2 VARIABLE_4
predict: index if FUNCTION_CALL_6 EMPTY_LIST return VARIABLE_3 if > return NUMBER FUNCTION_CALL_7 in FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 EMPTY_LIST index
predict: index if FUNCTION_CALL_6 EMPTY_LIST VARIABLE_4 if > return NUMBER FUNCTION_CALL_7 in FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 EMPTY_LIST index
predict: = VARIABLE_0 = NUMBER
predict: while index VARIABLE_1 if > return NUMBER VARIABLE_0 + = VARIABLE_1 VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST and
predict: return VARIABLE_3 for index return VARIABLE_0 VARIABLE_3 * VARIABLE_1 and FUNCTION_CALL_5 VARIABLE_2 in . =
predict: return . VARIABLE_2
Edit distance = 326
predict: return NUMBER VARIABLE_0 = NUMBER VARIABLE_0 = NUMBER
predict: else VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: if VARIABLE_0 index VARIABLE_2 > VARIABLE_0 index VARIABLE_2 + NUMBER VARIABLE_0 index
predict: FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2 + NUMBER VARIABLE_0
predict: return VARIABLE_0
predict: return in in FUNCTION_CALL_5 VARIABLE_0 index * NUMBER and * NUMBER )
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_1
predict: VARIABLE_1 = FUNCTION_CALL_11 NUMBER = NUMBER = VARIABLE_1
predict: for VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0 VARIABLE_2 + + VARIABLE_1 + = VARIABLE_0 index VARIABLE_2 = FUNCTION_CALL_4
predict: return VARIABLE_1
predict: in VARIABLE_1 + + VARIABLE_0 if return NUMBER VARIABLE_7 + = NUMBER return NUMBER VARIABLE_1 in FUNCTION_CALL_5 VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_5 VARIABLE_0 VARIABLE_2 = NUMBER == NUMBER
predict: if VARIABLE_1 VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else VARIABLE_1 FUNCTION_CALL_6 STRING_CONST
predict: else if FUNCTION_CALL_6 STRING_CONST
predict: else FUNCTION_CALL_6 VARIABLE_0
predict: VARIABLE_1 = FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 . FUNCTION_CALL_6 VARIABLE_3 +
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 . VARIABLE_2
predict: return VARIABLE_2
predict: / NUMBER return VARIABLE_0 * ( VARIABLE_0 + NUMBER )
predict: VARIABLE_0 = NUMBER VARIABLE_2 = NUMBER VARIABLE_5 = FUNCTION_CALL_7 VARIABLE_4
predict: while index VARIABLE_5 if <= index VARIABLE_4 return VARIABLE_3 if return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER index index index VARIABLE_5 and index VARIABLE_2 if return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER index VARIABLE_2 + VARIABLE_2 VARIABLE_3 VARIABLE_1
predict: return NUMBER and FUNCTION_CALL_2 = VARIABLE_0 = VARIABLE_1 < =
predict: while VARIABLE_2 VARIABLE_0 > FUNCTION_CALL_4 VARIABLE_1 = EMPTY_LIST FUNCTION_CALL_3 VARIABLE_1
predict: if VARIABLE_3 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_0 =
predict: VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 in in in VARIABLE_1 + + VARIABLE_0 index VARIABLE_2 if return VARIABLE_2 VARIABLE_4 = VARIABLE_7 + = NUMBER index VARIABLE_2 + VARIABLE_2 VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 in in in VARIABLE_1 + + VARIABLE_0 VARIABLE_2 + + VARIABLE_2 VARIABLE_1 VARIABLE_3 in VARIABLE_1 index FUNCTION_CALL_3
predict: return VARIABLE_2
Edit distance = 171
predict: VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_0 index VARIABLE_1 = VARIABLE_0 index VARIABLE_2 + VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_1 * VARIABLE_0 index VARIABLE_2 - NUMBER - +
predict: VARIABLE_0 = NUMBER
predict: return in FUNCTION_CALL_4 NUMBER else VARIABLE_0 . * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER - VARIABLE_1 VARIABLE_0 index VARIABLE_2 return VARIABLE_1
predict: index for index VARIABLE_2 in FUNCTION_CALL_4 return NUMBER in VARIABLE_2 FUNCTION_CALL_5 return VARIABLE_0 - NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_1 * VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER
predict: index for in VARIABLE_1 return VARIABLE_2 VARIABLE_4 = in index VARIABLE_2 while VARIABLE_1 index >= NUMBER and VARIABLE_1 VARIABLE_0 * VARIABLE_1 VARIABLE_0 == for NUMBER
predict: return VARIABLE_0
predict: in FUNCTION_CALL_2 ) for in VARIABLE_1 in VARIABLE_0 == NUMBER / NUMBER FUNCTION_CALL_4 VARIABLE_0 < VARIABLE_1 <
predict: if VARIABLE_5 VARIABLE_1 VARIABLE_0 ) VARIABLE_0 - NUMBER - VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0
predict: return false
predict: return true
predict: if FUNCTION_CALL_6 VARIABLE_4 = NUMBER NUMBER
predict: return VARIABLE_4
predict: return VARIABLE_0 else return / VARIABLE_4 and NUMBER FUNCTION_CALL_10 FUNCTION_CALL_10 / FUNCTION_CALL_11 FUNCTION_CALL_7 FUNCTION_CALL_6 NUMBER
predict: return VARIABLE_3
predict: return VARIABLE_2 VARIABLE_4 = NUMBER = = VARIABLE_2
predict: return VARIABLE_0 for VARIABLE_4 index index VARIABLE_2 in = VARIABLE_3 VARIABLE_2 + VARIABLE_3 = VARIABLE_1 VARIABLE_4 in
predict: return VARIABLE_0 for return VARIABLE_2 VARIABLE_4 = return NUMBER return VARIABLE_0 VARIABLE_2 < return NUMBER VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 STRING_CONST +
predict: if VARIABLE_0 == NUMBER
predict: return NUMBER else
predict: return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 index VARIABLE_0 index VARIABLE_3 index = VARIABLE_1
predict: return VARIABLE_0
predict: index VARIABLE_3 VARIABLE_2 = NUMBER VARIABLE_1 = NUMBER
predict: return VARIABLE_0 * ( NUMBER + VARIABLE_1 * ( VARIABLE_2 + NUMBER
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 + = VARIABLE_2
predict: return VARIABLE_1
predict: return NUMBER in VARIABLE_2 VARIABLE_1 return VARIABLE_0 * ( VARIABLE_0 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_11 * VARIABLE_2
predict: return VARIABLE_1
predict: = VARIABLE_1 = in FUNCTION_CALL_4 VARIABLE_1 index VARIABLE_3 in VARIABLE_0 = index VARIABLE_3 in VARIABLE_0 = VARIABLE_0 index VARIABLE_2 = index VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_0
Edit distance = 209
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 + VARIABLE_4 VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_4
predict: if VARIABLE_2 < NUMBER VARIABLE_2 = NUMBER
predict: return NUMBER
predict: return VARIABLE_0 VARIABLE_1 + = VARIABLE_0 VARIABLE_2 = NUMBER VARIABLE_1 = NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 == NUMBER
predict: for VARIABLE_3 in VARIABLE_0 index VARIABLE_2 + VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_2
predict: return VARIABLE_0 NUMBER FUNCTION_CALL_6 >= = NUMBER VARIABLE_1 =
predict: for VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_3
predict: for VARIABLE_4 FUNCTION_CALL_7 NUMBER VARIABLE_3 - VARIABLE_2 - NUMBER
predict: if VARIABLE_0 index VARIABLE_4 > VARIABLE_0 index VARIABLE_4 + NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_0 VARIABLE_1 for VARIABLE_1 index for VARIABLE_4 FUNCTION_CALL_8
predict: return VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + +
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_2 + +
predict: if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER
predict: else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER
predict: return VARIABLE_0 + FUNCTION_CALL_2 VARIABLE_0 - NUMBER if VARIABLE_0 NUMBER
predict: else NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER
predict: if index VARIABLE_2 in VARIABLE_0 != VARIABLE_0 index index VARIABLE_1 - NUMBER - VARIABLE_2 VARIABLE_0
predict: return false
predict: return true
predict: = VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 * ( VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER
predict: while VARIABLE_3 VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_0 = NUMBER
predict: return true
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_0 >= VARIABLE_1 =
predict: if VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_0 .
predict: else return false
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 + = VARIABLE_2
predict: return VARIABLE_1
predict: FUNCTION_CALL_1 = VARIABLE_3 = . = EMPTY_LIST and
predict: for VARIABLE_2 VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1
predict: VARIABLE_2 FUNCTION_CALL_5 . FUNCTION_CALL_5 VARIABLE_3
predict: return VARIABLE_3
predict: for VARIABLE_0 = NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: = VARIABLE_1 = NUMBER VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1 *
predict: return VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0 index VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 ( VARIABLE_3 )
predict: return VARIABLE_2
Edit distance = 99
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_0 FUNCTION_CALL_5 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = NUMBER = VARIABLE_0
predict: index VARIABLE_1 for in FUNCTION_CALL_15 return NUMBER index VARIABLE_3 index VARIABLE_2 + return VARIABLE_0 VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_3 = VARIABLE_0 = VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_1 = * NUMBER * = VARIABLE_3 =
predict: VARIABLE_0 = VARIABLE_1 * NUMBER VARIABLE_2 = VARIABLE_0 * NUMBER return VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_0 in FUNCTION_CALL_4 NUMBER NUMBER for
predict: if VARIABLE_0 FUNCTION_CALL_3 NUMBER == NUMBER
predict: ( FUNCTION_CALL_4 STRING_CONST
predict: if and ( FUNCTION_CALL_4 STRING_CONST FUNCTION_CALL_4 ( FUNCTION_CALL_3 NUMBER if VARIABLE_5 > VARIABLE_3 VARIABLE_1
predict: = VARIABLE_2 = = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0 FUNCTION_CALL_5 VARIABLE_3 * VARIABLE_1 . FUNCTION_CALL_6 = VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +
predict: if VARIABLE_0 % = NUMBER VARIABLE_0 = NUMBER %
predict: FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % = NUMBER
predict: FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % = NUMBER
predict: FUNCTION_CALL_2 STRING_CONST
predict: else FUNCTION_CALL_2 VARIABLE_0 &
predict: in FUNCTION_CALL_4 NUMBER VARIABLE_2 =
predict: for VARIABLE_1 in VARIABLE_0 + VARIABLE_2 + = VARIABLE_1 = NUMBER
predict: return VARIABLE_2
Edit distance = 84
predict: VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 / NUMBER
predict: VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 = NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3
predict: VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = = NUMBER
predict: while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_2
predict: if VARIABLE_0 index VARIABLE_1
predict: VARIABLE_1 = = VARIABLE_0
predict: return VARIABLE_1
predict: if FUNCTION_CALL_10 VARIABLE_0 == NUMBER or VARIABLE_0 == NUMBER
predict: while VARIABLE_7 + < VARIABLE_0 VARIABLE_2 = VARIABLE_0 index VARIABLE_7 = VARIABLE_3 = VARIABLE_5 index VARIABLE_8 FUNCTION_CALL_10 VARIABLE_8
predict: if VARIABLE_2 = VARIABLE_3 index VARIABLE_7 + VARIABLE_2 + = VARIABLE_7 else VARIABLE_6 index VARIABLE_7 + VARIABLE_3 + VARIABLE_8 VARIABLE_8 VARIABLE_8 VARIABLE_6
predict: return VARIABLE_6
predict: VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE_2 =
predict: return VARIABLE_0
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_3 VARIABLE_0 VARIABLE_2 ) )
predict: return VARIABLE_1
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: VARIABLE_0 = FUNCTION_CALL_3 VARIABLE_1 FUNCTION_CALL_4 FUNCTION_CALL_3 VARIABLE_1 return VARIABLE_0
predict: index VARIABLE_1 in VARIABLE_1 + return VARIABLE_2 VARIABLE_4 = VARIABLE_2 = / ( NUMBER FUNCTION_CALL_3 - . VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_1 index != VARIABLE_0 VARIABLE_0 . FUNCTION_CALL_3 - )
predict: return false
predict: return true
predict: VARIABLE_3 = NUMBER = VARIABLE_0 = FUNCTION_CALL_6 VARIABLE_0 - NUMBER VARIABLE_2 = true
predict: while VARIABLE_2 < VARIABLE_4
predict: return VARIABLE_0 if index index VARIABLE_2 != return VARIABLE_2 VARIABLE_4 = return VARIABLE_0 index VARIABLE_4 VARIABLE_1 = false VARIABLE_4 if in FUNCTION_CALL_4 index VARIABLE_2 return NUMBER VARIABLE_3 VARIABLE_1 VARIABLE_4 NUMBER VARIABLE_4
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
predict: return VARIABLE_1
predict: VARIABLE_0 = VARIABLE_1 VARIABLE_2
predict: if VARIABLE_2 = VARIABLE_0
predict: return true
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 + + VARIABLE_0 index VARIABLE_2
predict: return VARIABLE_1
Edit distance = 141
