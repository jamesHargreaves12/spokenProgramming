omega 0.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 NUMBER and VARIABLE_3 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 while in VARIABLE_1 VARIABLE_8 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER VARIABLE_3 != return FUNCTION_CALL_6 if VARIABLE_7 VARIABLE_2 <= FUNCTION_CALL_3 and VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in if VARIABLE_7 FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and VARIABLE_0 FUNCTION_CALL_6
predict: if VARIABLE_7 FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 in VARIABLE_0 VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 NUMBER / NUMBER FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_0 VARIABLE_2 VARIABLE_1 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_0 . NUMBER / VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 / NUMBER VARIABLE_0 = NUMBER VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 VARIABLE_0 . index VARIABLE_3 VARIABLE_0 FUNCTION_CALL_3 return
predict: while VARIABLE_7 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 VARIABLE_7 + NUMBER VARIABLE_5 or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 if else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + NUMBER VARIABLE_0 = ( in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 if else return VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_5 index VARIABLE_4 + VARIABLE_1 index VARIABLE_3 NUMBER index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_7 VARIABLE_4 if VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 < or index VARIABLE_2 or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 VARIABLE_4 while VARIABLE_7 VARIABLE_2 VARIABLE_0 = VARIABLE_5 VARIABLE_4 = NUMBER index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 index
predict: if VARIABLE_7 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while VARIABLE_7 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index VARIABLE_6 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 VARIABLE_1 while VARIABLE_7 VARIABLE_1 while index in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + NUMBER index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = else return VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_9 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 FUNCTION_CALL_4 index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = NUMBER index VARIABLE_2 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 = for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 = VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 if if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 ( if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 - * return FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index * NUMBER
predict: for for VARIABLE_4 in index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * in VARIABLE_7 + NUMBER VARIABLE_5 return VARIABLE_0 FUNCTION_CALL_4 NUMBER VARIABLE_1 if VARIABLE_3 == and index VARIABLE_8 VARIABLE_2 in FUNCTION_CALL_9 and
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 return VARIABLE_3 *
predict: VARIABLE_4 VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_8 return VARIABLE_1 = for VARIABLE_4 in VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 VARIABLE_1 if VARIABLE_3 == in VARIABLE_0 VARIABLE_2 = VARIABLE_4 if VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 in index VARIABLE_4 VARIABLE_1 in for index VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 return if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_3 for VARIABLE_4 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 > NUMBER VARIABLE_2 return VARIABLE_2 = FUNCTION_CALL_6 if FUNCTION_CALL_7 >=
Edit distance = 1019
omega 1.0
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 NUMBER and VARIABLE_3 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 while in VARIABLE_1 VARIABLE_8 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER VARIABLE_3 != return FUNCTION_CALL_6 if VARIABLE_7 VARIABLE_2 <= FUNCTION_CALL_3 and VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in if VARIABLE_7 FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and VARIABLE_0 FUNCTION_CALL_6
predict: if VARIABLE_7 FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 in VARIABLE_0 VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 NUMBER / NUMBER FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_0 VARIABLE_2 VARIABLE_1 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_0 . NUMBER / VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 / NUMBER VARIABLE_0 = NUMBER VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 VARIABLE_0 . index VARIABLE_3 VARIABLE_0 FUNCTION_CALL_3 return
predict: while VARIABLE_7 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 VARIABLE_7 + NUMBER VARIABLE_5 or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 if else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + NUMBER VARIABLE_0 = ( in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 if else return VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_5 index VARIABLE_4 + VARIABLE_1 index VARIABLE_3 NUMBER index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_7 VARIABLE_4 if VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 < or index VARIABLE_2 or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 VARIABLE_4 while VARIABLE_7 VARIABLE_2 VARIABLE_0 = VARIABLE_5 VARIABLE_4 = NUMBER index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 index
predict: if VARIABLE_7 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while VARIABLE_7 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index VARIABLE_6 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 VARIABLE_1 while VARIABLE_7 VARIABLE_1 while index in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + NUMBER index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = else return VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_9 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 FUNCTION_CALL_4 index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = NUMBER index VARIABLE_2 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 = for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 = VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 if if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 ( if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 - * VARIABLE_1 return FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * NUMBER
predict: for for VARIABLE_4 in index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * in VARIABLE_7 + NUMBER VARIABLE_5 return VARIABLE_0 FUNCTION_CALL_4 NUMBER VARIABLE_1 if VARIABLE_3 == and index VARIABLE_8 VARIABLE_2 in FUNCTION_CALL_9 and
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: VARIABLE_4 VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_8 return VARIABLE_1 = for VARIABLE_4 in VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 VARIABLE_1 if VARIABLE_3 == in VARIABLE_0 VARIABLE_2 = VARIABLE_4 if VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 in index VARIABLE_4 VARIABLE_1 in for index VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 return if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_3 for VARIABLE_4 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = FUNCTION_CALL_6 > NUMBER VARIABLE_2 return VARIABLE_2 if FUNCTION_CALL_7 >=
Edit distance = 1018
omega 1.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 NUMBER and VARIABLE_3 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 while in VARIABLE_1 VARIABLE_8 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER VARIABLE_3 != return FUNCTION_CALL_6 if VARIABLE_7 VARIABLE_2 <= FUNCTION_CALL_3 and VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in if VARIABLE_7 FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and VARIABLE_0 FUNCTION_CALL_6
predict: if VARIABLE_7 FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 in VARIABLE_0 VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 NUMBER / NUMBER FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_0 VARIABLE_2 VARIABLE_1 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_0 . NUMBER / VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 / NUMBER VARIABLE_0 = NUMBER VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 VARIABLE_0 . index VARIABLE_3 VARIABLE_0 FUNCTION_CALL_3 return
predict: while VARIABLE_7 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 VARIABLE_7 + NUMBER VARIABLE_5 or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 if else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + NUMBER VARIABLE_0 = ( in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 if else return VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_5 index VARIABLE_4 + VARIABLE_1 index VARIABLE_3 NUMBER index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_7 VARIABLE_4 if VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 < or index VARIABLE_2 or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 VARIABLE_4 while VARIABLE_7 VARIABLE_2 VARIABLE_0 = VARIABLE_5 VARIABLE_4 = NUMBER index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 index
predict: if VARIABLE_7 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while VARIABLE_7 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index VARIABLE_6 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 VARIABLE_1 while VARIABLE_7 VARIABLE_1 while index in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + NUMBER index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = else return VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_9 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 FUNCTION_CALL_4 index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = NUMBER index VARIABLE_2 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 = for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 = VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 if if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 ( if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 - NUMBER return VARIABLE_0 * FUNCTION_CALL_2 NUMBER
predict: VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * NUMBER
predict: for for VARIABLE_4 in index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * in VARIABLE_7 + NUMBER VARIABLE_5 return VARIABLE_0 FUNCTION_CALL_4 NUMBER VARIABLE_1 if VARIABLE_3 == and index VARIABLE_8 VARIABLE_2 in FUNCTION_CALL_9 and
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: VARIABLE_4 VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_8 return VARIABLE_1 = for VARIABLE_4 in VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 VARIABLE_1 if VARIABLE_3 == in VARIABLE_0 VARIABLE_2 = VARIABLE_4 if VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 in index VARIABLE_4 VARIABLE_1 in for index VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 return if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_3 for VARIABLE_4 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = FUNCTION_CALL_6 > VARIABLE_2 return VARIABLE_2 = NUMBER if FUNCTION_CALL_7 >=
Edit distance = 1020
omega 2.0
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 NUMBER and VARIABLE_3 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 while in VARIABLE_1 VARIABLE_8 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER VARIABLE_3 != return FUNCTION_CALL_6 if VARIABLE_7 VARIABLE_2 <= FUNCTION_CALL_3 and VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in if VARIABLE_7 FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and VARIABLE_0 FUNCTION_CALL_6
predict: if VARIABLE_7 FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 in VARIABLE_0 VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 NUMBER / NUMBER FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_0 VARIABLE_2 VARIABLE_1 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_0 . NUMBER / VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 / NUMBER VARIABLE_0 = NUMBER VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 VARIABLE_0 . index VARIABLE_3 VARIABLE_0 FUNCTION_CALL_3 return
predict: while VARIABLE_7 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 VARIABLE_7 + NUMBER VARIABLE_5 or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 if else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + NUMBER VARIABLE_0 = ( in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 if else return VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_5 index VARIABLE_4 + VARIABLE_1 index VARIABLE_3 NUMBER index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_7 VARIABLE_4 if VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 < or index VARIABLE_2 or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 VARIABLE_4 while VARIABLE_7 VARIABLE_2 VARIABLE_0 = VARIABLE_5 VARIABLE_4 = NUMBER index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: if VARIABLE_7 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while VARIABLE_7 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index VARIABLE_6 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 VARIABLE_1 while VARIABLE_7 VARIABLE_1 while index in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + NUMBER index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = else return VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_9 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 FUNCTION_CALL_4 index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = NUMBER index VARIABLE_2 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 = for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 = VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 if if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 ( if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER return VARIABLE_0 * FUNCTION_CALL_2 NUMBER
predict: for VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * NUMBER
predict: for for VARIABLE_4 in index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * in VARIABLE_7 + NUMBER VARIABLE_5 return VARIABLE_0 FUNCTION_CALL_4 NUMBER VARIABLE_1 if VARIABLE_3 == and index VARIABLE_8 VARIABLE_2 in FUNCTION_CALL_9 and
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: VARIABLE_4 VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_8 return VARIABLE_1 = for VARIABLE_4 in VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 VARIABLE_1 if VARIABLE_3 == in VARIABLE_0 VARIABLE_2 = VARIABLE_4 if VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 in index VARIABLE_4 VARIABLE_1 in for index VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 return if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_3 for VARIABLE_4 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = FUNCTION_CALL_6 > VARIABLE_2 return VARIABLE_2 = NUMBER if FUNCTION_CALL_7 >=
Edit distance = 1019
omega 2.5
predict: while index VARIABLE_2 and index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_7 NUMBER and VARIABLE_3 FUNCTION_CALL_9 FUNCTION_CALL_4 if FUNCTION_CALL_4 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 while or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_1 while in VARIABLE_1 VARIABLE_8 VARIABLE_4 > NUMBER VARIABLE_0 . FUNCTION_CALL_7 VARIABLE_4 . VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 VARIABLE_1 <= if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER VARIABLE_3 != return FUNCTION_CALL_6 if VARIABLE_7 VARIABLE_2 <= FUNCTION_CALL_3 and VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_6 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 VARIABLE_1 < index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 index index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and return index VARIABLE_2 in if VARIABLE_7 FUNCTION_CALL_5 VARIABLE_4 VARIABLE_0 in index VARIABLE_2 in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_7 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_4 + index VARIABLE_2 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_4 VARIABLE_1 and VARIABLE_4 VARIABLE_0 FUNCTION_CALL_7 return if FUNCTION_CALL_6 and VARIABLE_2 = FUNCTION_CALL_6
predict: if VARIABLE_7 FUNCTION_CALL_3 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_3 VARIABLE_3 < NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 != index VARIABLE_4 VARIABLE_1 in VARIABLE_0 VARIABLE_2 VARIABLE_0 . VARIABLE_1 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3 NUMBER / NUMBER FUNCTION_CALL_4 index VARIABLE_1 - VARIABLE_0 VARIABLE_2 VARIABLE_1 != VARIABLE_1 VARIABLE_1 FUNCTION_CALL_4 index or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_0 . NUMBER / VARIABLE_2 . VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1 return VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 / NUMBER VARIABLE_0 = NUMBER VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 VARIABLE_0 . index VARIABLE_3 VARIABLE_0 FUNCTION_CALL_3 return
predict: while VARIABLE_7 FUNCTION_CALL_5 index VARIABLE_4 VARIABLE_1 in in VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 VARIABLE_7 + NUMBER VARIABLE_5 or VARIABLE_0 < index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_4 if else return for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_4 for VARIABLE_4 in VARIABLE_2 VARIABLE_2 = VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_4 + NUMBER VARIABLE_0 = ( in FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_1 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 if else return VARIABLE_7 + NUMBER VARIABLE_5 index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_5 index VARIABLE_4 + VARIABLE_1 index VARIABLE_3 NUMBER index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_7 VARIABLE_4 if VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 < or index VARIABLE_2 or VARIABLE_0 < NUMBER return FUNCTION_CALL_7 VARIABLE_4 while VARIABLE_7 VARIABLE_2 VARIABLE_0 = VARIABLE_5 VARIABLE_4 = NUMBER index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 VARIABLE_3 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: if VARIABLE_7 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_1 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and index VARIABLE_2 VARIABLE_2 + + if FUNCTION_CALL_6 VARIABLE_3 > in FUNCTION_CALL_7 NUMBER VARIABLE_3 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_10 or VARIABLE_0 < index VARIABLE_8 while VARIABLE_7 VARIABLE_1 while if VARIABLE_3 == VARIABLE_7 and VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 == VARIABLE_7 VARIABLE_1 index VARIABLE_6 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 VARIABLE_1 while VARIABLE_7 VARIABLE_1 while index in VARIABLE_7 index VARIABLE_6 VARIABLE_6 + NUMBER index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and index VARIABLE_8 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = else return VARIABLE_7 + NUMBER VARIABLE_5 index index VARIABLE_6 VARIABLE_6 + FUNCTION_CALL_4 and VARIABLE_7 + NUMBER VARIABLE_5 index index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_9 VARIABLE_7 VARIABLE_1 index VARIABLE_3 = index VARIABLE_8 VARIABLE_2 VARIABLE_5 < index index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 if VARIABLE_0 FUNCTION_CALL_4 index or VARIABLE_0 < NUMBER return FUNCTION_CALL_10 index VARIABLE_8 index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 FUNCTION_CALL_10 while VARIABLE_5 < VARIABLE_4 NUMBER VARIABLE_7 == index VARIABLE_8 VARIABLE_5 = NUMBER index VARIABLE_2 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 NUMBER index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 VARIABLE_2 . return FUNCTION_CALL_11 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_4 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 = for VARIABLE_4 in FUNCTION_CALL_7 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0 = VARIABLE_4 VARIABLE_0 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: FUNCTION_CALL_7 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 if if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 index VARIABLE_2 = return VARIABLE_1 return false else return true VARIABLE_4 VARIABLE_0 index VARIABLE_2 = VARIABLE_1 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1 ( if FUNCTION_CALL_4 index VARIABLE_6 = VARIABLE_8 index VARIABLE_3 VARIABLE_3 VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 / in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_5 return VARIABLE_5 VARIABLE_0 if FUNCTION_CALL_6 index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_4 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 VARIABLE_4 VARIABLE_0 sublist VARIABLE_7 / NUMBER + in FUNCTION_CALL_7 NUMBER VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_2 in VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER return VARIABLE_0 * FUNCTION_CALL_2 NUMBER
predict: for VARIABLE_2 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * NUMBER
predict: for for VARIABLE_4 in index VARIABLE_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * in VARIABLE_7 + NUMBER VARIABLE_5 return VARIABLE_0 FUNCTION_CALL_4 NUMBER VARIABLE_1 if VARIABLE_3 == and index VARIABLE_8 VARIABLE_2 in FUNCTION_CALL_9 and
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = VARIABLE_1 return VARIABLE_3 * FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2
predict: VARIABLE_4 VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_8 return VARIABLE_1 = for VARIABLE_4 in VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_6 = VARIABLE_7 index VARIABLE_3 VARIABLE_3 > if VARIABLE_1 VARIABLE_0 for
predict: return VARIABLE_5 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 FUNCTION_CALL_3 VARIABLE_0 NUMBER FUNCTION_CALL_4 VARIABLE_1 if VARIABLE_3 == in VARIABLE_0 VARIABLE_2 = VARIABLE_4 if VARIABLE_4 VARIABLE_2 = VARIABLE_2 + index VARIABLE_2 or VARIABLE_2 < FUNCTION_CALL_9 VARIABLE_3 and VARIABLE_4 in index VARIABLE_4 VARIABLE_1 in for index VARIABLE_3 EMPTY_LIST > VARIABLE_0
predict: VARIABLE_0 = FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_1 FUNCTION_CALL_5 return if VARIABLE_3 == if FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_3 for VARIABLE_4 index
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER VARIABLE_0 if VARIABLE_0 > NUMBER VARIABLE_2 return VARIABLE_2 FUNCTION_CALL_7 >= FUNCTION_CALL_6
Edit distance = 1019
