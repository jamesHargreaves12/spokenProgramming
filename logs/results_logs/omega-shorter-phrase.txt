omega 0.5
predict: while VARIABLE_2 VARIABLE_1 FUNCTION_CALL_4
predict: index VARIABLE_2 if VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 FUNCTION_CALL_8 = FUNCTION_CALL_6 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_5 FUNCTION_CALL_6 == for VARIABLE_5 VARIABLE_3 != - if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index VARIABLE_2 in VARIABLE_3 for VARIABLE_5 FUNCTION_CALL_2 and VARIABLE_0 index FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2 FUNCTION_CALL_6 FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while VARIABLE_1 =
predict: while index VARIABLE_2 for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_4 FUNCTION_CALL_9 index NUMBER FUNCTION_CALL_9 FUNCTION_CALL_4 FUNCTION_CALL_4 VARIABLE_1 . while index VARIABLE_2
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_1 + if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_1 return VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 + = / NUMBER + NUMBER return VARIABLE_3 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / return VARIABLE_3 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: if for VARIABLE_5 FUNCTION_CALL_3 index index VARIABLE_1 VARIABLE_0 VARIABLE_2 < VARIABLE_4 = index NUMBER
predict: return index VARIABLE_1 FUNCTION_CALL_2 FUNCTION_CALL_4 - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 for VARIABLE_5 for VARIABLE_5 NUMBER / for VARIABLE_5 FUNCTION_CALL_5 FUNCTION_CALL_4 - NUMBER VARIABLE_0 index VARIABLE_1 index VARIABLE_0 VARIABLE_0 NUMBER / NUMBER . FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 in FUNCTION_CALL_4 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while VARIABLE_4 <= FUNCTION_CALL_7 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3 VARIABLE_2
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 VARIABLE_4 + VARIABLE_5 = NUMBER VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5
predict: VARIABLE_1 + + FUNCTION_CALL_5 VARIABLE_0 = VARIABLE_2 VARIABLE_4 FUNCTION_CALL_4 NUMBER VARIABLE_4 VARIABLE_4 ( else if VARIABLE_5 = FUNCTION_CALL_7 VARIABLE_3 VARIABLE_5
predict: return else return if VARIABLE_2 VARIABLE_0 = EMPTY_LIST <= return VARIABLE_3 index VARIABLE_5 index VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 = VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: while else return index VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_1 + NUMBER NUMBER return index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_3 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_10 index index VARIABLE_1 VARIABLE_0 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == == index VARIABLE_6 NUMBER VARIABLE_5 = FUNCTION_CALL_4 VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 == VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 FUNCTION_CALL_4 + = VARIABLE_4 in VARIABLE_1 VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 NUMBER VARIABLE_2
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6
predict: else return FUNCTION_CALL_4 VARIABLE_1 = index VARIABLE_7 index index index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_7 + index VARIABLE_6 NUMBER return and index VARIABLE_7 + VARIABLE_7 index NUMBER + while VARIABLE_1
predict: while VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_5 VARIABLE_5 index VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 + VARIABLE_1 while VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 VARIABLE_2 in while while VARIABLE_7 + ) index VARIABLE_3 VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 NUMBER VARIABLE_2 = NUMBER VARIABLE_1 . FUNCTION_CALL_7 VARIABLE_1 NUMBER VARIABLE_2
predict: return VARIABLE_1 .
predict: else FUNCTION_CALL_5 VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_2 / NUMBER ) ( FUNCTION_CALL_4 VARIABLE_1
predict: return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 ) FUNCTION_CALL_4 VARIABLE_0 + NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5 -
predict: return for in index VARIABLE_1 FUNCTION_CALL_4 * VARIABLE_0 VARIABLE_5 * == + VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER VARIABLE_0 VARIABLE_2 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 FUNCTION_CALL_6 VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_4 VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 VARIABLE_4 VARIABLE_0 return VARIABLE_0
predict: ) = EMPTY_LIST VARIABLE_0
predict: return VARIABLE_3 for in index VARIABLE_1 FUNCTION_CALL_4 return VARIABLE_0 VARIABLE_2 <
predict: if > VARIABLE_4 VARIABLE_0 + ) FUNCTION_CALL_2 VARIABLE_0
predict: return VARIABLE_0
predict: = EMPTY_LIST index VARIABLE_3
predict: for VARIABLE_4 .
predict: if VARIABLE_4 > VARIABLE_2 FUNCTION_CALL_6 VARIABLE_4 index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_7 VARIABLE_3 >= VARIABLE_2
predict: return VARIABLE_2
Edit distance = 571
omega 1.0
predict: while VARIABLE_2 VARIABLE_1 FUNCTION_CALL_4
predict: index VARIABLE_2 if VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 FUNCTION_CALL_8 = FUNCTION_CALL_6 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_5 FUNCTION_CALL_6 == for VARIABLE_5 VARIABLE_3 != - if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index VARIABLE_2 in VARIABLE_3 for VARIABLE_5 FUNCTION_CALL_2 and VARIABLE_0 index FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2 FUNCTION_CALL_6 FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while VARIABLE_1 =
predict: while index VARIABLE_2 for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_4 FUNCTION_CALL_9 index NUMBER FUNCTION_CALL_9 FUNCTION_CALL_4 FUNCTION_CALL_4 VARIABLE_1 . while index VARIABLE_2
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_1 + if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_1 return VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 + = / NUMBER + NUMBER return VARIABLE_3 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / return VARIABLE_3 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: if for VARIABLE_5 FUNCTION_CALL_3 index index VARIABLE_1 VARIABLE_0 VARIABLE_2 < VARIABLE_4 = VARIABLE_2 VARIABLE_1 = NUMBER
predict: return index VARIABLE_1 FUNCTION_CALL_2 FUNCTION_CALL_4 - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 for VARIABLE_5 for VARIABLE_5 NUMBER / for VARIABLE_5 FUNCTION_CALL_5 FUNCTION_CALL_4 - NUMBER VARIABLE_0 index VARIABLE_1 index VARIABLE_0 VARIABLE_0 NUMBER / NUMBER . FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 in FUNCTION_CALL_4 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while VARIABLE_4 <= FUNCTION_CALL_7 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3 VARIABLE_2
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 VARIABLE_4 + VARIABLE_5 = NUMBER VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5
predict: else if VARIABLE_3 VARIABLE_1 + + = VARIABLE_2 = FUNCTION_CALL_4 NUMBER VARIABLE_4 VARIABLE_4 ) VARIABLE_5 VARIABLE_4 ( VARIABLE_5 = FUNCTION_CALL_7
predict: return else return if VARIABLE_2 VARIABLE_0 = EMPTY_LIST <= return VARIABLE_3 index VARIABLE_5 index VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 = VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: while else return index VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_1 + NUMBER NUMBER return index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_3 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_10 index index VARIABLE_1 VARIABLE_0 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == == index VARIABLE_6 NUMBER VARIABLE_5 = FUNCTION_CALL_4 VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 == VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 FUNCTION_CALL_4 + = VARIABLE_4 in VARIABLE_1 VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 NUMBER VARIABLE_2
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6
predict: else return FUNCTION_CALL_4 VARIABLE_1 = index VARIABLE_7 index index index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_7 + index VARIABLE_6 NUMBER return and index VARIABLE_7 + VARIABLE_7 index NUMBER + while VARIABLE_1
predict: while VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_1 < FUNCTION_CALL_10 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 + while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_2 while VARIABLE_6 while VARIABLE_7 + ) VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 NUMBER VARIABLE_2 = NUMBER VARIABLE_1 . FUNCTION_CALL_7 VARIABLE_1 NUMBER VARIABLE_2
predict: return VARIABLE_1 .
predict: else FUNCTION_CALL_5 VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_2 / NUMBER ) ( FUNCTION_CALL_4 VARIABLE_1
predict: return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 ) FUNCTION_CALL_4 VARIABLE_0 + NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: return for in index VARIABLE_1 FUNCTION_CALL_4 * VARIABLE_0 VARIABLE_5 * == + VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 VARIABLE_2 VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_4 VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 VARIABLE_4 VARIABLE_0 return VARIABLE_0
predict: ) = EMPTY_LIST VARIABLE_0
predict: return VARIABLE_3 for in index VARIABLE_1 FUNCTION_CALL_4 return VARIABLE_0 VARIABLE_2 <
predict: if > VARIABLE_4 VARIABLE_0 + ) FUNCTION_CALL_2 VARIABLE_0
predict: return VARIABLE_0
predict: = EMPTY_LIST index VARIABLE_3
predict: for VARIABLE_4 .
predict: if VARIABLE_4 > VARIABLE_2 FUNCTION_CALL_6 VARIABLE_4 index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_7 VARIABLE_3 >= VARIABLE_2
predict: return VARIABLE_2
Edit distance = 570
omega 1.5
predict: while VARIABLE_2 VARIABLE_1 FUNCTION_CALL_4
predict: index VARIABLE_2 if VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 FUNCTION_CALL_8 = FUNCTION_CALL_6 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_5 FUNCTION_CALL_6 == for VARIABLE_5 VARIABLE_3 != - if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index VARIABLE_2 in VARIABLE_3 for VARIABLE_5 FUNCTION_CALL_2 and VARIABLE_0 index FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2 FUNCTION_CALL_6 FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while VARIABLE_1 =
predict: while index VARIABLE_2 for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_4 FUNCTION_CALL_9 index NUMBER FUNCTION_CALL_9 FUNCTION_CALL_4 FUNCTION_CALL_4 VARIABLE_1 . while index VARIABLE_2
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_1 + if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_1 return VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 + = / NUMBER + NUMBER return VARIABLE_3 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / return VARIABLE_3 index VARIABLE_2 + NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: if for VARIABLE_5 FUNCTION_CALL_3 index index VARIABLE_1 VARIABLE_0 VARIABLE_2 < VARIABLE_4 = VARIABLE_2 VARIABLE_1 = NUMBER
predict: return index VARIABLE_1 FUNCTION_CALL_2 FUNCTION_CALL_4 - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 for VARIABLE_5 for VARIABLE_5 NUMBER / for VARIABLE_5 FUNCTION_CALL_5 FUNCTION_CALL_4 - NUMBER VARIABLE_0 index VARIABLE_1 index VARIABLE_0 VARIABLE_0 NUMBER / NUMBER . FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 in FUNCTION_CALL_4 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while VARIABLE_4 <= FUNCTION_CALL_7 or VARIABLE_2 VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 = VARIABLE_1 index VARIABLE_4 + VARIABLE_5 = NUMBER VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5
predict: else if VARIABLE_5 = VARIABLE_1 + + = VARIABLE_2 = FUNCTION_CALL_4 NUMBER VARIABLE_4 VARIABLE_4 ) VARIABLE_5 VARIABLE_4 ( FUNCTION_CALL_7 VARIABLE_3
predict: return else return if VARIABLE_2 VARIABLE_0 = EMPTY_LIST <= return VARIABLE_3 index VARIABLE_5 index VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 = VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: while else return index VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_1 + NUMBER NUMBER return index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_3 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_10 index index VARIABLE_1 VARIABLE_0 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == == index VARIABLE_6 NUMBER VARIABLE_5 = FUNCTION_CALL_4 VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 == VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 FUNCTION_CALL_4 + = VARIABLE_4 in VARIABLE_1 VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 NUMBER VARIABLE_2
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6
predict: else return FUNCTION_CALL_4 VARIABLE_1 = index VARIABLE_7 index index index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_7 + index VARIABLE_6 NUMBER return and index VARIABLE_7 + VARIABLE_7 index NUMBER + while VARIABLE_1
predict: while VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_1 < FUNCTION_CALL_10 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 + while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_2 VARIABLE_6 while while VARIABLE_7 + ) VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 NUMBER VARIABLE_2 = NUMBER VARIABLE_1 . FUNCTION_CALL_7 VARIABLE_1 NUMBER VARIABLE_2
predict: return VARIABLE_1 .
predict: else VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 NUMBER VARIABLE_2 / NUMBER ) EMPTY_LIST VARIABLE_1
predict: return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 ) FUNCTION_CALL_4 VARIABLE_0 + NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: return for in index VARIABLE_1 FUNCTION_CALL_4 * VARIABLE_0 VARIABLE_5 * == + VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 VARIABLE_2 VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_4 VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 VARIABLE_4 VARIABLE_0 return VARIABLE_0
predict: ) = EMPTY_LIST VARIABLE_0
predict: return VARIABLE_3 for in index VARIABLE_1 FUNCTION_CALL_4 return VARIABLE_0 VARIABLE_2 <
predict: if > VARIABLE_4 VARIABLE_0 + ) FUNCTION_CALL_2 VARIABLE_0
predict: return VARIABLE_0
predict: = EMPTY_LIST index VARIABLE_3
predict: for VARIABLE_4 .
predict: if VARIABLE_4 > VARIABLE_2 FUNCTION_CALL_6 VARIABLE_4 index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_7 >= VARIABLE_3 VARIABLE_2
predict: return VARIABLE_2
Edit distance = 569
omega 2.0
predict: while VARIABLE_2 VARIABLE_1 FUNCTION_CALL_4
predict: index VARIABLE_2 if VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 FUNCTION_CALL_8 = FUNCTION_CALL_6 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_5 FUNCTION_CALL_6 == for VARIABLE_5 VARIABLE_3 != - if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index VARIABLE_2 in VARIABLE_3 for VARIABLE_5 FUNCTION_CALL_2 and VARIABLE_0 index FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2 FUNCTION_CALL_6 FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while VARIABLE_1 =
predict: while index VARIABLE_2 for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_4 FUNCTION_CALL_9 index NUMBER FUNCTION_CALL_9 FUNCTION_CALL_4 FUNCTION_CALL_4 VARIABLE_1 . while index VARIABLE_2
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_1 + if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_1 return VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 + = / NUMBER + NUMBER return VARIABLE_3 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / return VARIABLE_3 index VARIABLE_2 + = NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: if for VARIABLE_5 FUNCTION_CALL_3 index index VARIABLE_1 VARIABLE_0 VARIABLE_2 < VARIABLE_4 = VARIABLE_2 VARIABLE_1 = NUMBER
predict: return index VARIABLE_1 FUNCTION_CALL_2 FUNCTION_CALL_4 - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 for VARIABLE_5 for VARIABLE_5 NUMBER / for VARIABLE_5 FUNCTION_CALL_5 FUNCTION_CALL_4 - NUMBER VARIABLE_0 index VARIABLE_1 index VARIABLE_0 VARIABLE_0 NUMBER / NUMBER . FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 VARIABLE_1 = VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 in FUNCTION_CALL_4 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while VARIABLE_4 <= FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 = VARIABLE_1 index VARIABLE_4 + VARIABLE_5 = NUMBER VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5
predict: else if VARIABLE_5 = VARIABLE_1 + + = VARIABLE_2 = FUNCTION_CALL_4 NUMBER VARIABLE_4 VARIABLE_4 ) VARIABLE_5 VARIABLE_4 ( FUNCTION_CALL_7 VARIABLE_3
predict: return else return if VARIABLE_2 VARIABLE_0 = EMPTY_LIST <= return VARIABLE_3 index VARIABLE_5 index VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 = VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: while else return index VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_1 + NUMBER NUMBER return index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_3 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_10 index index VARIABLE_1 VARIABLE_0 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == == index VARIABLE_6 NUMBER VARIABLE_5 = FUNCTION_CALL_4 VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 == VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 FUNCTION_CALL_4 + = VARIABLE_4 in VARIABLE_1 VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 NUMBER VARIABLE_2
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6
predict: else return FUNCTION_CALL_4 VARIABLE_1 = index VARIABLE_7 index index index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_7 + index VARIABLE_6 NUMBER return and index VARIABLE_7 + VARIABLE_7 index NUMBER + while VARIABLE_1
predict: while VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_1 < FUNCTION_CALL_10 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 + while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_2 VARIABLE_6 while while VARIABLE_7 + ) VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 NUMBER VARIABLE_2 = NUMBER VARIABLE_1 . FUNCTION_CALL_7 VARIABLE_1 NUMBER VARIABLE_2
predict: return VARIABLE_1 .
predict: else VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 NUMBER VARIABLE_2 / NUMBER ) EMPTY_LIST VARIABLE_1
predict: return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 ) FUNCTION_CALL_4 VARIABLE_0 + NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 * VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5
predict: return for in index VARIABLE_1 FUNCTION_CALL_4 * VARIABLE_0 VARIABLE_5 * == + VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 VARIABLE_2 VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_4 VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 VARIABLE_4 VARIABLE_0 return VARIABLE_0
predict: ) = EMPTY_LIST VARIABLE_0
predict: return VARIABLE_3 for in index VARIABLE_1 FUNCTION_CALL_4 return VARIABLE_0 VARIABLE_2 <
predict: if > VARIABLE_4 VARIABLE_0 + ) FUNCTION_CALL_2 VARIABLE_0
predict: return VARIABLE_0
predict: = EMPTY_LIST index VARIABLE_3
predict: for VARIABLE_4 .
predict: if VARIABLE_4 > VARIABLE_2 FUNCTION_CALL_6 VARIABLE_4 index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_7 >= VARIABLE_3 VARIABLE_2
predict: return VARIABLE_2
Edit distance = 564
omega 2.5
predict: while VARIABLE_2 VARIABLE_1 FUNCTION_CALL_4
predict: index VARIABLE_2 if VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 FUNCTION_CALL_8 = FUNCTION_CALL_6 VARIABLE_1 = and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_5 FUNCTION_CALL_6 == for VARIABLE_5 VARIABLE_3 != - if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_6 index VARIABLE_2 in VARIABLE_3 for VARIABLE_5 FUNCTION_CALL_2 and VARIABLE_0 index FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2 FUNCTION_CALL_6 FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while VARIABLE_1 =
predict: while index VARIABLE_2 for VARIABLE_5 FUNCTION_CALL_6 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_4 FUNCTION_CALL_9 index NUMBER FUNCTION_CALL_9 FUNCTION_CALL_4 FUNCTION_CALL_4 VARIABLE_1 . while index VARIABLE_2
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_1 + if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_1 return VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 + = / NUMBER + NUMBER return VARIABLE_3 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / return VARIABLE_3 index VARIABLE_2 + = NUMBER VARIABLE_2
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: if for VARIABLE_5 FUNCTION_CALL_3 index index VARIABLE_1 VARIABLE_0 VARIABLE_2 < VARIABLE_4 = VARIABLE_2 VARIABLE_1 = NUMBER
predict: return index VARIABLE_1 FUNCTION_CALL_2 FUNCTION_CALL_4 - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 for VARIABLE_5 for VARIABLE_5 NUMBER / for VARIABLE_5 FUNCTION_CALL_5 FUNCTION_CALL_4 - NUMBER VARIABLE_0 index VARIABLE_1 index VARIABLE_0 VARIABLE_0 NUMBER / NUMBER . FUNCTION_CALL_5 ) / NUMBER VARIABLE_1 VARIABLE_1 = VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 in FUNCTION_CALL_4 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: while VARIABLE_4 <= FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 = VARIABLE_1 index VARIABLE_4 + VARIABLE_5 = NUMBER VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5
predict: else if VARIABLE_5 = VARIABLE_1 + + = VARIABLE_2 = FUNCTION_CALL_4 NUMBER VARIABLE_4 VARIABLE_4 ) VARIABLE_5 VARIABLE_4 ( FUNCTION_CALL_7 VARIABLE_3
predict: return else return if VARIABLE_2 VARIABLE_0 = EMPTY_LIST <= return VARIABLE_3 index VARIABLE_5 index VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_4 FUNCTION_CALL_4 VARIABLE_4 = VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: while else return index VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_1 + NUMBER NUMBER return index VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_3 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_5 > VARIABLE_3 FUNCTION_CALL_10 index index VARIABLE_1 VARIABLE_0 > return NUMBER and VARIABLE_3 NUMBER VARIABLE_7 == == index VARIABLE_6 NUMBER VARIABLE_5 = FUNCTION_CALL_4 VARIABLE_2 FUNCTION_CALL_5 FUNCTION_CALL_11 == VARIABLE_3 and FUNCTION_CALL_5 FUNCTION_CALL_11 FUNCTION_CALL_4 + = VARIABLE_4 in VARIABLE_1 VARIABLE_2 = VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 VARIABLE_1 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0 ==
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_3 VARIABLE_6 < FUNCTION_CALL_10 FUNCTION_CALL_4 NUMBER VARIABLE_2
predict: if VARIABLE_3 index VARIABLE_5 < VARIABLE_2 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 VARIABLE_3 index VARIABLE_5 ) + NUMBER VARIABLE_5 FUNCTION_CALL_11 VARIABLE_6
predict: else return FUNCTION_CALL_4 VARIABLE_1 = index VARIABLE_7 index index index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 VARIABLE_7 + index VARIABLE_6 NUMBER return and index VARIABLE_7 + VARIABLE_7 index NUMBER + while VARIABLE_1
predict: while VARIABLE_1
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 index VARIABLE_1 < FUNCTION_CALL_10 FUNCTION_CALL_4 VARIABLE_1 = VARIABLE_7 = VARIABLE_2 + VARIABLE_6 VARIABLE_7 + while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_2 while VARIABLE_6 while VARIABLE_7 + ) VARIABLE_8 VARIABLE_1
predict: if FUNCTION_CALL_4 NUMBER VARIABLE_2 = NUMBER VARIABLE_1 . FUNCTION_CALL_7 VARIABLE_1 NUMBER VARIABLE_2
predict: return VARIABLE_1 .
predict: else return VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 NUMBER VARIABLE_2 / NUMBER ) EMPTY_LIST VARIABLE_1
predict: return if VARIABLE_5 > VARIABLE_3 + VARIABLE_2 ) FUNCTION_CALL_4 VARIABLE_0 + NUMBER FUNCTION_CALL_7 NUMBER VARIABLE_0 FUNCTION_CALL_6 VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 * VARIABLE_1 NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 FUNCTION_CALL_5
predict: return for in index VARIABLE_1 FUNCTION_CALL_4 * VARIABLE_0 VARIABLE_5 * == + VARIABLE_6 VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1 VARIABLE_2 VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_4 VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 VARIABLE_4 VARIABLE_0 return VARIABLE_0
predict: ) = EMPTY_LIST VARIABLE_0
predict: return VARIABLE_3 for in index VARIABLE_1 FUNCTION_CALL_4 return VARIABLE_0 VARIABLE_2 <
predict: if > VARIABLE_4 VARIABLE_0 + ) FUNCTION_CALL_2 VARIABLE_0
predict: return VARIABLE_0
predict: = EMPTY_LIST index VARIABLE_3
predict: for VARIABLE_4 .
predict: if VARIABLE_4 > VARIABLE_2 FUNCTION_CALL_6 VARIABLE_4 index VARIABLE_3
predict: return VARIABLE_3
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_7 >= VARIABLE_3 VARIABLE_2
predict: return VARIABLE_2
Edit distance = 565
