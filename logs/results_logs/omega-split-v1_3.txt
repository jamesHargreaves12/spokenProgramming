omega 2.8
predict: while index VARIABLE_2 and VARIABLE_3 VARIABLE_1 FUNCTION_CALL_4
predict: index NUMBER VARIABLE_0 if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 VARIABLE_4 . FUNCTION_CALL_8 index NUMBER VARIABLE_0 VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index index NUMBER VARIABLE_0 = . NUMBER if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_3 index NUMBER VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 and VARIABLE_3 NUMBER VARIABLE_7 + = NUMBER index FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while in ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_4 index FUNCTION_CALL_4 VARIABLE_1 while index and VARIABLE_3 FUNCTION_CALL_9 ( FUNCTION_CALL_4 ==
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: return index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 - VARIABLE_3 VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + sublist VARIABLE_7 / NUMBER + return VARIABLE_3 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 NUMBER index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 NUMBER ) / return VARIABLE_3 index VARIABLE_2 VARIABLE_4 + return NUMBER VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0
predict: return FUNCTION_CALL_7 VARIABLE_0 VARIABLE_1
predict: index NUMBER VARIABLE_0 if VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 == VARIABLE_3 < return VARIABLE_2 VARIABLE_4 = VARIABLE_3 = NUMBER FUNCTION_CALL_4
predict: return index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_1 VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 index NUMBER VARIABLE_0 NUMBER / NUMBER FUNCTION_CALL_5 VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER index NUMBER VARIABLE_0 == NUMBER / VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 index FUNCTION_CALL_5 ( / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 NUMBER
predict: return NUMBER VARIABLE_2 == VARIABLE_5 VARIABLE_2 == index VARIABLE_4 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 FUNCTION_CALL_7 index VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index VARIABLE_1
predict: while VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_2 or VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3
predict: if VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_2 VARIABLE_1 + = NUMBER VARIABLE_5 VARIABLE_3 VARIABLE_5 FUNCTION_CALL_4 VARIABLE_5 NUMBER
predict: else if VARIABLE_5 FUNCTION_CALL_7 VARIABLE_3 VARIABLE_1 ( + = NUMBER VARIABLE_2 VARIABLE_4 + = NUMBER FUNCTION_CALL_4 VARIABLE_5 FUNCTION_CALL_5
predict: if else return index VARIABLE_2 index VARIABLE_4 VARIABLE_3 < return VARIABLE_3 index VARIABLE_5 index VARIABLE_8 = VARIABLE_1 index in FUNCTION_CALL_4 VARIABLE_2 + = NUMBER index VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 = VARIABLE_2 VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_5 +
predict: index VARIABLE_8 = VARIABLE_1 index else return in FUNCTION_CALL_4 = VARIABLE_0 - VARIABLE_2 + = NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 return VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_5 +
predict: if FUNCTION_CALL_10 index index NUMBER VARIABLE_0 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 VARIABLE_1 > return NUMBER NUMBER VARIABLE_7 VARIABLE_3 = index VARIABLE_6 VARIABLE_7 + = NUMBER VARIABLE_5 = index index VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 index index VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_1 FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 FUNCTION_CALL_4 = VARIABLE_7 + = NUMBER index VARIABLE_4 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 = VARIABLE_5 VARIABLE_2 VARIABLE_0 FUNCTION_CALL_3 FUNCTION_CALL_3 index VARIABLE_8 = VARIABLE_1 index VARIABLE_3 = VARIABLE_1 FUNCTION_CALL_10 VARIABLE_0
predict: while index VARIABLE_5 VARIABLE_3 < FUNCTION_CALL_10 return VARIABLE_3 and index VARIABLE_6 VARIABLE_3 < FUNCTION_CALL_10 index FUNCTION_CALL_4
predict: return VARIABLE_3 if index index VARIABLE_5 VARIABLE_3 < index VARIABLE_2 index index VARIABLE_6 FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + = NUMBER index VARIABLE_5 index VARIABLE_6 VARIABLE_6 + = FUNCTION_CALL_4 VARIABLE_5 index VARIABLE_3
predict: else return FUNCTION_CALL_4 VARIABLE_2 = index VARIABLE_8 = VARIABLE_1 index sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_7 + = NUMBER index VARIABLE_2 index index VARIABLE_6 and VARIABLE_3 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_6 + index VARIABLE_6 VARIABLE_2 + return NUMBER and index index VARIABLE_6 VARIABLE_6 + sublist VARIABLE_1 : - NUMBER VARIABLE_7 VARIABLE_2 + NUMBER VARIABLE_0 index while in
predict: while in
predict: while VARIABLE_5 < FUNCTION_CALL_10 VARIABLE_8 VARIABLE_7 = VARIABLE_3 index VARIABLE_5 VARIABLE_5 = < FUNCTION_CALL_10 VARIABLE_2 = VARIABLE_1 = VARIABLE_2 + = VARIABLE_7 = while in FUNCTION_CALL_4 VARIABLE_6 VARIABLE_7 VARIABLE_6 in while while VARIABLE_7 + + FUNCTION_CALL_4 VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_2 = NUMBER VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_1
predict: return VARIABLE_1
predict: else return VARIABLE_0 = FUNCTION_CALL_5 ( FUNCTION_CALL_4 VARIABLE_1 in FUNCTION_CALL_4 VARIABLE_2 / FUNCTION_CALL_5
predict: return VARIABLE_3 = VARIABLE_1 VARIABLE_1 FUNCTION_CALL_6 index VARIABLE_8 = VARIABLE_1 index in return VARIABLE_0 in FUNCTION_CALL_7 return VARIABLE_0 sublist VARIABLE_7 / NUMBER + return NUMBER in index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_5 - =
predict: for VARIABLE_2 in FUNCTION_CALL_2 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER * VARIABLE_1 in
predict: return VARIABLE_0
predict: for VARIABLE_2 = NUMBER VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 in FUNCTION_CALL_5
predict: index VARIABLE_4 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 * FUNCTION_CALL_4 index VARIABLE_5 VARIABLE_2 + VARIABLE_0 ( VARIABLE_0 = VARIABLE_6 = VARIABLE_2 in in and
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_2
predict: VARIABLE_0
predict: for VARIABLE_1
predict: if VARIABLE_4 > VARIABLE_3 + VARIABLE_4 VARIABLE_0 return
predict: FUNCTION_CALL_4 VARIABLE_0 = NUMBER EMPTY_LIST =
predict: return VARIABLE_3 for in index VARIABLE_8 = VARIABLE_1 index VARIABLE_7 VARIABLE_6 FUNCTION_CALL_4 index NUMBER VARIABLE_0 index VARIABLE_4 VARIABLE_2 = NUMBER <
predict: if > FUNCTION_CALL_4 + index VARIABLE_4 VARIABLE_7 + = NUMBER index NUMBER VARIABLE_0 return VARIABLE_0 FUNCTION_CALL_4 index NUMBER VARIABLE_0 = index in and FUNCTION_CALL_4
predict: return VARIABLE_0
predict: VARIABLE_0 index VARIABLE_3
predict: for VARIABLE_4 in
predict: if VARIABLE_4 > VARIABLE_2 VARIABLE_3 FUNCTION_CALL_6 VARIABLE_4 =
predict: return
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = FUNCTION_CALL_7 >=
predict: return VARIABLE_2
Edit distance = 731omega 2.9
predict: while index VARIABLE_2 and VARIABLE_3 VARIABLE_1 FUNCTION_CALL_4
predict: index NUMBER VARIABLE_0 if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_5 VARIABLE_1 VARIABLE_4 . FUNCTION_CALL_8 index NUMBER VARIABLE_0 VARIABLE_1 VARIABLE_1 = and VARIABLE_3 VARIABLE_3 VARIABLE_0 VARIABLE_1 index NUMBER VARIABLE_0 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index index NUMBER VARIABLE_0 = . NUMBER if index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_3 index NUMBER VARIABLE_0 FUNCTION_CALL_2 VARIABLE_0 and VARIABLE_3 NUMBER VARIABLE_7 + = NUMBER index FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_6 FUNCTION_CALL_4 index FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: while in ==
predict: while index VARIABLE_2 VARIABLE_0 index VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_4 index FUNCTION_CALL_4 VARIABLE_1 while index and VARIABLE_3 FUNCTION_CALL_9 ( FUNCTION_CALL_4 ==
predict: if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
