test enhanced v2 new
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 VARIABLE_1
predict: index for index VARIABLE_1 return VARIABLE_2 VARIABLE_4 = return NUMBER index VARIABLE_1 < += VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0
predict: if FUNCTION_CALL_4 index VARIABLE_1 != FUNCTION_CALL_4 index FUNCTION_CALL_3 VARIABLE_0 - VARIABLE_1
predict: return false
predict: return true
predict: FUNCTION_CALL_1 = VARIABLE_5
predict: = = FUNCTION_CALL_10 VARIABLE_4
predict: index VARIABLE_4 VARIABLE_4 VARIABLE_2 FUNCTION_CALL_9 FUNCTION_CALL_12 = return VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_10 index index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_1 NUMBER return VARIABLE_2 VARIABLE_4 = = VARIABLE_7 index index VARIABLE_6 = FUNCTION_CALL_1 = index VARIABLE_1 VARIABLE_4 index VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 in
predict: for VARIABLE_8 FUNCTION_CALL_4 NUMBER
predict: index VARIABLE_6 if index VARIABLE_6 += VARIABLE_1 VARIABLE_7 index = index index VARIABLE_9 = else index VARIABLE_6 += index VARIABLE_2 index VARIABLE_6 = index index VARIABLE_9 = VARIABLE_1 VARIABLE_7 VARIABLE_2 < ==
predict: return VARIABLE_3
predict: = EMPTY_LIST VARIABLE_0
predict: for in < VARIABLE_3 VARIABLE_1
predict: if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0
predict: return VARIABLE_0
predict: return NUMBER * VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0 * NUMBER
predict: return VARIABLE_0 = FUNCTION_CALL_2 VARIABLE_0
predict: VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 for VARIABLE_2 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER
predict: return VARIABLE_0
predict: VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER
predict: while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_3
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 < NUMBER
predict: VARIABLE_0 += NUMBER in *
predict: if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER
predict: VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER
predict: FUNCTION_CALL_3 VARIABLE_0
predict: else if VARIABLE_0 FUNCTION_CALL_2 NUMBER == NUMBER FUNCTION_CALL_3 STRING_CONST if VARIABLE_0 FUNCTION_CALL_2 NUMBER == NUMBER FUNCTION_CALL_3 STRING_CONST
predict: STRING_CONST
predict: VARIABLE_1 = NUMBER
predict: while FUNCTION_CALL_4 > NUMBER VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1
predict: VARIABLE_1 = VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 ++ VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 VARIABLE_1 *
predict: return VARIABLE_0
predict: VARIABLE_2 VARIABLE_0 index VARIABLE_1 =
predict: VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3
predict: VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: if VARIABLE_0 = NUMBER
predict: return false else
predict: if VARIABLE_0 = NUMBER
predict: return true else
predict: return VARIABLE_2 VARIABLE_4 = for index VARIABLE_1 return NUMBER index index and FUNCTION_CALL_3 index VARIABLE_0 += VARIABLE_1 in *
predict: if FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: while VARIABLE_0 <= FUNCTION_CALL_3 VARIABLE_1
predict: FUNCTION_CALL_4 VARIABLE_1 VARIABLE_0 != += NUMBER VARIABLE_0
predict: return VARIABLE_0 > FUNCTION_CALL_3 VARIABLE_1
Edit distance = 209
predict: return VARIABLE_0 * NUMBER
predict: VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 * NUMBER
predict: return VARIABLE_0 + VARIABLE_1 + VARIABLE_2
predict: for VARIABLE_1 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 < / NUMBER
predict: index if index index VARIABLE_1 return VARIABLE_0 index NUMBER != index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3
predict: return VARIABLE_2
predict: if FUNCTION_CALL_2 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: else FUNCTION_CALL_3 VARIABLE_0 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_2 VARIABLE_0 / NUMBER
predict: VARIABLE_1 = EMPTY_LIST
predict: for in VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 = NUMBER VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1
predict: return VARIABLE_1
predict: return VARIABLE_0 = index VARIABLE_1 index index index VARIABLE_1 in VARIABLE_0 index index index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 in VARIABLE_0
predict: VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: VARIABLE_0 / NUMBER VARIABLE_1 = FUNCTION_CALL_4
predict: for for VARIABLE_2 = NUMBER VARIABLE_2 = VARIABLE_1 ++ NUMBER
predict: if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2
predict: return false
predict: return true
predict: return FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 != EMPTY_LIST
predict: if FUNCTION_CALL_4 VARIABLE_1 > VARIABLE_0
predict: VARIABLE_0 . FUNCTION_CALL_4 VARIABLE_1 VARIABLE_0 =
predict: FUNCTION_CALL_4 NUMBER VARIABLE_1
predict: for VARIABLE_0 = NUMBER NUMBER
predict: if VARIABLE_0 FUNCTION_CALL_3 NUMBER == NUMBER
predict: VARIABLE_0 FUNCTION_CALL_3 NUMBER == NUMBER
predict: FUNCTION_CALL_4 ++ index STRING_CONST index
predict: return VARIABLE_0 else return if VARIABLE_5 FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 ++ index index STRING_CONST
predict: return VARIABLE_0 else return if VARIABLE_5 FUNCTION_CALL_3 return NUMBER in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4 ++ index index STRING_CONST
predict: else FUNCTION_CALL_4 ++ VARIABLE_0 index
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: = VARIABLE_3 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0 += VARIABLE_3 index VARIABLE_2
predict: return VARIABLE_3
predict: VARIABLE_0 = = VARIABLE_1
predict: index for in VARIABLE_2 in VARIABLE_0 VARIABLE_3 VARIABLE_4 +=
predict: return VARIABLE_3
Edit distance = 112
predict: EMPTY_LIST VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 ++
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3
predict: VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: for in VARIABLE_1 in VARIABLE_0 += VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_2
predict: if VARIABLE_0 = NUMBER
predict: return false
predict: if VARIABLE_0 = NUMBER
predict: return true
predict: else FUNCTION_CALL_4
predict: for VARIABLE_2 in FUNCTION_CALL_5 VARIABLE_0
predict: if VARIABLE_0 FUNCTION_CALL_6 FUNCTION_CALL_4 VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_2 VARIABLE_1 index VARIABLE_3 += VARIABLE_3 in VARIABLE_0
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_1 = VARIABLE_1 += VARIABLE_0 VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 += VARIABLE_0 VARIABLE_1
predict: return VARIABLE_0
predict: return VARIABLE_0 * NUMBER * NUMBER
predict: VARIABLE_2 <= NUMBER FUNCTION_CALL_7 if
predict: if >=
predict: return index VARIABLE_2 index VARIABLE_4 in FUNCTION_CALL_4 - index VARIABLE_5 index index VARIABLE_2 return VARIABLE_0 EMPTY_LIST index VARIABLE_4 for for EMPTY_LIST FUNCTION_CALL_8 return VARIABLE_0 FUNCTION_CALL_8 in VARIABLE_0 >= else return VARIABLE_1 index >= index VARIABLE_4 VARIABLE_4 > VARIABLE_5 if VARIABLE_2 index VARIABLE_5 in for FUNCTION_CALL_3 index VARIABLE_1 in FUNCTION_CALL_3 = VARIABLE_0
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1 = VARIABLE_1 index VARIABLE_2
predict: return VARIABLE_1
predict: for VARIABLE_1 in FUNCTION_CALL_2 NUMBER VARIABLE_0 = STRING_CONST
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER += STRING_CONST VARIABLE_0
predict: if VARIABLE_1 = FUNCTION_CALL_4 NUMBER += STRING_CONST VARIABLE_0
predict: index if for VARIABLE_1 FUNCTION_CALL_6 VARIABLE_0 NUMBER VARIABLE_0 += NUMBER VARIABLE_1 FUNCTION_CALL_4 NUMBER FUNCTION_CALL_4
predict: index VARIABLE_0 = VARIABLE_1
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER
predict: if VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_1 - VARIABLE_2
predict: return false
predict: return true
predict: if VARIABLE_0 = NUMBER or VARIABLE_0 = NUMBER
predict: return true
predict: if VARIABLE_0 % NUMBER == NUMBER or VARIABLE_0 NUMBER
predict: return false
predict: index for index VARIABLE_1 in FUNCTION_CALL_3 ++ FUNCTION_CALL_4 NUMBER == + NUMBER index FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_4 == NUMBER
predict: if VARIABLE_0 % VARIABLE_1 = NUMBER
predict: return false
predict: else return true
predict: VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
Edit distance = 186
predict: VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1
predict: return VARIABLE_2 VARIABLE_4 = for index VARIABLE_4 NUMBER return VARIABLE_3 index VARIABLE_4 index for VARIABLE_1 VARIABLE_2 = < VARIABLE_4 += NUMBER
predict: VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: return true
predict: VARIABLE_0 * NUMBER * NUMBER
predict: if VARIABLE_0 == NUMBER or NUMBER
predict: return NUMBER
predict: else return VARIABLE_0 * return
predict: = VARIABLE_0 FUNCTION_CALL_3 NUMBER
predict: index VARIABLE_2 for in EMPTY_LIST index VARIABLE_1 += > return VARIABLE_0 > for NUMBER EMPTY_LIST in
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER VARIABLE_1 = NUMBER
predict: for VARIABLE_6 in FUNCTION_CALL_4 NUMBER VARIABLE_8 FUNCTION_CALL_12 VARIABLE_7 + FUNCTION_CALL_12
predict: if VARIABLE_6 index VARIABLE_7 = FUNCTION_CALL_12 VARIABLE_7 + NUMBER
predict: VARIABLE_5 index VARIABLE_6 = VARIABLE_7 VARIABLE_3
predict: VARIABLE_3 ++
predict: if VARIABLE_3 = FUNCTION_CALL_12 VARIABLE_8 + NUMBER
predict: VARIABLE_5 VARIABLE_6 = VARIABLE_7 VARIABLE_4 VARIABLE_4 ++
predict: if VARIABLE_7 VARIABLE_4 <= VARIABLE_8 VARIABLE_3
predict: VARIABLE_5 VARIABLE_6 = VARIABLE_4 VARIABLE_7 VARIABLE_4 ++
predict: return VARIABLE_5
predict: return for in and FUNCTION_CALL_3 return NUMBER FUNCTION_CALL_4 VARIABLE_1
predict: if FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 = NUMBER
predict: return false
predict: return true
predict: VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 VARIABLE_0 FUNCTION_CALL_8
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 FUNCTION_CALL_8 VARIABLE_3 ++
predict: if VARIABLE_3 != VARIABLE_4
predict: VARIABLE_3 != VARIABLE_5
predict: return VARIABLE_3 = VARIABLE_0 VARIABLE_3
predict: else if VARIABLE_3 = VARIABLE_4
predict: VARIABLE_2 VARIABLE_3 VARIABLE_0 VARIABLE_5
predict: else VARIABLE_3 = VARIABLE_0 =
predict: return VARIABLE_2
predict: VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 = NUMBER
predict: while VARIABLE_2 VARIABLE_0
predict: if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER
predict: VARIABLE_7 = VARIABLE_4
predict: if VARIABLE_7 == NUMBER or NUMBER
predict: return VARIABLE_4
predict: VARIABLE_0 index VARIABLE_7 / NUMBER VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4 sublist VARIABLE_7 / NUMBER NUMBER VARIABLE_7 VARIABLE_2 = NUMBER VARIABLE_0 = NUMBER VARIABLE_5 = EMPTY_LIST sublist NUMBER else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 +
predict: while index VARIABLE_2 < VARIABLE_1 or VARIABLE_0 < index VARIABLE_3
predict: return if VARIABLE_0 VARIABLE_0 > in FUNCTION_CALL_4 index VARIABLE_3 < or VARIABLE_2 VARIABLE_1
predict: VARIABLE_3 index VARIABLE_2 = VARIABLE_1 index VARIABLE_0
predict: return VARIABLE_3 FUNCTION_CALL_12 index index VARIABLE_2 VARIABLE_2 + NUMBER VARIABLE_2 = VARIABLE_5
predict: index else return FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 + NUMBER VARIABLE_0 = VARIABLE_0 VARIABLE_5
predict: return VARIABLE_5
predict: VARIABLE_0 = true
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1 ++ VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = index VARIABLE_2 FUNCTION_CALL_5 for VARIABLE_1 != NUMBER
predict: return VARIABLE_0
predict: = VARIABLE_0 * NUMBER
predict: * NUMBER
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: = EMPTY_LIST VARIABLE_0 = EMPTY_LIST VARIABLE_1 = NUMBER VARIABLE_2 = NUMBER
predict: VARIABLE_1 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_3
predict: VARIABLE_2 < FUNCTION_CALL_6 EMPTY_LIST VARIABLE_4
predict: if EMPTY_LIST VARIABLE_3 index VARIABLE_1 = EMPTY_LIST VARIABLE_4 index VARIABLE_2 = VARIABLE_0 VARIABLE_3 index VARIABLE_1 += VARIABLE_1 FUNCTION_CALL_7 <
predict: else VARIABLE_3 = EMPTY_LIST VARIABLE_0 VARIABLE_4 index VARIABLE_2 += VARIABLE_2
predict: index if VARIABLE_0 FUNCTION_CALL_8 EMPTY_LIST return VARIABLE_3 VARIABLE_0 > return NUMBER VARIABLE_3 in FUNCTION_CALL_4 EMPTY_LIST return VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 EMPTY_LIST index
predict: index if VARIABLE_0 FUNCTION_CALL_8 EMPTY_LIST index VARIABLE_4 VARIABLE_0 > return NUMBER VARIABLE_3 in FUNCTION_CALL_4 EMPTY_LIST VARIABLE_0 FUNCTION_CALL_8 VARIABLE_2 = EMPTY_LIST index
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 > NUMBER += VARIABLE_1 = VARIABLE_0 *= NUMBER VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 FUNCTION_CALL_11
predict: return for VARIABLE_3 in VARIABLE_3 * for VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 . FUNCTION_CALL_4
predict: return . VARIABLE_2
Edit distance = 267
predict: return NUMBER VARIABLE_0 = NUMBER or VARIABLE_0 == NUMBER
predict: else VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER
predict: if VARIABLE_0 index VARIABLE_2 > VARIABLE_0 index VARIABLE_2 + NUMBER FUNCTION_CALL_4
predict: FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2 + NUMBER VARIABLE_0
predict: return VARIABLE_0
predict: return in VARIABLE_0 * NUMBER
predict: index * NUMBER
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_1 = NUMBER
predict: for FUNCTION_CALL_4 index VARIABLE_1 = VARIABLE_2 in VARIABLE_0
predict: return VARIABLE_1
predict: VARIABLE_1 = EMPTY_LIST
predict: = NUMBER
predict: for VARIABLE_2 = NUMBER VARIABLE_2 VARIABLE_0 FUNCTION_CALL_4 ++ VARIABLE_1 += VARIABLE_0 index VARIABLE_2
predict: return VARIABLE_1
predict: index for and VARIABLE_0 return NUMBER VARIABLE_3 return NUMBER VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_0 NUMBER == NUMBER VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 NUMBER == NUMBER
predict: if VARIABLE_1
predict: VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_1 FUNCTION_CALL_6 STRING_CONST
predict: else if VARIABLE_2 FUNCTION_CALL_6 STRING_CONST
predict: else FUNCTION_CALL_6 VARIABLE_0
predict: VARIABLE_1 = FUNCTION_CALL_5 FUNCTION_CALL_6 VARIABLE_2
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < VARIABLE_0 . FUNCTION_CALL_6 VARIABLE_3 ++
predict: if VARIABLE_0 index VARIABLE_3 > VARIABLE_1
predict: return false
predict: return true
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 . VARIABLE_2
predict: return VARIABLE_2
predict: / NUMBER return VARIABLE_0 * VARIABLE_0 + NUMBER
predict: VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 index VARIABLE_5 = NUMBER
predict: VARIABLE_2 = NUMBER
predict: while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5
predict: index index VARIABLE_2 return VARIABLE_2 VARIABLE_4 = VARIABLE_3 index VARIABLE_2 + VARIABLE_3 VARIABLE_1
predict: return NUMBER NUMBER VARIABLE_0 < VARIABLE_1 *
predict: while VARIABLE_0 > FUNCTION_CALL_4 VARIABLE_1 = EMPTY_LIST FUNCTION_CALL_3 VARIABLE_1
predict: if and FUNCTION_CALL_4 VARIABLE_1 NUMBER VARIABLE_0 =
predict: VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_5 VARIABLE_1
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 for index and VARIABLE_0 index VARIABLE_2 index return VARIABLE_2 VARIABLE_4 = VARIABLE_3 VARIABLE_2 + VARIABLE_3 index VARIABLE_1
predict: return VARIABLE_2
predict: VARIABLE_2 = NUMBER
predict: return VARIABLE_3 for index and VARIABLE_0 VARIABLE_2 ++ VARIABLE_1 VARIABLE_3 in < FUNCTION_CALL_3
predict: return VARIABLE_2
Edit distance = 105
predict: VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_1 -= VARIABLE_0 index VARIABLE_1 in VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_0 index VARIABLE_2 - NUMBER *
predict: if VARIABLE_0 = NUMBER
predict: return else NUMBER VARIABLE_0 . * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 = NUMBER -= VARIABLE_1 VARIABLE_0 index VARIABLE_2 return VARIABLE_1
predict: VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 = FUNCTION_CALL_5 for VARIABLE_2 in FUNCTION_CALL_4 NUMBER
predict: return VARIABLE_0
predict: VARIABLE_0 = NUMBER
predict: in for for VARIABLE_1 index return VARIABLE_2 VARIABLE_4 = index index VARIABLE_2 while for VARIABLE_1 index >= NUMBER VARIABLE_1 VARIABLE_0 * VARIABLE_1 VARIABLE_0 = NUMBER
predict: return VARIABLE_0
predict: return VARIABLE_0 FUNCTION_CALL_2 / NUMBER FUNCTION_CALL_4 < <= VARIABLE_1 VARIABLE_1 = NUMBER for VARIABLE_1 in
predict: if for VARIABLE_1 in VARIABLE_0 - NUMBER - VARIABLE_1 FUNCTION_CALL_4 VARIABLE_0 VARIABLE_0
predict: return false
predict: return true
predict: if FUNCTION_CALL_6 VARIABLE_4 or NUMBER
predict: return VARIABLE_4
predict: index VARIABLE_4 else return / in FUNCTION_CALL_4 NUMBER VARIABLE_0 FUNCTION_CALL_10 FUNCTION_CALL_10 / FUNCTION_CALL_11 FUNCTION_CALL_7 FUNCTION_CALL_6 NUMBER
predict: return VARIABLE_3
predict: return VARIABLE_2 VARIABLE_4 = index NUMBER = = VARIABLE_2
predict: return VARIABLE_0 for in VARIABLE_4 in VARIABLE_2 += index VARIABLE_3 = VARIABLE_1 VARIABLE_4 in
predict: VARIABLE_3 = VARIABLE_2
predict: for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 ++ FUNCTION_CALL_2 VARIABLE_0 STRING_CONST VARIABLE_1
predict: if VARIABLE_0 = NUMBER
predict: return NUMBER else
predict: return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER
predict: VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 in FUNCTION_CALL_4 VARIABLE_0 index VARIABLE_3 = VARIABLE_1 index VARIABLE_1 =
predict: return VARIABLE_0
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 VARIABLE_0 == NUMBER VARIABLE_1 = NUMBER
predict: return VARIABLE_0 * VARIABLE_1 < NUMBER + VARIABLE_1 NUMBER VARIABLE_2 + * VARIABLE_1 <
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_1 += VARIABLE_2
predict: return VARIABLE_1
predict: return NUMBER index for VARIABLE_1 in VARIABLE_0 * VARIABLE_0 in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_11 * VARIABLE_2
predict: return VARIABLE_1
predict: VARIABLE_1 in VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 in VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 VARIABLE_1 index > > > = =
predict: return VARIABLE_0
Edit distance = 195
predict: VARIABLE_2 = NUMBER
predict: for VARIABLE_3 in VARIABLE_0 += VARIABLE_4 VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_4
predict: if VARIABLE_2 < NUMBER or VARIABLE_2 = NUMBER
predict: return NUMBER
predict: VARIABLE_0 = VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_2 == NUMBER
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 += VARIABLE_1 index VARIABLE_3
predict: return VARIABLE_2
predict: VARIABLE_1
predict: = FUNCTION_CALL_6 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_7 VARIABLE_3
predict: for VARIABLE_4 FUNCTION_CALL_7 NUMBER VARIABLE_3 - VARIABLE_2 - NUMBER
predict: if VARIABLE_0 index VARIABLE_4 > VARIABLE_0 index VARIABLE_4 + NUMBER VARIABLE_0 index FUNCTION_CALL_8 VARIABLE_2 VARIABLE_4 VARIABLE_0 VARIABLE_1 for VARIABLE_1 index for VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ++
predict: for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 ++
predict: if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER
predict: else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER
predict: return VARIABLE_0 + FUNCTION_CALL_2 VARIABLE_0 - NUMBER VARIABLE_0 > NUMBER
predict: else NUMBER
predict: VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0
predict: for VARIABLE_2 in FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER
predict: if index VARIABLE_2 in VARIABLE_0 != VARIABLE_0 index index VARIABLE_1 - NUMBER - VARIABLE_2 VARIABLE_0
predict: return false
predict: return true
predict: = VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 * VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0
predict: = NUMBER
predict: while VARIABLE_3 index VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1
predict: if FUNCTION_CALL_4 VARIABLE_0 < NUMBER
predict: return true
predict: return VARIABLE_2 VARIABLE_4 = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_5 VARIABLE_0 FUNCTION_CALL_9 VARIABLE_1
predict: if VARIABLE_2 = VARIABLE_1
predict: return VARIABLE_0 .
predict: else return false
predict: for VARIABLE_2 in VARIABLE_0 VARIABLE_2 VARIABLE_1
predict: return VARIABLE_1
predict: FUNCTION_CALL_1 = VARIABLE_3
predict: = . = EMPTY_LIST
predict: for VARIABLE_2 in VARIABLE_0
predict: if VARIABLE_2 > VARIABLE_1
predict: FUNCTION_CALL_5 VARIABLE_2 . index VARIABLE_3
predict: return VARIABLE_3
predict: for VARIABLE_0 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1
predict: return VARIABLE_2
predict: for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 ++ index VARIABLE_3 index
predict: return VARIABLE_2
Edit distance = 68
predict: VARIABLE_0 = NUMBER
predict: for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 += VARIABLE_1
predict: return VARIABLE_0
predict: for VARIABLE_0 in FUNCTION_CALL_5 NUMBER
predict: NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: = NUMBER VARIABLE_0
predict: for VARIABLE_1 FUNCTION_CALL_5 NUMBER
predict: VARIABLE_2 += VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_0
predict: VARIABLE_3 = VARIABLE_0 VARIABLE_1 = NUMBER VARIABLE_2 = VARIABLE_1 * NUMBER * VARIABLE_3 = =
predict: VARIABLE_0 = VARIABLE_1 * NUMBER VARIABLE_2 = VARIABLE_0 * NUMBER return VARIABLE_2
predict: VARIABLE_0 = NUMBER
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1
predict: return VARIABLE_0
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: VARIABLE_1 = VARIABLE_0 index VARIABLE_2
predict: VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3
predict: VARIABLE_0 index VARIABLE_3 = VARIABLE_1
predict: return VARIABLE_0
predict: in FUNCTION_CALL_4 NUMBER == NUMBER for VARIABLE_0 VARIABLE_1 for
predict: if VARIABLE_0 FUNCTION_CALL_3 NUMBER
predict: = NUMBER
predict: FUNCTION_CALL_4 STRING_CONST
predict: if and FUNCTION_CALL_4 and FUNCTION_CALL_4 NUMBER STRING_CONST FUNCTION_CALL_3 FUNCTION_CALL_11 if
predict: FUNCTION_CALL_1 VARIABLE_2
predict: = EMPTY_LIST
predict: for VARIABLE_3 in VARIABLE_0 FUNCTION_CALL_5 VARIABLE_3 * VARIABLE_1 . return NUMBER VARIABLE_2
predict: return VARIABLE_2
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: VARIABLE_0 = VARIABLE_0 * NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 = NUMBER VARIABLE_0 NUMBER VARIABLE_0 ++
predict: if VARIABLE_0 % NUMBER == NUMBER
predict: VARIABLE_0 % NUMBER == NUMBER
predict: FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % NUMBER == NUMBER
predict: FUNCTION_CALL_2 STRING_CONST
predict: else if VARIABLE_0 % NUMBER == NUMBER
predict: FUNCTION_CALL_2 STRING_CONST
predict: else FUNCTION_CALL_2 VARIABLE_0
predict: = VARIABLE_2 = NUMBER
predict: index for for VARIABLE_1 in VARIABLE_0 VARIABLE_1 = VARIABLE_2 +
predict: return VARIABLE_2
Edit distance = 57
predict: VARIABLE_0 += VARIABLE_0 * VARIABLE_1 / NUMBER
predict: VARIABLE_0 += VARIABLE_0 * NUMBER / NUMBER
predict: return VARIABLE_0
predict: for VARIABLE_0 in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0
predict: VARIABLE_1 = true
predict: for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 ++
predict: if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3
predict: VARIABLE_1 = false VARIABLE_2
predict: return VARIABLE_1
predict: = VARIABLE_1 = NUMBER
predict: while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2
predict: if VARIABLE_5 VARIABLE_0 VARIABLE_1
predict: = VARIABLE_1 = VARIABLE_0
predict: return VARIABLE_1
predict: if FUNCTION_CALL_10 VARIABLE_0 == NUMBER or VARIABLE_0 == NUMBER
predict: while VARIABLE_7 + VARIABLE_8 < FUNCTION_CALL_10 VARIABLE_0
predict: VARIABLE_2 = VARIABLE_0 index VARIABLE_7
predict: VARIABLE_3 = VARIABLE_5 index VARIABLE_8
predict: if VARIABLE_2 for VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 VARIABLE_2
predict: else += VARIABLE_7 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 VARIABLE_3 ++ VARIABLE_8 =
predict: return VARIABLE_6
predict: for VARIABLE_2 = NUMBER VARIABLE_0 . FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 -
predict: return VARIABLE_0
predict: VARIABLE_1 = NUMBER
predict: return VARIABLE_2 VARIABLE_4 = for index VARIABLE_2 return NUMBER index VARIABLE_2 return index VARIABLE_1 = return VARIABLE_2 VARIABLE_4 = index VARIABLE_1 + VARIABLE_3 VARIABLE_0 VARIABLE_2
predict: return VARIABLE_1
predict: return VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER
predict: VARIABLE_0 = NUMBER FUNCTION_CALL_3 VARIABLE_1 FUNCTION_CALL_4 FUNCTION_CALL_3 VARIABLE_1 return VARIABLE_0
predict: for VARIABLE_1 = NUMBER VARIABLE_0 . FUNCTION_CALL_3 - NUMBER / NUMBER
predict: if VARIABLE_0 index VARIABLE_1 index != VARIABLE_0 VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1
predict: return false
predict: return true
predict: = VARIABLE_3 = VARIABLE_2 = NUMBER VARIABLE_4 FUNCTION_CALL_6 return true
predict: while VARIABLE_2 < VARIABLE_4
predict: return if index index VARIABLE_2 != return index index VARIABLE_4 VARIABLE_4 VARIABLE_1 = index false index VARIABLE_4 if VARIABLE_5 > VARIABLE_3 VARIABLE_1 . FUNCTION_CALL_8 VARIABLE_5 else += index VARIABLE_2 return NUMBER index VARIABLE_3 VARIABLE_1 VARIABLE_4 NUMBER VARIABLE_4
predict: for VARIABLE_3 in VARIABLE_0
predict: if VARIABLE_3 > VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
predict: return VARIABLE_1
predict: VARIABLE_0 = VARIABLE_1 VARIABLE_2
predict: if VARIABLE_2 = VARIABLE_0
predict: return true
predict: if VARIABLE_2 != VARIABLE_0
predict: return false
predict: VARIABLE_1 = NUMBER
predict: for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER VARIABLE_1 ++ VARIABLE_0 index VARIABLE_2
predict: return VARIABLE_1
Edit distance = 109
