omega 4.0
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 - NUMBER VARIABLE_0
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 = EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 702omega 3.1
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 698omega 3.2
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 698omega 3.4
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 = VARIABLE_0 * VARIABLE_1
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 699omega 3.7
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 697omega 3.6
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 697omega 3.8
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 - NUMBER VARIABLE_0
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 = EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 702omega 3.9
predict: while index VARIABLE_2 and sublist VARIABLE_1 index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 VARIABLE_1 while VARIABLE_2 = index VARIABLE_2 ( NUMBER FUNCTION_CALL_4 and VARIABLE_3 EMPTY_LIST index VARIABLE_2 while and VARIABLE_3 . EMPTY_LIST VARIABLE_1 FUNCTION_CALL_8 VARIABLE_3 VARIABLE_1 FUNCTION_CALL_5 EMPTY_LIST VARIABLE_1 = VARIABLE_0 EMPTY_LIST VARIABLE_1 index VARIABLE_1 FUNCTION_CALL_6 VARIABLE_4 == ( VARIABLE_0 NUMBER VARIABLE_1 VARIABLE_2 != VARIABLE_0 . EMPTY_LIST VARIABLE_2 VARIABLE_1 = NUMBER ( and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_2 FUNCTION_CALL_5 VARIABLE_3 EMPTY_LIST VARIABLE_2 VARIABLE_7 FUNCTION_CALL_6 VARIABLE_4 == ( FUNCTION_CALL_5 VARIABLE_3 VARIABLE_1 VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_2 if FUNCTION_CALL_4
predict: if VARIABLE_7 VARIABLE_1 FUNCTION_CALL_5 return index VARIABLE_2 sublist NUMBER return index VARIABLE_2 return if sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_7 FUNCTION_CALL_8 = VARIABLE_1 return FUNCTION_CALL_6 and VARIABLE_2 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 + = VARIABLE_2 + NUMBER VARIABLE_7 / VARIABLE_2 VARIABLE_1 / NUMBER VARIABLE_2 = NUMBER VARIABLE_0 VARIABLE_2
predict: if VARIABLE_7 VARIABLE_1 NUMBER FUNCTION_CALL_3 return VARIABLE_1 sublist VARIABLE_1 and VARIABLE_3 VARIABLE_3 < VARIABLE_6 = NUMBER NUMBER ( VARIABLE_6 - VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_6 VARIABLE_0 index VARIABLE_3 VARIABLE_1 . VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 ( - VARIABLE_6 VARIABLE_0 index VARIABLE_1 index VARIABLE_4 == NUMBER VARIABLE_3 . . FUNCTION_CALL_10 FUNCTION_CALL_5 ( / NUMBER = VARIABLE_1 FUNCTION_CALL_3 VARIABLE_0 index VARIABLE_0 ( return VARIABLE_1
predict: VARIABLE_1 EMPTY_LIST return VARIABLE_0 return FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_7 + NUMBER FUNCTION_CALL_7 index VARIABLE_3 VARIABLE_3 = index VARIABLE_4 VARIABLE_4 and index VARIABLE_5 VARIABLE_7 == sublist NUMBER while index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_2 or index VARIABLE_5 index VARIABLE_4 <= VARIABLE_5 > FUNCTION_CALL_7 index VARIABLE_3 if index VARIABLE_4 VARIABLE_4 and VARIABLE_6 = FUNCTION_CALL_2 FUNCTION_CALL_7 return index VARIABLE_2 VARIABLE_1 return index VARIABLE_4 VARIABLE_4 index VARIABLE_5 VARIABLE_7 == index VARIABLE_3 index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 NUMBER else return if index VARIABLE_5 VARIABLE_7 == NUMBER FUNCTION_CALL_7 index VARIABLE_3 sublist VARIABLE_1 FUNCTION_CALL_4 ) index VARIABLE_4 VARIABLE_4 index VARIABLE_5 FUNCTION_CALL_5 and VARIABLE_3 = index VARIABLE_2 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 index VARIABLE_4 VARIABLE_4 NUMBER else return if index VARIABLE_2 index VARIABLE_4 VARIABLE_4 index VARIABLE_4 <= VARIABLE_5 > index VARIABLE_3 index VARIABLE_5 sublist VARIABLE_1 FUNCTION_CALL_4 while in NUMBER index VARIABLE_5 FUNCTION_CALL_4 index VARIABLE_5 index VARIABLE_3 VARIABLE_7 == NUMBER FUNCTION_CALL_5 index VARIABLE_5 index VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 else VARIABLE_1 index NUMBER VARIABLE_4 VARIABLE_4 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_4 = and FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 +
predict: if VARIABLE_7 FUNCTION_CALL_10 sublist VARIABLE_1 and VARIABLE_4 > sublist NUMBER . index VARIABLE_7 = NUMBER + ( index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 while VARIABLE_2 . index index VARIABLE_7 VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_3 NUMBER == index VARIABLE_7 VARIABLE_1 index index VARIABLE_8 FUNCTION_CALL_10 while VARIABLE_5 < . . index NUMBER VARIABLE_7 + NUMBER + ( and index VARIABLE_6 return VARIABLE_2 index VARIABLE_7 return VARIABLE_1 else NUMBER index VARIABLE_5 VARIABLE_7 + ( VARIABLE_5 return index VARIABLE_3 VARIABLE_9 index VARIABLE_7 return VARIABLE_1 = ( index VARIABLE_6 VARIABLE_2 VARIABLE_5 < return index VARIABLE_3 if ( index VARIABLE_2 FUNCTION_CALL_10 VARIABLE_5 > index VARIABLE_6 VARIABLE_3 and VARIABLE_2 FUNCTION_CALL_10 while VARIABLE_5 < = NUMBER index VARIABLE_7 NUMBER == index VARIABLE_6 FUNCTION_CALL_2 VARIABLE_5 = NUMBER ( VARIABLE_2 . FUNCTION_CALL_11 ( VARIABLE_0 NUMBER VARIABLE_3 and VARIABLE_2 < FUNCTION_CALL_6 . FUNCTION_CALL_11 ( return = VARIABLE_4 sublist VARIABLE_1 index VARIABLE_0 index VARIABLE_2 = VARIABLE_0 NUMBER VARIABLE_1 = VARIABLE_3 FUNCTION_CALL_10 VARIABLE_0 =
predict: sublist VARIABLE_1 FUNCTION_CALL_7 FUNCTION_CALL_8 FUNCTION_CALL_4 index VARIABLE_2 if index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 VARIABLE_7 == sublist NUMBER return VARIABLE_1 sublist VARIABLE_1 else return return VARIABLE_0 VARIABLE_7 == NUMBER FUNCTION_CALL_5 VARIABLE_3 ) index FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_2 / sublist NUMBER FUNCTION_CALL_5 return VARIABLE_4 VARIABLE_0 index FUNCTION_CALL_6 sublist VARIABLE_1 VARIABLE_0 FUNCTION_CALL_4 FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_7 + sublist NUMBER FUNCTION_CALL_4 index VARIABLE_2 in if VARIABLE_0
predict: for VARIABLE_2 = FUNCTION_CALL_5 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_1 return VARIABLE_0 NUMBER
predict: for VARIABLE_2 FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1 - NUMBER VARIABLE_0
predict: index VARIABLE_4 VARIABLE_4 for in sublist VARIABLE_1 ( * return VARIABLE_0 ( VARIABLE_1 FUNCTION_CALL_4 index VARIABLE_6 VARIABLE_2 FUNCTION_CALL_9 VARIABLE_2 = VARIABLE_5
predict: VARIABLE_2 = NUMBER FUNCTION_CALL_6 VARIABLE_0 VARIABLE_2 = VARIABLE_0 * VARIABLE_1 return VARIABLE_2 VARIABLE_3 VARIABLE_3 = EMPTY_LIST
predict: VARIABLE_2 VARIABLE_0 for VARIABLE_4 > VARIABLE_3 + = NUMBER return VARIABLE_0 VARIABLE_4 if
predict: return VARIABLE_4 VARIABLE_1 = NUMBER ( return VARIABLE_0 ( VARIABLE_1 VARIABLE_0 index + = VARIABLE_4 = VARIABLE_2 if VARIABLE_5 VARIABLE_5 > == VARIABLE_4 ( VARIABLE_1 VARIABLE_3 NUMBER EMPTY_LIST for = VARIABLE_0
predict: return index VARIABLE_3 VARIABLE_3 VARIABLE_2 VARIABLE_1 index VARIABLE_4 FUNCTION_CALL_6 VARIABLE_4 VARIABLE_2 index VARIABLE_4 > if VARIABLE_7 EMPTY_LIST in for VARIABLE_4 VARIABLE_3 index EMPTY_LIST
predict: VARIABLE_2 = EMPTY_LIST for VARIABLE_3 = NUMBER FUNCTION_CALL_6 VARIABLE_0 if VARIABLE_3 > VARIABLE_1 return VARIABLE_2 VARIABLE_0 VARIABLE_3 >= FUNCTION_CALL_7 VARIABLE_0
Edit distance = 702