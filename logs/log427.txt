omega 0.5
predict: whilewhile index VARIABLE_2 - VARIABLE_1 FUNCTION_CALL_4
predict: ifif return VARIABLE_2 VARIABLE_4 if index VARIABLE_2 FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 FUNCTION_CALL_8 = VARIABLE_2 VARIABLE_1 and VARIABLE_3 VARIABLE_0 VARIABLE_2 VARIABLE_1 return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_6 for index return VARIABLE_2 VARIABLE_4 VARIABLE_3 != VARIABLE_1 if VARIABLE_2 VARIABLE_2 return VARIABLE_2 VARIABLE_4 for and VARIABLE_3 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 VARIABLE_2 FUNCTION_CALL_6 ) FUNCTION_CALL_5 VARIABLE_1 < FUNCTION_CALL_5
predict: whilewhile - VARIABLE_1 =
predict: whilewhile return VARIABLE_2 VARIABLE_4 - index VARIABLE_2 VARIABLE_2 index VARIABLE_3 FUNCTION_CALL_4 for FUNCTION_CALL_9 index FUNCTION_CALL_9 ) FUNCTION_CALL_4 VARIABLE_1 . - VARIABLE_1
predict: ifif if FUNCTION_CALL_5 VARIABLE_2 == NUMBER
predict: returnreturn return index VARIABLE_2 VARIABLE_1 + if FUNCTION_CALL_1 return VARIABLE_0 index VARIABLE_1 FUNCTION_CALL_6 and VARIABLE_3 VARIABLE_0 FUNCTION_CALL_6 VARIABLE_5 index VARIABLE_2 + = / NUMBER + NUMBER VARIABLE_5 index VARIABLE_2 index VARIABLE_1 FUNCTION_CALL_1 / VARIABLE_5 index VARIABLE_2 + NUMBER VARIABLE_2
predict: returnreturn FUNCTION_CALL_7 return VARIABLE_0 VARIABLE_1
predict: ifif return VARIABLE_2 VARIABLE_4 if FUNCTION_CALL_3 return VARIABLE_2 VARIABLE_4 index VARIABLE_1 index VARIABLE_3 VARIABLE_2 < NUMBER )
predict: returnreturn return return VARIABLE_2 VARIABLE_4 index VARIABLE_1 for for - NUMBER VARIABLE_1 FUNCTION_CALL_3 index VARIABLE_1 in return VARIABLE_0 VARIABLE_1 return VARIABLE_2 VARIABLE_4 return VARIABLE_2 VARIABLE_4 NUMBER / return VARIABLE_2 VARIABLE_4 FUNCTION_CALL_5 for - NUMBER VARIABLE_0 VARIABLE_1 index return NUMBER > NUMBER / FUNCTION_CALL_5 FUNCTION_CALL_5 for / NUMBER VARIABLE_1 FUNCTION_CALL_3 VARIABLE_1 VARIABLE_0
predict: index VARIABLE_1 FUNCTION_CALL_1 NUMBER VARIABLE_5 VARIABLE_4 = NUMBER VARIABLE_3 FUNCTION_CALL_7 VARIABLE_2 + FUNCTION_CALL_7 VARIABLE_0 index
predict: whilewhile - VARIABLE_4 < FUNCTION_CALL_7 VARIABLE_5 < FUNCTION_CALL_7 VARIABLE_3 or VARIABLE_2
predict: ifif index VARIABLE_4 if index VARIABLE_3 VARIABLE_0 = index FUNCTION_CALL_7 index index VARIABLE_2 index index VARIABLE_1 index index VARIABLE_4 VARIABLE_0 + VARIABLE_5 = VARIABLE_3 VARIABLE_5 NUMBER VARIABLE_5
predict: elseelse return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index VARIABLE_5 VARIABLE_4 + ( FUNCTION_CALL_4 VARIABLE_1 VARIABLE_3 FUNCTION_CALL_7 VARIABLE_5 = if
predict: elseelse return NUMBER index VARIABLE_4 + VARIABLE_2 VARIABLE_4 = index VARIABLE_3 index index VARIABLE_5 VARIABLE_4 + VARIABLE_1 + + VARIABLE_1 VARIABLE_5 VARIABLE_3 < VARIABLE_4 VARIABLE_2
predict: elseelse if VARIABLE_1 + VARIABLE_1 + - NUMBER index VARIABLE_5 index VARIABLE_5 VARIABLE_5 = FUNCTION_CALL_5 VARIABLE_5 VARIABLE_4 + FUNCTION_CALL_4 VARIABLE_1
