VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = VARIABLE_0 + VARIABLE_1 * NUMBER return VARIABLE_0 + VARIABLE_1 + VARIABLE_2 
return VARIABLE_0 * NUMBER * NUMBER 
VARIABLE_0 = VARIABLE_1 * NUMBER return VARIABLE_0 * NUMBER 
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0 
VARIABLE_0 * NUMBER * NUMBER 
VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1 return VARIABLE_2 
VARIABLE_0 += VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 += VARIABLE_0 * NUMBER / NUMBER return VARIABLE_0 
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0 
VARIABLE_2 VARIABLE_2 * NUMBER VARIABLE_0 * VARIABLE_0 NUMBER VARIABLE_1 return VARIABLE_1 
VARIABLE_0 = NUMBER while VARIABLE_1 != [] if FUNCTION_CALL_4 VARIABLE_1 > VARIABLE_0 VARIABLE_0 = FUNCTION_CALL_4 VARIABLE_1 FUNCTION_CALL_4 VARIABLE_1 
VARIABLE_1 = NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 == FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 = VARIABLE_0 return VARIABLE_1 
VARIABLE_1 = NUMBER for VARIABLE_2 in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2 return VARIABLE_1 
VARIABLE_2 = NUMBER for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3 return VARIABLE_2 
VARIABLE_1 = NUMBER for VARIABLE_2 in FUNCTION_CALL_4 NUMBER NUMBER += VARIABLE_1 index VARIABLE_2 VARIABLE_0 in return VARIABLE_1 
for VARIABLE_2 in VARIABLE_0 VARIABLE_2 VARIABLE_1 += VARIABLE_1 return 
VARIABLE_1 = NUMBER for VARIABLE_2 VARIABLE_0 VARIABLE_1 in = VARIABLE_1 + VARIABLE_2 return VARIABLE_1 
return FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1 
VARIABLE_2 = NUMBER for VARIABLE_1 in VARIABLE_0 += ( VARIABLE_2 VARIABLE_1 ) return VARIABLE_2 
for VARIABLE_2 in VARIABLE_0 = VARIABLE_1 VARIABLE_1 + VARIABLE_2 VARIABLE_1 return 
VARIABLE_0 = NUMBER for VARIABLE_2 in VARIABLE_1 VARIABLE_0 += NUMBER in for return VARIABLE_0 
VARIABLE_2 = NUMBER for VARIABLE_3 in VARIABLE_0 += VARIABLE_2 VARIABLE_2 index VARIABLE_3 VARIABLE_1 in return 
VARIABLE_0 = NUMBER 
= VARIABLE_2 = NUMBER for VARIABLE_4 in = = VARIABLE_0 VARIABLE_1 in index VARIABLE_4 VARIABLE_3 + VARIABLE_2 VARIABLE_3 VARIABLE_2 in 
VARIABLE_2 = NUMBER for VARIABLE_3 in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3 return VARIABLE_2 
VARIABLE_2 = NUMBER for VARIABLE_3 in VARIABLE_0 + VARIABLE_1 VARIABLE_3 VARIABLE_2 return VARIABLE_2 
for VARIABLE_3 in VARIABLE_0 = VARIABLE_2 VARIABLE_1 . FUNCTION_CALL_5 ( VARIABLE_3 ) return VARIABLE_2 
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = index VARIABLE_0 VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3 
for VARIABLE_0 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0 and 
for VARIABLE_0 = NUMBER VARIABLE_0 NUMBER += 1 VARIABLE_0 ( FUNCTION_CALL_2 VARIABLE_0 STRING_CONST ) < 
if VARIABLE_0 = NUMBER VARIABLE_0 <= NUMBER VARIABLE_0 += NUMBER if VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER VARIABLE_0 FUNCTION_CALL_2 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER = STRING_CONST NUMBER FUNCTION_CALL_3 if VARIABLE_0 FUNCTION_CALL_2 NUMBER = NUMBER STRING_CONST FUNCTION_CALL_3 STRING_CONST 
for VARIABLE_0 = NUMBER VARIABLE_0 NUMBER += 1 VARIABLE_0 < if VARIABLE_0 % NUMBER VARIABLE_0 STRING_CONST % FUNCTION_CALL_2 NUMBER == NUMBER == NUMBER else if VARIABLE_0 % NUMBER == NUMBER STRING_CONST FUNCTION_CALL_2 else if VARIABLE_0 = % NUMBER  NUMBER STRING_CONST FUNCTION_CALL_2 else FUNCTION_CALL_2 VARIABLE_0 ) 
for VARIABLE_0 = if VARIABLE_0 FUNCTION_CALL_3 NUMBER = NUMBER NUMBER NUMBER VARIABLE_0 FUNCTION_CALL_3 NUMBER = NUMBER FUNCTION_CALL_4 ( STRING_CONST ) else if VARIABLE_0 FUNCTION_CALL_3 NUMBER = NUMBER FUNCTION_CALL_4 ( STRING_CONST ) else if VARIABLE_0 FUNCTION_CALL_3 NUMBER = NUMBER FUNCTION_CALL_4 ( STRING_CONST ) else FUNCTION_CALL_4 ( VARIABLE_0 ) 
for VARIABLE_0 in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5 VARIABLE_0 VARIABLE_1 == NUMBER return false return true 
if VARIABLE_0 = return NUMBER false else if VARIABLE_0 = NUMBER return true for VARIABLE_1 else = NUMBER FUNCTION_CALL_3 VARIABLE_0 += 1 VARIABLE_1 if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 = NUMBER return false return true 
VARIABLE_0 = true for VARIABLE_1 = NUMBER VARIABLE_1 / VARIABLE_2 < NUMBER VARIABLE_1 ( VARIABLE_0 = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 NUMBER ) != return VARIABLE_0 
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 = NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER return true 
VARIABLE_0 = NUMBER for VARIABLE_1 = NUMBER VARIABLE_2 VARIABLE_0 VARIABLE_0 * VARIABLE_1 return VARIABLE_0 
VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 VARIABLE_1 return VARIABLE_3 
VARIABLE_0 NUMBER = for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 * VARIABLE_0 return VARIABLE_0 
if VARIABLE_0 == NUMBER NUMBER return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER 
VARIABLE_0 = NUMBER for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 VARIABLE_0 * VARIABLE_1 = return VARIABLE_0 
if VARIABLE_0 = NUMBER return NUMBER else FUNCTION_CALL_2 VARIABLE_0 - NUMBER * VARIABLE_0 return 
VARIABLE_0 = NUMBER for VARIABLE_1 = VARIABLE_2 while VARIABLE_1 > NUMBER VARIABLE_1  -= NUMBER VARIABLE_0 = * VARIABLE_0 VARIABLE_1 return VARIABLE_0 
if VARIABLE_0 = NUMBER return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER 
return VARIABLE_0 * VARIABLE_0 + NUMBER / NUMBER 
VARIABLE_0 = NUMBER = FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 for VARIABLE_1 in += VARIABLE_1 return VARIABLE_0 
VARIABLE_0 = NUMBER for VARIABLE_1 in FUNCTION_CALL_4 NUMBER VARIABLE_2 += VARIABLE_0 VARIABLE_1 return VARIABLE_0 
= VARIABLE_0 = NUMBER for VARIABLE_1 NUMBER VARIABLE_2 VARIABLE_0 VARIABLE_1 + = and VARIABLE_0 in VARIABLE_0 return 
VARIABLE_0 = NUMBER while VARIABLE_1 > NUMBER VARIABLE_1 += VARIABLE_0 - NUMBER VARIABLE_1 return VARIABLE_0 
