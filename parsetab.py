
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIVIDE END_STMT FLOAT ID INT MINUS MULTIPLY NEWLINE PLUS RETURN RETURN\n    statements : statements statement\n    statements :\n    \n    statement : expression END_STMT\n    \n    statement : ID ASSIGN expression END_STMT\n    \n    statement : RETURN expression END_STMT\n    \n    expression  : expression MULTIPLY expression\n                | expression DIVIDE expression\n                | expression PLUS expression\n                | expression MINUS expression\n    \n    expression : value\n    \n    value  : INT\n           | FLOAT\n           | ID\n    '
    
_lr_action_items = {'ID':([0,1,2,5,9,10,11,12,13,14,22,23,],[-2,4,-1,16,-3,16,16,16,16,16,-5,-4,]),'RETURN':([0,1,2,9,22,23,],[-2,5,-1,-3,-5,-4,]),'INT':([0,1,2,5,9,10,11,12,13,14,22,23,],[-2,7,-1,7,-3,7,7,7,7,7,-5,-4,]),'FLOAT':([0,1,2,5,9,10,11,12,13,14,22,23,],[-2,8,-1,8,-3,8,8,8,8,8,-5,-4,]),'$end':([0,1,2,9,22,23,],[-2,0,-1,-3,-5,-4,]),'END_STMT':([3,4,6,7,8,15,16,17,18,19,20,21,],[9,-13,-10,-11,-12,22,-13,-6,-7,-8,-9,23,]),'MULTIPLY':([3,4,6,7,8,15,16,17,18,19,20,21,],[10,-13,-10,-11,-12,10,-13,10,10,10,10,10,]),'DIVIDE':([3,4,6,7,8,15,16,17,18,19,20,21,],[11,-13,-10,-11,-12,11,-13,11,11,11,11,11,]),'PLUS':([3,4,6,7,8,15,16,17,18,19,20,21,],[12,-13,-10,-11,-12,12,-13,12,12,12,12,12,]),'MINUS':([3,4,6,7,8,15,16,17,18,19,20,21,],[13,-13,-10,-11,-12,13,-13,13,13,13,13,13,]),'ASSIGN':([4,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([1,],[2,]),'expression':([1,5,10,11,12,13,14,],[3,15,17,18,19,20,21,]),'value':([1,5,10,11,12,13,14,],[6,6,6,6,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_file','pseudocodeLanguagev1.py',77),
  ('statements -> <empty>','statements',0,'p_file2','pseudocodeLanguagev1.py',82),
  ('statement -> expression END_STMT','statement',2,'p_statement1','pseudocodeLanguagev1.py',87),
  ('statement -> ID ASSIGN expression END_STMT','statement',4,'p_statement2','pseudocodeLanguagev1.py',93),
  ('statement -> RETURN expression END_STMT','statement',3,'p_statement3','pseudocodeLanguagev1.py',99),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','pseudocodeLanguagev1.py',105),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','pseudocodeLanguagev1.py',106),
  ('expression -> expression PLUS expression','expression',3,'p_expression','pseudocodeLanguagev1.py',107),
  ('expression -> expression MINUS expression','expression',3,'p_expression','pseudocodeLanguagev1.py',108),
  ('expression -> value','expression',1,'p_expression_value','pseudocodeLanguagev1.py',115),
  ('value -> INT','value',1,'p_number','pseudocodeLanguagev1.py',121),
  ('value -> FLOAT','value',1,'p_number','pseudocodeLanguagev1.py',122),
  ('value -> ID','value',1,'p_number','pseudocodeLanguagev1.py',123),
]
