Default = -inf
********** f = times NUMBER and then return VARIABLE_0 plus VARIABLE_1 plus
* NUMBER return VARIABLE_0 + VARIABLE_1 +: 0.0
********** f = times NUMBER VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1
* NUMBER VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ): 0.0
********** f = NUMBER VARIABLE_2 equals VARIABLE_0
NUMBER VARIABLE_2 = ( VARIABLE_0: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 times NUMBER and then return VARIABLE_0 plus
VARIABLE_0 + VARIABLE_1 ) * NUMBER return VARIABLE_0 +: -0.6931471805599453
********** f = VARIABLE_0 plus VARIABLE_1 plus
VARIABLE_0 + VARIABLE_1 +: 0.0
********** f = VARIABLE_0 plus VARIABLE_1
VARIABLE_0 + VARIABLE_1: -1.0986122886681098
VARIABLE_0 + VARIABLE_1 ): -1.0986122886681098
( VARIABLE_0 + VARIABLE_1 ): -1.0986122886681098
********** f = equals VARIABLE_0
= VARIABLE_0: -0.3364722366212129
= ( VARIABLE_0: -1.9459101490553135
VARIABLE_0: -1.9459101490553135
********** f = return VARIABLE_0
return VARIABLE_0: -0.25131442828090605
VARIABLE_0 return VARIABLE_0: -2.1972245773362196
NUMBER VARIABLE_0 return VARIABLE_0: -2.1972245773362196
********** f = plus VARIABLE_1 times NUMBER and then return
+ VARIABLE_1 ) * NUMBER return: 0.0
********** f = equals VARIABLE_0 plus VARIABLE_1 times
= ( VARIABLE_0 + VARIABLE_1 ) *: 0.0
********** f = equals VARIABLE_0 plus VARIABLE_1 times NUMBER and then
= ( VARIABLE_0 + VARIABLE_1 ) * NUMBER: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_2 equals VARIABLE_0
VARIABLE_0 * NUMBER VARIABLE_2 = ( VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1
NUMBER VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ): 0.0
********** f = plus VARIABLE_1
+ VARIABLE_1 ): -0.6931471805599453
+ VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_1 plus
VARIABLE_1 +: 0.0
********** f = NUMBER and then return VARIABLE_0 plus VARIABLE_1
NUMBER return VARIABLE_0 + VARIABLE_1: 0.0
********** f = times NUMBER VARIABLE_2 equals
* NUMBER VARIABLE_2 =: -0.6931471805599453
* NUMBER VARIABLE_2 = (: -0.6931471805599453
********** f = VARIABLE_1 equals VARIABLE_0 times
VARIABLE_1 = VARIABLE_0 *: 0.0
********** f = VARIABLE_1 equals VARIABLE_0 times NUMBER
VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_2 equals
VARIABLE_0 * NUMBER VARIABLE_2 = (: -0.6931471805599453
VARIABLE_0 * NUMBER VARIABLE_2 =: -0.6931471805599453
********** f = times NUMBER and then return VARIABLE_0 plus VARIABLE_1
* NUMBER return VARIABLE_0 + VARIABLE_1: 0.0
********** f = plus VARIABLE_2
+ VARIABLE_2: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 plus VARIABLE_2
VARIABLE_0 + VARIABLE_1 + VARIABLE_2: 0.0
********** f = NUMBER and then return
NUMBER return: 0.0
********** f = VARIABLE_0
( VARIABLE_0: -4.430816798843313
VARIABLE_0: -0.1267517056391439
VARIABLE_0 VARIABLE_0: -4.430816798843313
in VARIABLE_0: -4.430816798843313
VARIABLE_0 =: -4.430816798843313
VARIABLE_0 index VARIABLE_0: -4.430816798843313
NUMBER VARIABLE_0: -4.430816798843313
FUNCTION_CALL_11 VARIABLE_0 sublist: -4.430816798843313
VARIABLE_0 sublist: -4.430816798843313
FUNCTION_CALL_11 VARIABLE_0: -4.430816798843313
VARIABLE_0 sublist NUMBER: -4.430816798843313
********** f = times
*: -0.11778303565638351
* (: -2.1972245773362196
********** f = VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1 times NUMBER and then
VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ) * NUMBER: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_2 equals
= VARIABLE_0 * NUMBER VARIABLE_2 =: -0.6931471805599453
= VARIABLE_0 * NUMBER VARIABLE_2 = (: -0.6931471805599453
********** f = VARIABLE_1 equals VARIABLE_0 times NUMBER VARIABLE_2 equals VARIABLE_0
VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = ( VARIABLE_0: 0.0
********** f = VARIABLE_1 equals VARIABLE_0 times NUMBER VARIABLE_2 equals
VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 = (: -0.6931471805599453
VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2 =: -0.6931471805599453
********** f = NUMBER VARIABLE_2 equals
NUMBER VARIABLE_2 =: -0.6931471805599453
NUMBER VARIABLE_2 = (: -0.6931471805599453
********** f = VARIABLE_2
VARIABLE_2: -0.1158318155251217
VARIABLE: -4.1588830833596715
= VARIABLE_2: -4.1588830833596715
VARIABLE_2 =: -4.1588830833596715
VARIABLE_2 VARIABLE_1: -4.1588830833596715
NUMBER VARIABLE_2: -4.1588830833596715
VARIABLE_2 +: -4.1588830833596715
VARIABLE_4 VARIABLE_2: -4.1588830833596715
********** f = return VARIABLE_0 plus VARIABLE_1
return VARIABLE_0 + VARIABLE_1: 0.0
********** f = return
return: -0.10821358464023272
return VARIABLE_2: -3.6635616461296463
+ = NUMBER return: -3.6635616461296463
= NUMBER return: -3.6635616461296463
NUMBER return: -3.6635616461296463
********** f = VARIABLE_1 equals VARIABLE_0
VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 equals
VARIABLE_2 = (: -2.0794415416798357
VARIABLE_2 =: -0.13353139262452263
********** f = VARIABLE_1 equals
VARIABLE_1 =: -0.2876820724517809
VARIABLE_1: -1.3862943611198906
********** f = NUMBER VARIABLE_2
NUMBER VARIABLE_2: 0.0
********** f = equals
= (: -3.332204510175204
=: -0.2876820724517809
VARIABLE_0 =: -3.332204510175204
VARIABLE_0: -3.332204510175204
==: -2.639057329615259
NUMBER ==: -3.332204510175204
= NUMBER: -3.332204510175204
********** f = VARIABLE_0 times NUMBER VARIABLE_2
VARIABLE_0 * NUMBER VARIABLE_2: 0.0
********** f = NUMBER and then return VARIABLE_0 plus VARIABLE_1 plus VARIABLE_2
NUMBER return VARIABLE_0 + VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 times NUMBER and then return
VARIABLE_0 + VARIABLE_1 ) * NUMBER return: -0.6931471805599453
( VARIABLE_0 + VARIABLE_1 ) * NUMBER return: -0.6931471805599453
********** f = VARIABLE_1 plus VARIABLE_2
VARIABLE_1 + VARIABLE_2: 0.0
********** f = plus VARIABLE_1 times NUMBER and then
+ VARIABLE_1 ) * NUMBER: 0.0
********** f = VARIABLE_0 times
VARIABLE_0 *: -0.2231435513142097
VARIABLE_0 * (: -1.6094379124341003
********** f = NUMBER and then return VARIABLE_0 plus
NUMBER return VARIABLE_0 +: 0.0
********** f = plus VARIABLE_1 plus VARIABLE_2
+ VARIABLE_1 + VARIABLE_2: 0.0
********** f = return VARIABLE_0 plus VARIABLE_1 plus
return VARIABLE_0 + VARIABLE_1 +: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 times NUMBER and then return VARIABLE_0
VARIABLE_0 + VARIABLE_1 ) * NUMBER return VARIABLE_0: -0.6931471805599453
( VARIABLE_0 + VARIABLE_1 ) * NUMBER return VARIABLE_0: -0.6931471805599453
********** f = times NUMBER and then
* NUMBER: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 times NUMBER and then
VARIABLE_0 + VARIABLE_1 ) * NUMBER: -0.6931471805599453
( VARIABLE_0 + VARIABLE_1 ) * NUMBER: -0.6931471805599453
********** f = VARIABLE_1 equals VARIABLE_0 times NUMBER VARIABLE_2
VARIABLE_1 = VARIABLE_0 * NUMBER VARIABLE_2: 0.0
********** f = plus VARIABLE_1 times NUMBER and then return VARIABLE_0 plus VARIABLE_1
+ VARIABLE_1 ) * NUMBER return VARIABLE_0 + VARIABLE_1: 0.0
********** f = NUMBER and then return VARIABLE_0 plus VARIABLE_1 plus
NUMBER return VARIABLE_0 + VARIABLE_1 +: 0.0
********** f = plus VARIABLE_1 times NUMBER and then return VARIABLE_0
+ VARIABLE_1 ) * NUMBER return VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1 times
NUMBER VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ) *: 0.0
********** f = plus VARIABLE_1 times
+ VARIABLE_1 ) *: 0.0
********** f = equals VARIABLE_0 times NUMBER
= VARIABLE_0 * NUMBER: 0.0
********** f = times NUMBER and then return VARIABLE_0 plus VARIABLE_1 plus VARIABLE_2
* NUMBER return VARIABLE_0 + VARIABLE_1 + VARIABLE_2: 0.0
********** f = times NUMBER VARIABLE_2 equals VARIABLE_0
* NUMBER VARIABLE_2 = ( VARIABLE_0: 0.0
********** f = times NUMBER and then return VARIABLE_0
* NUMBER return VARIABLE_0: 0.0
********** f = times NUMBER and then return
* NUMBER return: 0.0
********** f = VARIABLE_0 plus VARIABLE_1 times
( VARIABLE_0 + VARIABLE_1 ) *: -0.6931471805599453
VARIABLE_0 + VARIABLE_1 ) *: -0.6931471805599453
********** f = equals VARIABLE_0 plus VARIABLE_1
= ( VARIABLE_0 + VARIABLE_1 ): 0.0
********** f = equals VARIABLE_0 plus VARIABLE_1 times NUMBER and then return
= ( VARIABLE_0 + VARIABLE_1 ) * NUMBER return: 0.0
********** f = return VARIABLE_0 plus VARIABLE_1 plus VARIABLE_2
return VARIABLE_0 + VARIABLE_1 + VARIABLE_2: 0.0
********** f = equals VARIABLE_0 times
= VARIABLE_0 *: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_2 equals VARIABLE_0
= VARIABLE_0 * NUMBER VARIABLE_2 = ( VARIABLE_0: 0.0
********** f = VARIABLE_2 equals VARIABLE_0
VARIABLE_2 = ( VARIABLE_0: -0.6931471805599453
VARIABLE_2 = VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 times NUMBER
VARIABLE_0 * NUMBER: 0.0
********** f = plus
+: -0.060624621816434854
NUMBER: -2.833213344056216
********** f = return VARIABLE_0 plus
return VARIABLE_0 +: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1
VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ): 0.0
********** f = NUMBER
NUMBER: -0.12323264042394809
NUMBER NUMBER: -3.5409593240373143
= NUMBER: -3.5409593240373143
FUNCTION_CALL_4 NUMBER: -4.23410650459726
NUMBER :: -3.5409593240373143
NUMBER VARIABLE_0: -4.23410650459726
********** f = NUMBER and then return VARIABLE_0
NUMBER return VARIABLE_0: 0.0
********** f = plus VARIABLE_1 plus
+ VARIABLE_1 +: 0.0
********** f = NUMBER and then
NUMBER: 0.0
********** f = VARIABLE_0 plus
VARIABLE_0 +: 0.0
********** f = times NUMBER VARIABLE_2
* NUMBER VARIABLE_2: 0.0
********** f = times NUMBER
* NUMBER: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_2
= VARIABLE_0 * NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_1
VARIABLE_1: -0.1286173778220936
VARIABLE_1 VARIABLE_1: -4.060443010546419
= VARIABLE_1: -4.060443010546419
VARIABLE_1 ==: -4.060443010546419
VARIABLE_1 >: -4.060443010546419
VARIABLE_1 =: -4.060443010546419
VARIABLE_1 +: -4.060443010546419
sublist VARIABLE_1: -4.060443010546419
********** f = times NUMBER and then return VARIABLE_0 plus
* NUMBER return VARIABLE_0 +: 0.0
********** f = plus VARIABLE_1 times NUMBER and then return VARIABLE_0 plus
+ VARIABLE_1 ) * NUMBER return VARIABLE_0 +: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 plus VARIABLE_1 times
VARIABLE_2 = ( VARIABLE_0 + VARIABLE_1 ) *: 0.0
********** f = times NUMBER times NUMBER
* NUMBER * NUMBER: 0.0
********** f = NUMBER times NUMBER
NUMBER * NUMBER: 0.0
********** f = VARIABLE_0 times NUMBER times NUMBER
VARIABLE_0 * NUMBER * NUMBER: 0.0
********** f = return VARIABLE_0 times NUMBER times NUMBER
return VARIABLE_0 * NUMBER * NUMBER: 0.0
********** f = times NUMBER times
* NUMBER *: 0.0
********** f = return VARIABLE_0 times NUMBER
return VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 times NUMBER times
VARIABLE_0 * NUMBER *: 0.0
********** f = NUMBER times
NUMBER *: 0.0
********** f = return VARIABLE_0 times
return VARIABLE_0 *: -0.6931471805599453
return VARIABLE_0 * (: -0.6931471805599453
********** f = return VARIABLE_0 times NUMBER times
return VARIABLE_0 * NUMBER *: 0.0
********** f = a variable
=: -0.1823215567939546
= NUMBER: -1.791759469228055
********** f = and store this in a variable
=: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = next return VARIABLE_0
return VARIABLE_0: 0.0
********** f = multiply VARIABLE_1 by NUMBER and store this in a variable named
= VARIABLE_1 * NUMBER: 0.0
********** f = NUMBER and
NUMBER: -0.10536051565782628
= NUMBER: -2.3025850929940455
********** f = multiplied by NUMBER 
* NUMBER: 0.0
********** f = next return VARIABLE_0 multiplied by NUMBER
return VARIABLE_0 * NUMBER: 0.0
********** f = next return VARIABLE_0 multiplied by NUMBER 
return VARIABLE_0 * NUMBER: 0.0
********** f = return VARIABLE_0 multiplied by
return VARIABLE_0 *: 0.0
********** f = multiplied by
*: -0.10536051565782628
VARIABLE_2 *: -2.3025850929940455
********** f = multiply VARIABLE_1 by NUMBER and store this in a variable named VARIABLE_0
VARIABLE_0 = VARIABLE_1 * NUMBER: 0.0
********** f = this in a variable
=: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = multiply VARIABLE_1 by NUMBER and store this in a variable named VARIABLE_0 next
VARIABLE_0 = VARIABLE_1 * NUMBER: 0.0
********** f = return VARIABLE_0 multiplied by NUMBER 
return VARIABLE_0 * NUMBER: 0.0
********** f = store this in a variable
=: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = NUMBER and store this in
NUMBER: 0.0
********** f = NUMBER and store
NUMBER: 0.0
********** f = multiply VARIABLE_1 by NUMBER and store this in a variable named VARIABLE_0 next return VARIABLE_0
VARIABLE_0 = VARIABLE_1 * NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 next
VARIABLE_0: 0.0
********** f = next return
return: 0.0
********** f = VARIABLE_0 multiplied by NUMBER
VARIABLE_0 * NUMBER: -0.2231435513142097
= VARIABLE_0 * NUMBER: -1.6094379124341003
********** f = NUMBER 
NUMBER: 0.0
********** f = multiplied by NUMBER
* NUMBER: 0.0
********** f = NUMBER and store this
NUMBER: 0.0
********** f = next return VARIABLE_0 multiplied by
return VARIABLE_0 *: 0.0
********** f = return VARIABLE_0 multiplied by NUMBER
return VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 multiplied by NUMBER 
VARIABLE_0 * NUMBER: 0.0
********** f = in a variable
=: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = multiply VARIABLE_1 by NUMBER and store this in a variable named VARIABLE_0 next return
VARIABLE_0 = VARIABLE_1 * NUMBER return: 0.0
********** f = VARIABLE_0 multiplied by
VARIABLE_0 *: -0.40546510810816444
= VARIABLE_0 *: -1.791759469228055
*: -1.791759469228055
********** f = NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return VARIABLE_0
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals
VARIABLE_0: -1.6094379124341003
VARIABLE_0 =: -0.35667494393873245
VARIABLE_0 ==: -2.3025850929940455
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by
NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = by NUMBER
* NUMBER: -2.3025850929940455
NUMBER: -0.2231435513142097
*: -2.3025850929940455
********** f = equals VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 *: -0.6931471805599453
= VARIABLE_0 *: -0.6931471805599453
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = equals VARIABLE_0 multiplied by NUMBER then return VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 multiplied by NUMBER then return
VARIABLE_0 * NUMBER return: -0.6931471805599453
= VARIABLE_0 * NUMBER return: -0.6931471805599453
********** f = NUMBER then
NUMBER: -0.10536051565782628
== NUMBER: -2.3025850929940455
********** f = equals VARIABLE_0 multiplied by NUMBER
VARIABLE_0 = VARIABLE_0 * NUMBER: -0.6931471805599453
= VARIABLE_0 * NUMBER: -0.6931471805599453
********** f = then return VARIABLE_0
return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then VARIABLE_0 equals
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0: -0.6931471805599453
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 =: -0.6931471805599453
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = NUMBER then return
NUMBER return: -0.2231435513142097
== NUMBER return: -1.6094379124341003
********** f = then return
return: 0.0
********** f = multiplied by NUMBER then VARIABLE_0 equals
* NUMBER VARIABLE_0 =: -0.6931471805599453
* NUMBER VARIABLE_0: -0.6931471805599453
********** f = NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied
NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = VARIABLE_0 equals VARIABLE_0
VARIABLE_0 = VARIABLE_0: -0.5108256237659907
VARIABLE_1 + + VARIABLE_0 =: -1.6094379124341003
+ + VARIABLE_0 =: -1.6094379124341003
********** f = NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied
VARIABLE_0 = VARIABLE_0: 0.0
********** f = by NUMBER then return
* NUMBER return: 0.0
********** f = NUMBER then VARIABLE_0
NUMBER: 0.0
********** f = equals VARIABLE_0 multiplied by NUMBER then return
VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = equals VARIABLE_0 multiplied
VARIABLE_0 = VARIABLE_0: 0.0
********** f = multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return VARIABLE_0
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = VARIABLE_0 multiplied by NUMBER then return VARIABLE_0
VARIABLE_0 * NUMBER return VARIABLE_0: -0.6931471805599453
= VARIABLE_0 * NUMBER return VARIABLE_0: -0.6931471805599453
********** f = NUMBER then VARIABLE_0 equals
NUMBER VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 =: -0.6931471805599453
********** f = multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by
* NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = multiplied by NUMBER then
* NUMBER: 0.0
********** f = by
*: -0.40546510810816444
+: -1.0986122886681098
********** f = VARIABLE_0 multiplied
= VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = NUMBER then return VARIABLE_0
NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then return
VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = by NUMBER then return VARIABLE_0
* NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then
VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = multiplied by NUMBER then VARIABLE_0 equals VARIABLE_0 multiplied
* NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = multiplied by NUMBER then VARIABLE_0
* NUMBER: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER then VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER multiplied by NUMBER
NUMBER * NUMBER: 0.0
********** f = multiplied by NUMBER multiplied by
* NUMBER *: 0.0
********** f = VARIABLE_0 multiplied by NUMBER multiplied by NUMBER
VARIABLE_0 * NUMBER * NUMBER: 0.0
********** f = VARIABLE_0 multiplied by NUMBER multiplied by
VARIABLE_0 * NUMBER *: 0.0
********** f = NUMBER multiplied by
NUMBER *: 0.0
********** f = multiplied by NUMBER multiplied by NUMBER
* NUMBER * NUMBER: 0.0
********** f = times VARIABLE_0 variable VARIABLE_2 equal NUMBER times VARIABLE_1 return VARIABLE_2 
VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1 return VARIABLE_2: 0.0
********** f = equal NUMBER times
NUMBER *: 0.0
********** f = equal NUMBER times VARIABLE_0 variable VARIABLE_2 equal NUMBER times
NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER *: 0.0
********** f = variable VARIABLE_2 equal NUMBER times VARIABLE_1 return VARIABLE_2 
VARIABLE_2 = NUMBER * VARIABLE_1 return VARIABLE_2: 0.0
********** f = equal NUMBER times VARIABLE_0 variable VARIABLE_2
NUMBER * VARIABLE_0 VARIABLE_2 =: 0.0
********** f = times VARIABLE_0 variable VARIABLE_2 equal NUMBER times VARIABLE_1
VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1: 0.0
********** f = let variable VARIABLE_1 equal NUMBER
VARIABLE_1 = NUMBER *: 0.0
********** f = variable VARIABLE_2
VARIABLE_2 =: -0.6931471805599453
NUMBER VARIABLE_2 =: -1.3862943611198906
VARIABLE_2: -1.3862943611198906
********** f = let variable
=: 0.0
********** f = variable VARIABLE_2 equal NUMBER times VARIABLE_1
VARIABLE_2 = NUMBER * VARIABLE_1: 0.0
********** f = variable
=: -0.5108256237659907
VARIABLE_0: -1.6094379124341003
= VARIABLE_0: -1.6094379124341003
********** f = let variable VARIABLE_1
VARIABLE_1 =: 0.0
********** f = equal
*: -1.9459101490553135
index: -1.9459101490553135
+: -1.9459101490553135
=: -0.5596157879354228
********** f = let variable VARIABLE_1 equal NUMBER times VARIABLE_0 variable VARIABLE_2 equal NUMBER times
VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER *: 0.0
********** f = variable VARIABLE_2 equal NUMBER times
VARIABLE_2 = NUMBER *: 0.0
********** f = let variable VARIABLE_1 equal NUMBER times VARIABLE_0 variable VARIABLE_2
VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 =: 0.0
********** f = equal NUMBER times VARIABLE_0 variable VARIABLE_2 equal NUMBER
NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER: 0.0
********** f = times VARIABLE_0 variable VARIABLE_2 equal NUMBER times
VARIABLE_0 VARIABLE_2 = NUMBER *: 0.0
********** f = equal NUMBER times VARIABLE_0
NUMBER * VARIABLE_0: 0.0
********** f = let variable VARIABLE_1 equal NUMBER times VARIABLE_0 variable VARIABLE_2 equal NUMBER
VARIABLE_1 = NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER: 0.0
********** f = times VARIABLE_1 return VARIABLE_2 
* VARIABLE_1 return VARIABLE_2: 0.0
********** f = equal NUMBER times VARIABLE_0 variable VARIABLE_2 equal NUMBER times VARIABLE_1
NUMBER * VARIABLE_0 VARIABLE_2 = NUMBER * VARIABLE_1: 0.0
********** f = return VARIABLE_2 
return VARIABLE_2: -0.6931471805599453
VARIABLE_2 return VARIABLE_2: -0.6931471805599453
********** f = equal NUMBER times VARIABLE_1
NUMBER * VARIABLE_1: 0.0
********** f = equal NUMBER
NUMBER: -0.587786664902119
NUMBER *: -2.1972245773362196
+: -2.1972245773362196
= NUMBER: -1.5040773967762742
********** f = let variable VARIABLE_1 equal NUMBER times VARIABLE_0
VARIABLE_1 = NUMBER * VARIABLE_0: 0.0
********** f = variable VARIABLE_2 equal NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = times VARIABLE_0 variable VARIABLE_2
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = VARIABLE_1 return VARIABLE_2 
VARIABLE_1 return VARIABLE_2: 0.0
********** f = times VARIABLE_0 variable VARIABLE_2 equal NUMBER
VARIABLE_0 VARIABLE_2 = NUMBER: 0.0
********** f = times VARIABLE_0
VARIABLE_0: -0.6931471805599453
* ( VARIABLE_0: -0.6931471805599453
********** f = equal NUMBER times VARIABLE_1 return VARIABLE_2 
NUMBER * VARIABLE_1 return VARIABLE_2: 0.0
********** f = times VARIABLE_1
* VARIABLE_1: 0.0
********** f = divided
/: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by VARIABLE_1 divided
VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = by NUMBER and then
NUMBER: 0.0
********** f = plus equals
+ =: 0.0
********** f = times by NUMBER divided by NUMBER
* NUMBER / NUMBER: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then
VARIABLE_0 * VARIABLE_1 / NUMBER: 0.0
********** f = times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by
* VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = NUMBER divided by NUMBER return VARIABLE_0
NUMBER / NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0
VARIABLE_1 / NUMBER VARIABLE_0: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER divided by NUMBER return VARIABLE_0
+ = VARIABLE_0 * NUMBER / NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 times by NUMBER divided
VARIABLE_0 * NUMBER /: 0.0
********** f = by NUMBER return
NUMBER return: 0.0
********** f = times by VARIABLE_1 divided by NUMBER and then VARIABLE_0
* VARIABLE_1 / NUMBER VARIABLE_0: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided
/ NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = times by NUMBER
* NUMBER: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals
= VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + =: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by
VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0
/ NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by NUMBER
VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = VARIABLE_0 times by VARIABLE_1
VARIABLE_0 * VARIABLE_1: 0.0
********** f = by NUMBER and then VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 plus equals
VARIABLE_0 + =: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0
NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0
VARIABLE_0 + = VARIABLE_0: 0.0
********** f = so VARIABLE_0 plus equals
VARIABLE_0 + =: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER
+ = VARIABLE_0 * NUMBER: 0.0
********** f = times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus
* VARIABLE_1 / NUMBER VARIABLE_0 +: 0.0
********** f = VARIABLE_1 divided by
VARIABLE_1 /: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by VARIABLE_1
VARIABLE_0 + = VARIABLE_0 * VARIABLE_1: 0.0
********** f = divided by NUMBER and then
/ NUMBER: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER divided by NUMBER return
+ = VARIABLE_0 * NUMBER / NUMBER return: 0.0
********** f = NUMBER divided by NUMBER
NUMBER / NUMBER: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus
/ NUMBER VARIABLE_0 +: 0.0
********** f = NUMBER return
NUMBER return: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by
VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by NUMBER
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = VARIABLE_1 divided
VARIABLE_1 /: 0.0
********** f = VARIABLE_0 times by
VARIABLE_0 *: 0.0
********** f = times by NUMBER divided by NUMBER return
* NUMBER / NUMBER return: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals
NUMBER VARIABLE_0 + =: 0.0
********** f = VARIABLE_0 times by NUMBER divided by NUMBER return
VARIABLE_0 * NUMBER / NUMBER return: 0.0
********** f = times by
*: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals
VARIABLE_1 / NUMBER VARIABLE_0 + =: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then
VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 / NUMBER: 0.0
********** f = divided by NUMBER and then VARIABLE_0
/ NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by
VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER
/ NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by
VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0
VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER divided
+ = VARIABLE_0 * NUMBER /: 0.0
********** f = equals VARIABLE_0 times by NUMBER
= VARIABLE_0 * NUMBER: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided
= VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus
VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 +: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals
NUMBER VARIABLE_0 + =: 0.0
********** f = VARIABLE_0 times by NUMBER divided by
VARIABLE_0 * NUMBER /: 0.0
********** f = NUMBER and then VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = NUMBER divided
NUMBER /: -0.6931471805599453
/ NUMBER: -0.6931471805599453
********** f = times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0
* VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus
= VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 +: 0.0
********** f = times by NUMBER divided by
* NUMBER /: 0.0
********** f = times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals
* VARIABLE_1 / NUMBER VARIABLE_0 + =: 0.0
********** f = equals VARIABLE_0 times by
= VARIABLE_0 *: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided
VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = equals VARIABLE_0 times by NUMBER divided
= VARIABLE_0 * NUMBER /: 0.0
********** f = NUMBER and then VARIABLE_0 plus
NUMBER VARIABLE_0 +: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0
VARIABLE_0 + = VARIABLE_0: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0
VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER
VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 times by NUMBER divided by NUMBER
VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = by NUMBER and then VARIABLE_0 plus
NUMBER VARIABLE_0 +: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by
NUMBER VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = VARIABLE_0 times by NUMBER divided by NUMBER return VARIABLE_0
VARIABLE_0 * NUMBER / NUMBER return VARIABLE_0: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER: 0.0
********** f = plus equals VARIABLE_0 times by
+ = VARIABLE_0 *: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0
VARIABLE_1 / NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0
VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = plus equals VARIABLE_0
+ = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then
= VARIABLE_0 * VARIABLE_1 / NUMBER: 0.0
********** f = times by NUMBER divided by NUMBER return VARIABLE_0
* NUMBER / NUMBER return VARIABLE_0: 0.0
********** f = NUMBER return VARIABLE_0
NUMBER return VARIABLE_0: 0.0
********** f = times by VARIABLE_1 divided
* VARIABLE_1 /: 0.0
********** f = VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus
VARIABLE_1 / NUMBER VARIABLE_0 +: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0 plus equals
VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0 + =: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals
/ NUMBER VARIABLE_0 + =: 0.0
********** f = divided by
/: 0.0
********** f = equals VARIABLE_0 times by NUMBER divided by NUMBER return VARIABLE_0
= VARIABLE_0 * NUMBER / NUMBER return VARIABLE_0: 0.0
********** f = times by NUMBER divided
* NUMBER /: 0.0
********** f = so VARIABLE_0 plus equals VARIABLE_0 times by VARIABLE_1 divided by
VARIABLE_0 + = VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by
/ NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = equals VARIABLE_0 times by NUMBER divided by NUMBER
= VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by NUMBER
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = divided by NUMBER return
/ NUMBER return: 0.0
********** f = divided by NUMBER return VARIABLE_0
/ NUMBER return VARIABLE_0: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER divided by NUMBER
+ = VARIABLE_0 * NUMBER / NUMBER: 0.0
********** f = times by VARIABLE_1 divided by
* VARIABLE_1 /: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1
= VARIABLE_0 * VARIABLE_1: 0.0
********** f = times by VARIABLE_1
* VARIABLE_1: 0.0
********** f = VARIABLE_1 divided by NUMBER and then
VARIABLE_1 / NUMBER: 0.0
********** f = equals VARIABLE_0 times by NUMBER divided by NUMBER return
= VARIABLE_0 * NUMBER / NUMBER return: 0.0
********** f = divided by NUMBER
/ NUMBER: 0.0
********** f = plus equals VARIABLE_0 times by NUMBER divided by
+ = VARIABLE_0 * NUMBER /: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided by
= VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = by NUMBER return VARIABLE_0
NUMBER return VARIABLE_0: 0.0
********** f = divided by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by
/ NUMBER VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0
NUMBER VARIABLE_0 + = VARIABLE_0: 0.0
********** f = by NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 times by VARIABLE_1 divided
VARIABLE_0 * VARIABLE_1 /: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by NUMBER return
VARIABLE_0 + = VARIABLE_0 * NUMBER / NUMBER return: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided
NUMBER VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = NUMBER divided by NUMBER return
NUMBER / NUMBER return: 0.0
********** f = times by VARIABLE_1 divided by NUMBER and then
* VARIABLE_1 / NUMBER: 0.0
********** f = equals VARIABLE_0 times by VARIABLE_1 divided by NUMBER and then VARIABLE_0
= VARIABLE_0 * VARIABLE_1 / NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by NUMBER
VARIABLE_0 + = VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER and then VARIABLE_0 plus equals VARIABLE_0 times by
NUMBER VARIABLE_0 + = VARIABLE_0 *: 0.0
********** f = so VARIABLE_0 plus
VARIABLE_0 +: 0.0
********** f = NUMBER divided by
NUMBER /: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_0 times by NUMBER divided by
VARIABLE_0 + = VARIABLE_0 * NUMBER /: 0.0
********** f = VARIABLE_0 times by NUMBER
VARIABLE_0 * NUMBER: 0.0
********** f = equals VARIABLE_0 times by NUMBER divided by
= VARIABLE_0 * NUMBER /: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by
= VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return VARIABLE_0
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return VARIABLE_0
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return
VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_0 equals
= VARIABLE_0 * NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0 equals
VARIABLE_0 * NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_0 multiplied by NUMBER return VARIABLE_0
VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by
NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0
VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return
VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = times NUMBER VARIABLE_0 equals
* NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0
VARIABLE_0 * NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = equals VARIABLE_0 multiplied by NUMBER return
= VARIABLE_0 * NUMBER return: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_0
= VARIABLE_0 * NUMBER VARIABLE_0: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
= VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER return
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER return: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times NUMBER VARIABLE_0
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times NUMBER
VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = multiplied by NUMBER return
* NUMBER return: 0.0
********** f = NUMBER VARIABLE_0 equals
NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times
VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by
VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 times NUMBER VARIABLE_0 equals
VARIABLE_0 = VARIABLE_0 * NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_0 multiplied by NUMBER return
VARIABLE_0 * NUMBER return: 0.0
********** f = times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by NUMBER
* NUMBER VARIABLE_0 = VARIABLE_0 * NUMBER: 0.0
********** f = multiplied by NUMBER return VARIABLE_0
* NUMBER return VARIABLE_0: 0.0
********** f = times NUMBER VARIABLE_0 equals VARIABLE_0 multiplied by
* NUMBER VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = NUMBER VARIABLE_0 equals VARIABLE_0
NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 times NUMBER VARIABLE_0 equals VARIABLE_0
= VARIABLE_0 * NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = times NUMBER VARIABLE_0
* NUMBER VARIABLE_0: 0.0
********** f = equals VARIABLE_0 multiplied by NUMBER return VARIABLE_0
= VARIABLE_0 * NUMBER return VARIABLE_0: 0.0
********** f = times NUMBER VARIABLE_0 equals VARIABLE_0
* NUMBER VARIABLE_0 = VARIABLE_0: 0.0
********** f = take the VARIABLE_2 and multiply it by NUMBER get the
= VARIABLE_2 * NUMBER VARIABLE_1 =: -0.6931471805599453
VARIABLE_0 = VARIABLE_2 * NUMBER VARIABLE_1 =: -0.6931471805599453
********** f = and multiply it by
*: 0.0
********** f = NUMBER get the VARIABLE_0 multiply VARIABLE_0 by
NUMBER VARIABLE_1 = VARIABLE_0 *: 0.0
********** f = take the VARIABLE_2 and multiply it by
VARIABLE_0 = VARIABLE_2 *: -0.6931471805599453
= VARIABLE_2 *: -0.6931471805599453
********** f = the
VARIABLE_0 =: -2.772588722239781
=: -0.9808292530117262
VARIABLE_1: -1.3862943611198906
NUMBER: -2.772588722239781
NUMBER FUNCTION_CALL_3 STRING_CONST: -2.772588722239781
NUMBER FUNCTION_CALL_3: -2.772588722239781
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -2.772588722239781
= NUMBER: -2.772588722239781
********** f = and multiply it by NUMBER get the
* NUMBER VARIABLE_1 =: 0.0
********** f = multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = take the VARIABLE_2 and
VARIABLE_0 = VARIABLE_2: -0.6931471805599453
= VARIABLE_2: -0.6931471805599453
********** f = get the VARIABLE_0 multiply VARIABLE_0 by NUMBER
VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by
* NUMBER VARIABLE_1 = VARIABLE_0 *: 0.0
********** f = multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER to get
NUMBER: 0.0
********** f = get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to get the VARIABLE_1 and return the VARIABLE_1
VARIABLE_1 = VARIABLE_0 * NUMBER return VARIABLE_1: 0.0
********** f = multiply it by
*: 0.0
********** f = VARIABLE_0 multiply VARIABLE_0 by
VARIABLE_0 *: 0.0
********** f = NUMBER to
NUMBER: -0.2006706954621511
NUMBER :: -2.3978952727983707
VARIABLE: -2.3978952727983707
********** f = and multiply it by NUMBER
* NUMBER: 0.0
********** f = multiply it by NUMBER get the
* NUMBER VARIABLE_1 =: 0.0
********** f = VARIABLE_0 multiply VARIABLE_0 by NUMBER
VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER get the
NUMBER VARIABLE_1 =: 0.0
********** f = NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to get
NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 multiply VARIABLE_0 by NUMBER to
VARIABLE_0 * NUMBER: 0.0
********** f = take the VARIABLE_2 and multiply it by NUMBER
= VARIABLE_2 * NUMBER: -0.6931471805599453
VARIABLE_0 = VARIABLE_2 * NUMBER: -0.6931471805599453
********** f = take the VARIABLE_2 and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER
= VARIABLE_2 * NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: -0.6931471805599453
********** f = NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER
NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = get the VARIABLE_0 multiply VARIABLE_0 by
VARIABLE_1 = VARIABLE_0 *: 0.0
********** f = get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to get
VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = the VARIABLE_1 and return the VARIABLE_1
return VARIABLE_1: 0.0
********** f = take the VARIABLE_2
VARIABLE_0 = VARIABLE_2: -0.6931471805599453
= VARIABLE_2: -0.6931471805599453
********** f = get the
VARIABLE_1 =: 0.0
********** f = and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by
* NUMBER VARIABLE_1 = VARIABLE_0 *: 0.0
********** f = to get the VARIABLE_1 and return the VARIABLE_1
return VARIABLE_1: 0.0
********** f = and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to get
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to
NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 multiply VARIABLE_0 by NUMBER to get the VARIABLE_1 and return the VARIABLE_1
VARIABLE_0 * NUMBER return VARIABLE_1: 0.0
********** f = get the VARIABLE_1 and return the VARIABLE_1
return VARIABLE_1: 0.0
********** f = and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = VARIABLE_0 multiply VARIABLE_0 by NUMBER to get
VARIABLE_0 * NUMBER: 0.0
********** f = NUMBER to get the VARIABLE_1 and return the VARIABLE_1
NUMBER return VARIABLE_1: 0.0
********** f = get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to
VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = take the VARIABLE_2 and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by
VARIABLE_0 = VARIABLE_2 * NUMBER VARIABLE_1 = VARIABLE_0 *: -0.6931471805599453
= VARIABLE_2 * NUMBER VARIABLE_1 = VARIABLE_0 *: -0.6931471805599453
********** f = and multiply it by NUMBER get the VARIABLE_0 multiply VARIABLE_0 by NUMBER to get
* NUMBER VARIABLE_1 = VARIABLE_0 * NUMBER: 0.0
********** f = multiply it by NUMBER
* NUMBER: 0.0
********** f = greater than VARIABLE_0 start
>: 0.0
********** f = FUNCTION_CALL_4
FUNCTION_CALL_4: -0.05129329438755058
= FUNCTION_CALL_4: -2.995732273553991
********** f = greater than VARIABLE_0 start a new block
>: 0.0
********** f = a new block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = the loop block
VARIABLE_1: 0.0
********** f = end the loop block
VARIABLE_1: 0.0
********** f = set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: -1.3862943611198906
VARIABLE_0 =: -0.2876820724517809
********** f = end the loop
VARIABLE_1: -1.0986122886681098
in: -0.6931471805599453
in FUNCTION_CALL_2: -1.791759469228055
********** f = greater than VARIABLE_0 start a
>: 0.0
********** f = new block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = set VARIABLE_0 to NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = FUNCTION_CALL_4 from
FUNCTION_CALL_4: 0.0
********** f = greater than VARIABLE_0
>: 0.0
********** f = end the
VARIABLE_1: -2.5649493574615367
in: -0.08004270767353637
********** f = the FUNCTION_CALL_4 from the VARIABLE_1
FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = greater than VARIABLE_0 start a new
>: 0.0
********** f = set VARIABLE_0 to NUMBER while
VARIABLE_0 = NUMBER while: 0.0
********** f = block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = greater than VARIABLE_0 start a new block and
>: 0.0
********** f = on
FUNCTION_CALL_5: 0.0
********** f = while
while: -0.10536051565782628
=: -2.3025850929940455
********** f = start a new block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = the loop
VARIABLE_1: -0.40546510810816444
FUNCTION_CALL_2: -1.0986122886681098
********** f = greater than
>: -0.13353139262452263
<: -2.0794415416798357
********** f = that
.: -0.5108256237659907
in: -0.916290731874155
********** f = than VARIABLE_0 start a new block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = the FUNCTION_CALL_4 from the VARIABLE_1 end
FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = end that
.: 0.0
********** f = greater
>: 0.0
********** f = NUMBER while
NUMBER while: 0.0
********** f = greater than VARIABLE_0 start a new block and set VARIABLE_0 to
> VARIABLE_0 VARIABLE_0 =: 0.0
********** f = and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = VARIABLE_0 start a new block and set VARIABLE_0 to
VARIABLE_0 VARIABLE_0 =: 0.0
********** f = then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be
> VARIABLE_1 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal to the
> VARIABLE_1 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be
VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 end loop
VARIABLE_0: 0.0
********** f = set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return VARIABLE_1: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
********** f = VARIABLE_0 end loop then return
VARIABLE_0 return: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1
VARIABLE_0 >: 0.0
********** f = set VARIABLE_1 to be equal to NUMBER while
VARIABLE_1 = NUMBER while: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = be equal to the VARIABLE_0 end loop
VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is
NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0: -0.6931471805599453
NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 =: -0.6931471805599453
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end
> VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = loop then return
return: 0.0
********** f = while VARIABLE_2 FUNCTION_CALL_4
while FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = set VARIABLE_1 to be equal to
VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
VARIABLE_1 =: -0.6931471805599453
********** f = equal to the VARIABLE_0 end loop then return
VARIABLE_0 return: 0.0
********** f = VARIABLE_0 end loop then
VARIABLE_0: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_0 return VARIABLE_1: 0.0
********** f = set VARIABLE_1 to be equal to the
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = be equal to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_0 return VARIABLE_1: 0.0
********** f = the VARIABLE_0 end loop then
VARIABLE_0: 0.0
********** f = larger than
>: 0.0
********** f = larger than VARIABLE_1 then set VARIABLE_1 to
> VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5
NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return: 0.0
********** f = to the VARIABLE_0 end loop
VARIABLE_0: 0.0
********** f = then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return VARIABLE_1: 0.0
********** f = while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if
while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to
VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = set VARIABLE_1 to be equal to NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5
VARIABLE_1 = NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = set VARIABLE_1 to be equal to the VARIABLE_0 end loop then
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 =: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0: -0.6931471805599453
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is
VARIABLE_2 if VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5
VARIABLE_0 = FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
********** f = larger than VARIABLE_1 then
>: 0.0
********** f = then set VARIABLE_1 to be equal
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = set VARIABLE_1 to be
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = equal to the VARIABLE_0 end loop then
VARIABLE_0: 0.0
********** f = VARIABLE_0 end
VARIABLE_0: -1.3862943611198906
in: -0.6931471805599453
in FUNCTION_CALL_4: -1.3862943611198906
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = then set VARIABLE_1 to be equal to the
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_0 is
VARIABLE_0: -0.6061358035703156
VARIABLE_0 =: -2.3978952727983707
VARIABLE_0 ==: -1.2992829841302609
NUMBER VARIABLE_0: -2.3978952727983707
********** f = of VARIABLE_2 if
VARIABLE_2 if: 0.0
********** f = then set VARIABLE_1 to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = be equal to the VARIABLE_0 end loop then return
VARIABLE_0 return: 0.0
********** f = while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5
while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if: 0.0
********** f = larger than VARIABLE_1
>: 0.0
********** f = FUNCTION_CALL_5
FUNCTION_CALL_5: -0.05406722127027582
= FUNCTION_CALL_5: -2.9444389791664407
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal
> VARIABLE_1 VARIABLE_1 =: 0.0
********** f = to the VARIABLE_0 end loop then
VARIABLE_0: 0.0
********** f = set VARIABLE_1 to be equal to NUMBER while VARIABLE_2 FUNCTION_CALL_4
VARIABLE_1 = NUMBER while FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then
VARIABLE_0 >: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to
VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is
while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0: 0.0
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then
> VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if
FUNCTION_CALL_5 VARIABLE_2 if: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if: -0.6931471805599453
********** f = then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return: 0.0
********** f = set VARIABLE_1 to be equal to NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is
VARIABLE_1 = NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0: -0.6931471805599453
VARIABLE_1 = NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 =: -0.6931471805599453
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop
> VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_2 FUNCTION_CALL_4
NUMBER while FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal
VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal
VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = larger
>: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = equal to the VARIABLE_0 end
VARIABLE_0: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than
VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = then set VARIABLE_1 to be
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = equal to the VARIABLE_0 end loop
VARIABLE_0: 0.0
********** f = while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is
while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0: -0.6931471805599453
while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 =: -0.6931471805599453
********** f = loop then return VARIABLE_1
return VARIABLE_1: 0.0
********** f = VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger
VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return VARIABLE_1: 0.0
********** f = set VARIABLE_1 to be equal to the VARIABLE_0 end
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = set VARIABLE_1 to be equal to the VARIABLE_0 end loop
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4
FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal to the VARIABLE_0 end
VARIABLE_0 > VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = be equal to the VARIABLE_0 end loop then
VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: -0.6931471805599453
********** f = the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_0 return VARIABLE_1: 0.0
********** f = larger than VARIABLE_1 then set VARIABLE_1 to be equal to
> VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal to
VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = then set VARIABLE_1 to be equal to the VARIABLE_0 end loop
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger
VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = VARIABLE_1 then set VARIABLE_1 to be equal to the
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal
FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
= FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: -0.6931471805599453
********** f = then return VARIABLE_1
return VARIABLE_1: 0.0
********** f = then set VARIABLE_1 to be equal to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then
VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if VARIABLE_0 is larger
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1
VARIABLE_2 if VARIABLE_0 >: 0.0
********** f = set VARIABLE_1 to be equal
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = of VARIABLE_2 if VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal to
VARIABLE_2 if VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = the VARIABLE_0 end
VARIABLE_0: -0.6931471805599453
in: -0.6931471805599453
********** f = VARIABLE_0 is larger than
VARIABLE_0 >: 0.0
********** f = NUMBER while VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5 of VARIABLE_2 if
NUMBER while FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5 VARIABLE_2 if: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal to the
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = the VARIABLE_0 end loop then return
VARIABLE_0 return: 0.0
********** f = VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_0 return VARIABLE_1: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = equal to the VARIABLE_0 end loop then return VARIABLE_1
VARIABLE_0 return VARIABLE_1: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be
VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = then set VARIABLE_1 to be equal to the VARIABLE_0 end
VARIABLE_1 VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_4 VARIABLE_0 is FUNCTION_CALL_5
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_0 = FUNCTION_CALL_5: 0.0
********** f = set VARIABLE_1 to be equal to NUMBER
VARIABLE_1 = NUMBER: 0.0
********** f = set VARIABLE_1 to be equal to the VARIABLE_0 end loop then return
VARIABLE_1 VARIABLE_1 = VARIABLE_0 return: 0.0
********** f = to the VARIABLE_0 end
VARIABLE_0: 0.0
********** f = the VARIABLE_0 end loop
VARIABLE_0: 0.0
********** f = to the VARIABLE_0 end loop then return
VARIABLE_0 return: 0.0
********** f = be equal to the VARIABLE_0 end
VARIABLE_0: 0.0
********** f = VARIABLE_0 is larger than VARIABLE_1 then set VARIABLE_1 to be equal to the
VARIABLE_0 > VARIABLE_1 VARIABLE_1 =: 0.0
********** f = than VARIABLE_1 then set VARIABLE_1 to be equal
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = set VARIABLE_1 to
VARIABLE_1 VARIABLE_1 =: 0.0
********** f = VARIABLE_0 is larger
VARIABLE_0 >: 0.0
********** f = return VARIABLE_1
return VARIABLE_1: -0.2876820724517809
return: -1.3862943611198906
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = NUMBER for item VARIABLE_2
NUMBER for VARIABLE: 0.0
********** f = let VARIABLE_1 equals NUMBER for item VARIABLE_2
VARIABLE_1 = NUMBER for VARIABLE: 0.0
********** f = NUMBER for
NUMBER for: -0.11778303565638351
for: -2.1972245773362196
********** f = item VARIABLE_2 in
VARIABLE: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = let VARIABLE_1 equals
VARIABLE_1 =: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the
VARIABLE_0 VARIABLE_1 =: 0.0
********** f = let VARIABLE_1 equals NUMBER
VARIABLE_1 = NUMBER: 0.0
********** f = let VARIABLE_1 equals NUMBER for
VARIABLE_1 = NUMBER for: 0.0
********** f = end for
in: -0.1670540846631662
VARIABLE_0: -2.5649493574615367
in FUNCTION_CALL_4: -2.5649493574615367
********** f = VARIABLE_0 set VARIABLE_1 to the
VARIABLE_0 VARIABLE_1 =: 0.0
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = for item
for VARIABLE: 0.0
********** f = set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end for return VARIABLE_1 
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2 return VARIABLE_1: 0.0
********** f = NUMBER for item VARIABLE_2 in
NUMBER for VARIABLE: 0.0
********** f = set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = and VARIABLE_2
VARIABLE_2: 0.0
********** f = let VARIABLE_1 equals NUMBER for item VARIABLE_2 in
VARIABLE_1 = NUMBER for VARIABLE: 0.0
********** f = let VARIABLE_1 equals NUMBER for item
VARIABLE_1 = NUMBER for VARIABLE: 0.0
********** f = VARIABLE_1 and
VARIABLE_1: -0.2876820724517809
=: -1.3862943611198906
********** f = item
VARIABLE: 0.0
********** f = NUMBER for item
NUMBER for VARIABLE: 0.0
********** f = end
in: -0.09844007281325252
VARIABLE_0: -3.4657359027997265
in FUNCTION_CALL_4: -2.772588722239781
********** f = FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2
FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = for
for: -0.08961215868968717
for VARIABLE in: -3.5553480614894135
for VARIABLE: -3.5553480614894135
VARIABLE_5 for: -3.5553480614894135
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = set VARIABLE_1 to the FUNCTION_CALL_4 of
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = for item VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end
for VARIABLE in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of
FUNCTION_CALL_4: -0.15415067982725836
= FUNCTION_CALL_4: -1.9459101490553135
********** f = FUNCTION_CALL_4 of VARIABLE_1
FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = item VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end
VARIABLE in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end for
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end for
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_1 and
FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the
VARIABLE_0 VARIABLE_1 =: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = set VARIABLE_1 to the
VARIABLE_1 =: 0.0
********** f = item VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end for
VARIABLE in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = for item VARIABLE_2
for VARIABLE: 0.0
********** f = item VARIABLE_2
VARIABLE: 0.0
********** f = VARIABLE_2 in VARIABLE_0
VARIABLE_0: -0.6931471805599453
VARIABLE in VARIABLE_0: -0.6931471805599453
********** f = for return VARIABLE_1 
return VARIABLE_1: -1.0986122886681098
VARIABLE_1 return VARIABLE_1: -0.40546510810816444
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = for item VARIABLE_2 in
for VARIABLE: 0.0
********** f = return VARIABLE_1 
return VARIABLE_1: -0.5108256237659907
VARIABLE_1 return VARIABLE_1: -0.916290731874155
********** f = in VARIABLE_0
VARIABLE_0: -0.3184537311185346
VARIABLE in VARIABLE_0: -2.3978952727983707
in VARIABLE_0: -1.7047480922384253
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and VARIABLE_2 end for
in VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1 VARIABLE_2: 0.0
********** f = VARIABLE_1 and VARIABLE_2
VARIABLE_1 VARIABLE_2: 0.0
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = VARIABLE_2 in VARIABLE_0 set VARIABLE_1 to the FUNCTION_CALL_4 of VARIABLE_1 and
VARIABLE_0 VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = NUMBER then for each VARIABLE_3 in
NUMBER for VARIABLE: 0.0
********** f = the VARIABLE_2
VARIABLE_2: 0.0
********** f = plus VARIABLE_3
+ VARIABLE_3: 0.0
********** f = VARIABLE_3
VARIABLE_3: -0.10178269430994236
VARIABLE_3 VARIABLE_3: -3.4339872044851463
VARIABLE_3 index: -3.4339872044851463
VARIABLE_3 VARIABLE_6: -3.4339872044851463
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_0 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = for each VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end
for VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = set the VARIABLE_2 to NUMBER then for each VARIABLE_3
VARIABLE_2 = NUMBER for: 0.0
********** f = set the VARIABLE_2 to
VARIABLE_2 =: 0.0
********** f = in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = for loop and the return
return VARIABLE_1: 0.0
********** f = the for loop and the return VARIABLE_2
return VARIABLE_1: 0.0
********** f = set the VARIABLE_2 to NUMBER then for each VARIABLE_3 in
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = in
VARIABLE: -0.4274440148269396
in: -1.5260563034950494
VARIABLE in: -2.03688192726104
********** f = end the for
in: 0.0
********** f = loop and the return VARIABLE_2
return VARIABLE_1: 0.0
********** f = so set the VARIABLE_2 to NUMBER then
VARIABLE_2 = NUMBER: 0.0
********** f = NUMBER then for each VARIABLE_3
NUMBER for: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end
in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = for each
for: 0.0
********** f = loop and the
VARIABLE_1: 0.0
********** f = in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the for
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = NUMBER then for each
NUMBER for: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the for loop and the return
in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3 return VARIABLE_1: 0.0
********** f = the for loop and the return
return VARIABLE_1: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2
VARIABLE_0 VARIABLE_2 = VARIABLE_2: 0.0
********** f = so set the VARIABLE_2 to
VARIABLE_2 =: 0.0
********** f = VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = so set the VARIABLE_2 to NUMBER then for each VARIABLE_3
VARIABLE_2 = NUMBER for: 0.0
********** f = loop and the return
return VARIABLE_1: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the
in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the for
in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = for each VARIABLE_3
for: 0.0
********** f = return VARIABLE_2
return: -1.3862943611198906
return VARIABLE_2: -0.2876820724517809
********** f = for loop and the
VARIABLE_1: 0.0
********** f = for each VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the for
for VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = VARIABLE_3 in
VARIABLE: -0.40546510810816444
in: -1.5040773967762742
VARIABLE_3: -2.1972245773362196
********** f = VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the for
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = so set the VARIABLE_2 to NUMBER then for each
VARIABLE_2 = NUMBER for: 0.0
********** f = VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3
VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = to
=: -0.3677247801253174
+ =: -3.258096538021482
+: -3.258096538021482
VARIABLE: -2.5649493574615367
= FUNCTION_CALL_11: -2.5649493574615367
FUNCTION_CALL_4 VARIABLE_5: -3.258096538021482
FUNCTION_CALL_4: -3.258096538021482
********** f = set the VARIABLE_2 to NUMBER then
VARIABLE_2 = NUMBER: 0.0
********** f = so set the VARIABLE_2 to NUMBER then for each VARIABLE_3 in
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = set the VARIABLE_2 to NUMBER then for each
VARIABLE_2 = NUMBER for: 0.0
********** f = for each VARIABLE_3 in
for VARIABLE: -0.40546510810816444
for: -1.0986122886681098
********** f = the for loop and the
VARIABLE_1: 0.0
********** f = for each VARIABLE_3 in VARIABLE_0 VARIABLE_2 is equal to VARIABLE_2 plus VARIABLE_3 end the
for VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = for loop and the return VARIABLE_2
return VARIABLE_1: 0.0
********** f = equal to
=: -0.1431008436406733
FUNCTION_CALL_4 VARIABLE_5: -2.70805020110221
FUNCTION_CALL_4: -2.70805020110221
********** f = at index
index: -0.2006706954621511
VARIABLE_6 index: -2.3978952727983707
VARIABLE_0 index: -2.3978952727983707
********** f = by the value at index VARIABLE_2 in the VARIABLE_0 return
+ = VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
********** f = the value at index VARIABLE_2 in the VARIABLE_0
= VARIABLE_0 index VARIABLE_2: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2: -1.0986122886681098
VARIABLE_0 index VARIABLE_2: -1.0986122886681098
********** f = value at index VARIABLE_2 in the VARIABLE_0 return
= VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
********** f = the value at index VARIABLE_2 in the VARIABLE_0 return VARIABLE_1
VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
********** f = for VARIABLE_2
for VARIABLE: -1.9459101490553135
for: -0.15415067982725836
********** f = value at index VARIABLE_2 in the VARIABLE_0
VARIABLE_0 index VARIABLE_2: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2: -1.0986122886681098
********** f = by the value at index VARIABLE_2 in the VARIABLE_0
VARIABLE_0 index VARIABLE_2: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2: -1.0986122886681098
********** f = value at index VARIABLE_2 in the VARIABLE_0 return VARIABLE_1
+ = VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
********** f = NUMBER for VARIABLE_2 in
NUMBER for VARIABLE in: 0.0
********** f = NUMBER for VARIABLE_2
NUMBER for VARIABLE: -0.6931471805599453
for: -0.6931471805599453
********** f = the value at index VARIABLE_2 in the VARIABLE_0 return
= VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2 return: -1.0986122886681098
********** f = to NUMBER for VARIABLE_2
= NUMBER for VARIABLE: 0.0
********** f = at index VARIABLE_2 in the
index VARIABLE_2: 0.0
********** f = at index VARIABLE_2 in
index VARIABLE_2: 0.0
********** f = VARIABLE_2 in
VARIABLE_2: -1.2992829841302609
VARIABLE in: -1.2992829841302609
VARIABLE: -0.7884573603642702
********** f = for VARIABLE_2 in
for VARIABLE in: -0.8472978603872037
for VARIABLE: -0.5596157879354228
********** f = to NUMBER for VARIABLE_2 in
= NUMBER for VARIABLE in: 0.0
********** f = NUMBER to NUMBER inclusive
NUMBER NUMBER: 0.0
********** f = to NUMBER for
= NUMBER for: 0.0
********** f = to NUMBER for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to NUMBER inclusive
VARIABLE_1 = NUMBER for VARIABLE in FUNCTION_CALL_4 NUMBER NUMBER: 0.0
********** f = by the value at index VARIABLE_2 in the VARIABLE_0 return VARIABLE_1
VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
= VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
+ = VARIABLE_0 index VARIABLE_2 return VARIABLE_1: -1.0986122886681098
********** f = VARIABLE_2 in the
VARIABLE_2: -0.6931471805599453
VARIABLE: -1.3862943611198906
VARIABLE in: -1.3862943611198906
********** f = FUNCTION_CALL_4 NUMBER to NUMBER inclusive
FUNCTION_CALL_4 NUMBER NUMBER: 0.0
********** f = to NUMBER
= NUMBER: -0.5108256237659907
NUMBER: -0.916290731874155
********** f = to NUMBER for VARIABLE_2 in the FUNCTION_CALL_4
VARIABLE_1 = NUMBER for VARIABLE in FUNCTION_CALL_4: 0.0
********** f = to NUMBER for VARIABLE_2 in the
VARIABLE_1 = NUMBER for VARIABLE in: 0.0
********** f = at index VARIABLE_2
index VARIABLE_2: 0.0
********** f = VARIABLE_0 add
VARIABLE_0: -0.6931471805599453
in VARIABLE_0: -0.6931471805599453
********** f = for VARIABLE_2 in VARIABLE_0
for VARIABLE in VARIABLE_0: 0.0
********** f = VARIABLE_1 end for return
return VARIABLE_1: 0.0
********** f = VARIABLE_2 to VARIABLE_1 end for return VARIABLE_1
VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: 0.0
********** f = add VARIABLE_2 to VARIABLE_1 end for return VARIABLE_1
VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: 0.0
********** f = VARIABLE_0 add VARIABLE_2 to VARIABLE_1 end for return VARIABLE_1
VARIABLE_0 VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: -0.6931471805599453
in VARIABLE_0 VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_2 to
+ = VARIABLE_2: -0.6931471805599453
VARIABLE_2 =: -0.6931471805599453
********** f = end for return
return: 0.0
********** f = VARIABLE_2 in VARIABLE_0 add
VARIABLE in VARIABLE_0: 0.0
********** f = VARIABLE_2 to VARIABLE_1 end for return
+ = VARIABLE_2 return VARIABLE_1: 0.0
********** f = in VARIABLE_0 add VARIABLE_2 to VARIABLE_1 end for return VARIABLE_1
VARIABLE in VARIABLE_0 VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: 0.0
********** f = add VARIABLE_2
VARIABLE_2: 0.0
********** f = in VARIABLE_0 add
VARIABLE in VARIABLE_0: 0.0
********** f = add VARIABLE_2 to
+ = VARIABLE_2: 0.0
********** f = VARIABLE_2 in VARIABLE_0 add VARIABLE_2 to VARIABLE_1 end for return VARIABLE_1
VARIABLE in VARIABLE_0 VARIABLE_1 + = VARIABLE_2 return VARIABLE_1: 0.0
********** f = for VARIABLE_2 in VARIABLE_0 add
for VARIABLE in VARIABLE_0: 0.0
********** f = add VARIABLE_2 to VARIABLE_1 end for return
+ = VARIABLE_2 return VARIABLE_1: 0.0
********** f = a for loop each VARIABLE_2
for: 0.0
********** f = NUMBER then do a for loop each
NUMBER for: 0.0
********** f = end for loop
in: 0.0
********** f = a for loop each VARIABLE_2 in
for VARIABLE: 0.0
********** f = for loop each VARIABLE_2
for: 0.0
********** f = each VARIABLE_2 in
VARIABLE: 0.0
********** f = do a for loop each VARIABLE_2
for: 0.0
********** f = NUMBER then do a for loop
NUMBER for: 0.0
********** f = NUMBER then do a for loop each VARIABLE_2
NUMBER for: 0.0
********** f = do a for loop each VARIABLE_2 in
for VARIABLE: 0.0
********** f = NUMBER then do a
NUMBER: 0.0
********** f = NUMBER then do a for loop each VARIABLE_2 in
NUMBER for VARIABLE: 0.0
********** f = do a for loop
for: 0.0
********** f = a for loop each
for: 0.0
********** f = end for loop and
in: 0.0
********** f = NUMBER then do
NUMBER: 0.0
********** f = do a for loop each
for: 0.0
********** f = a for loop
for: 0.0
********** f = for loop
for: 0.0
********** f = for loop each
for: 0.0
********** f = NUMBER then do a for
NUMBER for: 0.0
********** f = for loop each VARIABLE_2 in
for VARIABLE: 0.0
********** f = loop each VARIABLE_2 in
VARIABLE: 0.0
********** f = to VARIABLE_1
VARIABLE_1 +: -1.3862943611198906
VARIABLE_1: -0.2876820724517809
********** f = a for
for: 0.0
********** f = do a for
for: 0.0
********** f = FUNCTION_CALL_3
FUNCTION_CALL_3: -0.10536051565782628
in FUNCTION_CALL_3: -2.3025850929940455
********** f = return FUNCTION_CALL_3
return FUNCTION_CALL_3: 0.0
********** f = VARIABLE_0 using the plus function
VARIABLE_0 VARIABLE_1: 0.0
********** f = return FUNCTION_CALL_3 VARIABLE_0 using the plus function
return FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 using the plus function
FUNCTION_CALL_3 VARIABLE_0 VARIABLE_1: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return VARIABLE_2
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return VARIABLE_2: 0.0
********** f = VARIABLE_1 close
= VARIABLE_1: -1.3862943611198906
VARIABLE_1: -0.2876820724517809
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = create a variable VARIABLE_2 equal to NUMBER and for VARIABLE_1 in VARIABLE_0
VARIABLE_2 = NUMBER for VARIABLE in VARIABLE_0: 0.0
********** f = VARIABLE_1 close parentheses and then return
= VARIABLE_1 return: -0.6931471805599453
VARIABLE_1 return: -0.6931471805599453
********** f = open parentheses VARIABLE_2 plus equal
VARIABLE_2 +: -0.6931471805599453
VARIABLE_2 + =: -0.6931471805599453
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then
VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = parentheses and then return VARIABLE_2
return VARIABLE_2: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return: 0.0
********** f = VARIABLE_1 in VARIABLE_0
in VARIABLE_0: 0.0
********** f = and then return VARIABLE_2
return VARIABLE_2: 0.0
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return
VARIABLE_2 + = VARIABLE_1 return: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return
VARIABLE_2 + = VARIABLE_1 return: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return VARIABLE_2
VARIABLE_2 + = VARIABLE_1 return VARIABLE_2: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 close parentheses and then
= VARIABLE_1: -0.6931471805599453
VARIABLE_1: -0.6931471805599453
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and
VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = in VARIABLE_0 open
in VARIABLE_0: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal
in VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
in VARIABLE_0 VARIABLE_2 + =: -0.6931471805599453
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses
VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = close parentheses and then return VARIABLE_2
return VARIABLE_2: 0.0
********** f = VARIABLE_1 close parentheses and then return VARIABLE_2
= VARIABLE_1 return VARIABLE_2: -0.6931471805599453
VARIABLE_1 return VARIABLE_2: -0.6931471805599453
********** f = a variable VARIABLE_2 equal to NUMBER and for
VARIABLE_2 = NUMBER for: 0.0
********** f = create a variable VARIABLE_2 equal to NUMBER and for VARIABLE_1
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal
VARIABLE_0 VARIABLE_2 + =: -0.6931471805599453
VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal
in VARIABLE_0 VARIABLE_2 + =: -0.6931471805599453
in VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
********** f = create
VARIABLE: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return VARIABLE_2
VARIABLE_2 + = VARIABLE_1 return VARIABLE_2: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = parentheses VARIABLE_2 plus equal
VARIABLE_2 + =: -0.6931471805599453
VARIABLE_2 +: -0.6931471805599453
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return: 0.0
********** f = VARIABLE_1 close parentheses
VARIABLE_1: -0.6931471805599453
= VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_1 in VARIABLE_0 open
in VARIABLE_0: 0.0
********** f = and for VARIABLE_1
for: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close
VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1
VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = NUMBER and for VARIABLE_1
NUMBER for: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1 close
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = create a variable VARIABLE_2 equal to NUMBER and for VARIABLE_1 in
VARIABLE_2 = NUMBER for VARIABLE in: 0.0
********** f = a variable VARIABLE_2 equal to NUMBER and for VARIABLE_1
VARIABLE_2 = NUMBER for: 0.0
********** f = parentheses and then return
return: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = parentheses VARIABLE_2 plus equal VARIABLE_1
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = a variable VARIABLE_2 equal to NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = create a variable VARIABLE_2 equal to NUMBER and for VARIABLE_1 in VARIABLE_0 open
VARIABLE_2 = NUMBER for VARIABLE in VARIABLE_0: 0.0
********** f = create a variable VARIABLE_2 equal to NUMBER and for
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = and then return
return: 0.0
********** f = VARIABLE_0 open
VARIABLE_0: 0.0
********** f = VARIABLE_1 close parentheses and
= VARIABLE_1: -0.6931471805599453
VARIABLE_1: -0.6931471805599453
********** f = NUMBER and for
NUMBER for: 0.0
********** f = for VARIABLE_1
for: -0.45198512374305727
for VARIABLE_1: -1.7047480922384253
for VARIABLE: -2.3978952727983707
for VARIABLE in: -2.3978952727983707
********** f = and for
for: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = a variable VARIABLE_2 equal to NUMBER and
VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_2 equal
VARIABLE_2: -0.40546510810816444
NUMBER VARIABLE_2: -1.791759469228055
VARIABLE_2 =: -1.791759469228055
********** f = a variable VARIABLE_2 equal to
VARIABLE_2 =: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1 close
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return VARIABLE_2
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return VARIABLE_2: 0.0
********** f = close parentheses and then return
return: 0.0
********** f = VARIABLE_1 in
in: -1.0986122886681098
VARIABLE: -0.6931471805599453
VARIABLE_1: -1.791759469228055
********** f = then return VARIABLE_2
return VARIABLE_2: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1: 0.0
********** f = in VARIABLE_0 open parentheses VARIABLE_2 plus equal VARIABLE_1 close parentheses and then return VARIABLE_2
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 return VARIABLE_2: 0.0
********** f = open parentheses VARIABLE_2 plus equal VARIABLE_1
VARIABLE_2 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 equals VARIABLE_1 plus
VARIABLE_1 = VARIABLE_1 +: 0.0
********** f = VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2
VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = for VARIABLE_2 in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end
for VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals
VARIABLE_0 VARIABLE_1 =: 0.0
********** f = equals VARIABLE_1 plus VARIABLE_2
= VARIABLE_1 + VARIABLE_2: 0.0
********** f = for return VARIABLE_1
return VARIABLE_1: 0.0
********** f = in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_2 in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for return
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2 return: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for
in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for return
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2 return: 0.0
********** f = VARIABLE_2 in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_1
VARIABLE_0 VARIABLE_1: 0.0
********** f = for VARIABLE_2 in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for
for VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end
in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = equals VARIABLE_1
= VARIABLE_1: 0.0
********** f = VARIABLE_2 in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for return
in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2 return: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2
VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for return VARIABLE_1
in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2 return VARIABLE_1: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus
VARIABLE_0 VARIABLE_1 = VARIABLE_1 +: 0.0
********** f = for return
return: 0.0
********** f = VARIABLE_1 equals VARIABLE_1
VARIABLE_1 = VARIABLE_1: 0.0
********** f = in VARIABLE_0 VARIABLE_1 equals VARIABLE_1 plus VARIABLE_2 end for
VARIABLE in VARIABLE_0 VARIABLE_1 = VARIABLE_1 + VARIABLE_2: 0.0
********** f = equals VARIABLE_1 plus
= VARIABLE_1 +: 0.0
********** f = VARIABLE_0 VARIABLE_1 equals VARIABLE_1
VARIABLE_0 VARIABLE_1 = VARIABLE_1: 0.0
********** f = add that value
+: 0.0
********** f = that for each of the NUMBER items
in: 0.0
********** f = value to
=: 0.0
********** f = list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do that for each of
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = add
+: 0.0
********** f = NUMBER items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = that for each of the NUMBER
in: 0.0
********** f = value do that for
in: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value do that for
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that for each of the NUMBER items in the list
in: 0.0
********** f = that for each of the NUMBER items in the
in: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value do that for each of
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = value do that for each of the NUMBER items in the
in: 0.0
********** f = value do that for each of the NUMBER items in the list
in: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do that for each
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_0 as
VARIABLE_0: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value do
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = initialize a variable VARIABLE_0 as NUMBER for each
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = initialize
VARIABLE: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that for each of the
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that
in: 0.0
********** f = do that for each of the NUMBER
in: 0.0
********** f = add that
+: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that for each of the NUMBER items in
in: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0 value do that
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that for each of the NUMBER
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_2 in the list VARIABLE_1 add that value to the VARIABLE_0 value
VARIABLE_1 VARIABLE_0 + = VARIABLE_2: 0.0
********** f = add that value to
+ =: 0.0
********** f = VARIABLE_2 in the list VARIABLE_1 add that value to the VARIABLE_0 value do that
in VARIABLE_1 VARIABLE_0 + = VARIABLE_2: 0.0
********** f = VARIABLE_2 in the list VARIABLE_1 add that value to the VARIABLE_0
VARIABLE_1 VARIABLE_0 + = VARIABLE_2: 0.0
********** f = each of the NUMBER items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value do that for each
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = of the NUMBER items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = that for each
in: 0.0
********** f = that for each of the NUMBER items in the list
in: 0.0
********** f = VARIABLE_2 in the list
VARIABLE_2: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that for each of
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = value do that
in: 0.0
********** f = as NUMBER
NUMBER: 0.0
********** f = the list VARIABLE_1 add that value to the VARIABLE_0 value do that
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do that for each of the
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = that for each of the NUMBER items in
in: 0.0
********** f = that for each of the
in: 0.0
********** f = do that for
in: 0.0
********** f = a variable VARIABLE_0 as NUMBER for each
VARIABLE_0 = NUMBER for: 0.0
********** f = for each of the NUMBER items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = VARIABLE_2 in the list VARIABLE_1 add that value to the VARIABLE_0 value do that for
in VARIABLE_1 VARIABLE_0 + = VARIABLE_2: 0.0
********** f = NUMBER for each
NUMBER for: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do that
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = value do that for each
in: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0 value do that for
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that for
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that for each of the NUMBER items in the
in: 0.0
********** f = list VARIABLE_1 add that value to the VARIABLE_0
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that for each
in: 0.0
********** f = VARIABLE_0 value do
VARIABLE_0: 0.0
********** f = the NUMBER items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = do that for each of
in: 0.0
********** f = that for
in: 0.0
********** f = value do that for each of the NUMBER
in: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0 value do
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = items in the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = VARIABLE_2 in the list VARIABLE_1 add that value to the VARIABLE_0 value do
VARIABLE_1 VARIABLE_0 + = VARIABLE_2: 0.0
********** f = a variable VARIABLE_0
VARIABLE_0 =: 0.0
********** f = a variable VARIABLE_0 as NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = that for each of
in: 0.0
********** f = value do that for each of the NUMBER items in
in: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0 value do that for
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = that value to
=: 0.0
********** f = VARIABLE_1 add that value to the VARIABLE_0 value do that for each
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = do that for each of the NUMBER items
in: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0 value do that for each
in VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = value do that for each of the NUMBER items
in: 0.0
********** f = in the list VARIABLE_1 add that value to the VARIABLE_0 value
VARIABLE_1 VARIABLE_0 + =: 0.0
********** f = VARIABLE_0 value
VARIABLE_0: 0.0
********** f = value do that for each of
in: 0.0
********** f = value do that for each of the
in: 0.0
********** f = the list and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = as NUMBER for each
NUMBER for: 0.0
********** f = and return the VARIABLE_0 
return VARIABLE_0: 0.0
********** f = a variable VARIABLE_0 as
VARIABLE_0 =: 0.0
********** f = do that for each of the
in: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3 in
VARIABLE_2 = NUMBER for VARIABLE in: 0.0
********** f = increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_2 + = VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = increment VARIABLE_2 by the value obtained from
VARIABLE_2 + =: 0.0
********** f = obtained from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_1 index VARIABLE_3: 0.0
********** f = the VARIABLE_0
VARIABLE_0: 0.0
********** f = by the value
=: 0.0
********** f = in VARIABLE_1
VARIABLE_1: 0.0
********** f = looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = value obtained from looking up VARIABLE_3 in
index VARIABLE_3: 0.0
********** f = VARIABLE_2 to NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_0 increment VARIABLE_2
VARIABLE_0 VARIABLE_2 +: 0.0
********** f = value obtained from looking up
index: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2 by the
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2
VARIABLE_2 = NUMBER for VARIABLE in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = looking up
index: 0.0
********** f = from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = VARIABLE_3 in the
in: -1.0986122886681098
VARIABLE: -0.40546510810816444
********** f = in the VARIABLE_0 increment VARIABLE_2 by the value obtained
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by the
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = the value obtained
=: 0.0
********** f = to NUMBER for each
= NUMBER for: 0.0
********** f = increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_2 + = VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = in the VARIABLE_0
in VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = looking up VARIABLE_3
index VARIABLE_3: 0.0
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by
in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = by the
=: 0.0
********** f = value obtained from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_1 index VARIABLE_3: 0.0
********** f = by the value obtained
=: 0.0
********** f = value obtained from looking up VARIABLE_3
index VARIABLE_3: 0.0
********** f = increment VARIABLE_2 by the value obtained
VARIABLE_2 + =: 0.0
********** f = the value obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
= VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = from looking up VARIABLE_3 in
index VARIABLE_3: 0.0
********** f = value obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = value obtained from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = VARIABLE_3 in the VARIABLE_0
in VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by the value
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = increment VARIABLE_2 by the value
VARIABLE_2 + =: 0.0
********** f = obtained from looking
index: 0.0
********** f = the value obtained from looking up VARIABLE_3 in VARIABLE_1
= VARIABLE_1 index VARIABLE_3: 0.0
********** f = from looking
index: 0.0
********** f = increment VARIABLE_2 by the
VARIABLE_2 + =: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value obtained from
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = VARIABLE_2 to NUMBER for each
VARIABLE_2 = NUMBER for: 0.0
********** f = NUMBER for each VARIABLE_3
NUMBER for: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by
VARIABLE_2 = NUMBER for VARIABLE in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = VARIABLE_2 to NUMBER for each VARIABLE_3
VARIABLE_2 = NUMBER for: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = in the
in: -2.3025850929940455
VARIABLE: -0.35667494393873245
VARIABLE in: -1.6094379124341003
********** f = the VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by the value
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = up VARIABLE_3
VARIABLE_3: 0.0
********** f = VARIABLE_2 by
VARIABLE_2: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2 by the value
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by the value obtained from
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = from looking up VARIABLE_3
index VARIABLE_3: 0.0
********** f = increment VARIABLE_2 by
VARIABLE_2 +: -0.6931471805599453
VARIABLE_2 + +: -0.6931471805599453
********** f = obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = increment
+: -0.40546510810816444
+ +: -1.791759469228055
+ =: -1.791759469228055
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by the value obtained from
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = by the value obtained from
=: 0.0
********** f = looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2 by the value obtained
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3 in the
VARIABLE_2 = NUMBER for VARIABLE in: 0.0
********** f = the value obtained from looking up VARIABLE_3 in VARIABLE_1 return
= VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3 in the VARIABLE_0
VARIABLE_2 = NUMBER for VARIABLE in VARIABLE_0: 0.0
********** f = initialize VARIABLE_2 to NUMBER for each VARIABLE_3
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = value obtained from looking
index: 0.0
********** f = obtained from looking up
index: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = the value obtained from
=: 0.0
********** f = the value
=: 0.0
********** f = to NUMBER for each VARIABLE_3
= NUMBER for: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2
VARIABLE_0 VARIABLE_2 +: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by the value obtained
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = increment VARIABLE_2
VARIABLE_2 +: -0.6931471805599453
VARIABLE_2 + +: -0.6931471805599453
********** f = obtained from looking up VARIABLE_3
index VARIABLE_3: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by
VARIABLE_0 VARIABLE_2 +: 0.0
********** f = obtained from looking up VARIABLE_3 in VARIABLE_1 return
VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2 by
in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = by the value obtained from looking up VARIABLE_3 in VARIABLE_1
= VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value obtained
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return VARIABLE_2
= VARIABLE_1 index VARIABLE_3 return VARIABLE_2: 0.0
********** f = by the value obtained from looking up VARIABLE_3 in VARIABLE_1 return
= VARIABLE_1 index VARIABLE_3 return: 0.0
********** f = looking up VARIABLE_3 in
index VARIABLE_3: 0.0
********** f = looking
index: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = looking up VARIABLE_3 in VARIABLE_1
VARIABLE_1 index VARIABLE_3: 0.0
********** f = obtained from looking up VARIABLE_3 in
index VARIABLE_3: 0.0
********** f = from looking up
index: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2
in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_0 increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = in the VARIABLE_0 increment VARIABLE_2 by the value obtained from
in VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = up VARIABLE_3 in
VARIABLE_3: 0.0
********** f = VARIABLE_3 in the VARIABLE_0 increment VARIABLE_2
in VARIABLE_0 VARIABLE_2 +: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by
VARIABLE_0 VARIABLE_2 +: 0.0
********** f = the VARIABLE_0 increment VARIABLE_2 by the
VARIABLE_0 VARIABLE_2 + =: 0.0
********** f = increment VARIABLE_2 by the value obtained from looking up VARIABLE_3 in VARIABLE_1
VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_4
VARIABLE_4: -0.2231435513142097
FUNCTION_CALL_11 VARIABLE_4: -2.3025850929940455
VARIABLE_2 VARIABLE_4: -2.3025850929940455
********** f = look up VARIABLE_4 in VARIABLE_1 and store this in a variable
= VARIABLE_1: 0.0
********** f = in VARIABLE_1 and store this
VARIABLE_1: 0.0
********** f = in VARIABLE_0 look up VARIABLE_4
VARIABLE_0: 0.0
********** f = in a variable named VARIABLE_3
VARIABLE_3 =: 0.0
********** f = and VARIABLE_3 together
VARIABLE_3: 0.0
********** f = VARIABLE_1 and store this in
VARIABLE_1: 0.0
********** f = in VARIABLE_2
= VARIABLE_2: -1.3862943611198906
VARIABLE_2: -0.6931471805599453
VARIABLE_4 VARIABLE_2: -1.3862943611198906
********** f = in VARIABLE_0 look up VARIABLE_4 in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_0 VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_0 look up VARIABLE_4 in
VARIABLE_0: 0.0
********** f = and store this in a variable named VARIABLE_3
VARIABLE_3 =: 0.0
********** f = VARIABLE_4 in VARIABLE_1 and store this
VARIABLE_1: 0.0
********** f = store that in VARIABLE_2
= VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_4 in
VARIABLE_4: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1 and store
VARIABLE_1: 0.0
********** f = VARIABLE_4 in VARIABLE_1 and store
VARIABLE_1: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and store
VARIABLE_1: 0.0
********** f = in VARIABLE_1 and store
VARIABLE_1: 0.0
********** f = together and store that in VARIABLE_2
= VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_4 in VARIABLE_1
VARIABLE_1: 0.0
********** f = in VARIABLE_0 look
VARIABLE_0: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and
VARIABLE_1: 0.0
********** f = and VARIABLE_3 together and
VARIABLE_3: 0.0
********** f = in VARIABLE_0 look up
VARIABLE_0: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and store this in a variable
= VARIABLE_1: 0.0
********** f = VARIABLE_1 and store this
VARIABLE_1: 0.0
********** f = add VARIABLE_2 and VARIABLE_3 together and store that in VARIABLE_2
VARIABLE_2 = VARIABLE_2 + VARIABLE_3: 0.0
********** f = and VARIABLE_3 together and store that
VARIABLE_3: 0.0
********** f = that in VARIABLE_2
VARIABLE_2: -0.6931471805599453
= VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_0 look up VARIABLE_4 in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_0 VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_1 and store
VARIABLE_1: -0.6931471805599453
=: -0.6931471805599453
********** f = VARIABLE_4 in VARIABLE_1 and
VARIABLE_1: 0.0
********** f = VARIABLE_4 in VARIABLE_1 and store this in
VARIABLE_1: 0.0
********** f = this in a variable named VARIABLE_3
VARIABLE_3 =: 0.0
********** f = and VARIABLE_3
VARIABLE_3: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and store this in
VARIABLE_1: 0.0
********** f = in VARIABLE_1 and store this in
VARIABLE_1: 0.0
********** f = a variable named VARIABLE_3
VARIABLE_3 =: 0.0
********** f = for all
for: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1 and store this
VARIABLE_1: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_1 and store this in a variable
= VARIABLE_1: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_3 = VARIABLE_1: 0.0
********** f = named VARIABLE_3
VARIABLE_3: 0.0
********** f = up VARIABLE_4 in VARIABLE_1 and store this
VARIABLE_1: 0.0
********** f = VARIABLE_0 look
VARIABLE_0: 0.0
********** f = and store that in VARIABLE_2
VARIABLE_2: -0.6931471805599453
= VARIABLE_2: -0.6931471805599453
********** f = named VARIABLE_2
VARIABLE_2: 0.0
********** f = in VARIABLE_1 and store this in a variable
= VARIABLE_1: 0.0
********** f = and VARIABLE_3 together and store that in
VARIABLE_3: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1 and
VARIABLE_1: 0.0
********** f = VARIABLE_0 look up VARIABLE_4
VARIABLE_0: 0.0
********** f = and VARIABLE_3 together and store
VARIABLE_3: 0.0
********** f = in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_3 = VARIABLE_1: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1 and store this in
VARIABLE_1: 0.0
********** f = up VARIABLE_4 in VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_4 in VARIABLE_1 and store this in a variable
= VARIABLE_1: 0.0
********** f = VARIABLE_0 look up
VARIABLE_0: 0.0
********** f = in VARIABLE_0 look up VARIABLE_4 in
VARIABLE_0: 0.0
********** f = VARIABLE_4 in VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_1 and store this in a variable named VARIABLE_3
VARIABLE_3 = VARIABLE_1: 0.0
********** f = in VARIABLE_1 and
VARIABLE_1: 0.0
********** f = look up VARIABLE_4 in VARIABLE_1
VARIABLE_1: 0.0
********** f = store this in a variable named VARIABLE_3
VARIABLE_3 =: 0.0
********** f = return the
return: -0.2231435513142097
return VARIABLE_2: -1.6094379124341003
********** f = end the for loop
in: -0.13353139262452263
for: -2.0794415416798357
********** f = then end
in: 0.0
********** f = is equal to the VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key VARIABLE_3 then
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = the VARIABLE_2 is equal to
=: 0.0
********** f = VARIABLE_2 equals NUMBER for each VARIABLE_3
VARIABLE_2 = NUMBER for: 0.0
********** f = the VARIABLE_2 is equal to the VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = then end the for loop
in: 0.0
********** f = VARIABLE_0 the VARIABLE_2 is equal
VARIABLE_0: 0.0
********** f = VARIABLE_2 equals NUMBER for each VARIABLE_3 in
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = is equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key VARIABLE_3
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = plus the value of the VARIABLE_1 at the key VARIABLE_3
+ VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_2 is equal to the VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = the VARIABLE_0 the VARIABLE_2
VARIABLE_0: 0.0
********** f = equals NUMBER for each VARIABLE_3 in the
= NUMBER for VARIABLE: 0.0
********** f = and return the VARIABLE_2
return VARIABLE_2: 0.0
********** f = VARIABLE_2 equals NUMBER for each
VARIABLE_2 = NUMBER for: 0.0
********** f = is equal to
=: -0.3364722366212129
==: -1.252762968495368
********** f = the value of the VARIABLE_1 at the key VARIABLE_3
VARIABLE_1 index VARIABLE_3: 0.0
********** f = the VARIABLE_2 is equal to the VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = to the VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = then end the for
in: 0.0
********** f = to the VARIABLE_2 plus the value of the VARIABLE_1 at the key VARIABLE_3 then
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = the value of the VARIABLE_1 at the key VARIABLE_3 then
VARIABLE_1 index VARIABLE_3: 0.0
********** f = the value of the VARIABLE_1 at the key
VARIABLE_1 index: 0.0
********** f = for loop and return the VARIABLE_2
return VARIABLE_2: 0.0
********** f = equals NUMBER for each VARIABLE_3
= NUMBER for: 0.0
********** f = VARIABLE_0 the VARIABLE_2 is equal to the VARIABLE_2
VARIABLE_0 VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to the
=: 0.0
********** f = loop and return the VARIABLE_2
return VARIABLE_2: 0.0
********** f = for each VARIABLE_3 in the
for VARIABLE: -0.40546510810816444
for: -1.0986122886681098
********** f = VARIABLE_0 the VARIABLE_2
VARIABLE_0: 0.0
********** f = is equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = VARIABLE_3 then
VARIABLE_3: 0.0
********** f = the for loop and return the VARIABLE_2
return VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to the VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = VARIABLE_2 is equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = plus the value of the VARIABLE_1 at the key VARIABLE_3 then
+ VARIABLE_1 index VARIABLE_3: 0.0
********** f = equal to the
=: 0.0
********** f = the VARIABLE_0 the
VARIABLE_0: 0.0
********** f = the VARIABLE_0 the VARIABLE_2 is equal to the VARIABLE_2
VARIABLE_0 VARIABLE_2 = VARIABLE_2: 0.0
********** f = then end the
in: 0.0
********** f = equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = VARIABLE_2 equals NUMBER
VARIABLE_2 = NUMBER: -0.2231435513142097
NUMBER: -1.6094379124341003
********** f = VARIABLE_2 is equal to
=: -1.3862943611198906
VARIABLE_2 =: -0.6931471805599453
VARIABLE_2 ==: -1.3862943611198906
********** f = the VARIABLE_2 is equal to the
=: 0.0
********** f = VARIABLE_0 the
VARIABLE_0: 0.0
********** f = equal to the VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = to the VARIABLE_2 plus the value of the VARIABLE_1 at the key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = equals NUMBER for each VARIABLE_3 in
= NUMBER for VARIABLE: 0.0
********** f = equal to the VARIABLE_2 plus the value of the VARIABLE_1 at the key VARIABLE_3
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = NUMBER for each VARIABLE_3 in
NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 the VARIABLE_2 is equal to the VARIABLE_2 plus
VARIABLE_0 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = the VARIABLE_0 the VARIABLE_2 is
VARIABLE_0: 0.0
********** f = VARIABLE_0 the VARIABLE_2 is
VARIABLE_0: 0.0
********** f = is equal to the VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = the VARIABLE_0 the VARIABLE_2 is equal
VARIABLE_0: 0.0
********** f = equal to the VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = NUMBER for each VARIABLE_3 in the
NUMBER for VARIABLE: 0.0
********** f = equals NUMBER for each
= NUMBER for: 0.0
********** f = VARIABLE_2 equals NUMBER for each VARIABLE_3 in the
VARIABLE_2 = NUMBER for VARIABLE: 0.0
********** f = to the VARIABLE_2 plus the value of the VARIABLE_1 at the key VARIABLE_3
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = to the
=: -0.2231435513142097
= FUNCTION_CALL_11: -1.6094379124341003
********** f = equals NUMBER
= NUMBER: -0.2876820724517809
== NUMBER: -2.4849066497880004
NUMBER: -1.791759469228055
********** f = is equal to the
=: 0.0
********** f = plus the value of the VARIABLE_1 at the key
+ VARIABLE_1 index: 0.0
********** f = the VARIABLE_0 the VARIABLE_2 is equal to the VARIABLE_2 plus
VARIABLE_0 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = to the VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = equal NUMBER for
NUMBER for: 0.0
********** f = item VARIABLE_3 in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end for
VARIABLE in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = item VARIABLE_3 in
VARIABLE: 0.0
********** f = for item VARIABLE_3
for VARIABLE: 0.0
********** f = add VARIABLE_1 of VARIABLE_3 to
+ = VARIABLE_1 index VARIABLE_3: 0.0
********** f = of VARIABLE_3
index VARIABLE_3: -0.6931471805599453
VARIABLE_3: -0.6931471805599453
********** f = equal NUMBER for item
NUMBER for VARIABLE: 0.0
********** f = VARIABLE_3 in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end for
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = item VARIABLE_3
VARIABLE: 0.0
********** f = VARIABLE_3 in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end for
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0
VARIABLE_0: -0.2876820724517809
in VARIABLE_0: -1.3862943611198906
********** f = VARIABLE_1 of VARIABLE_3 to
= VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_1 of VARIABLE_3
VARIABLE_1 index VARIABLE_3: 0.0
********** f = of
index: -1.2039728043259361
==: -0.916290731874155
VARIABLE_0 ==: -2.3025850929940455
VARIABLE_7 ==: -2.3025850929940455
VARIABLE_3 index: -2.3025850929940455
********** f = for item VARIABLE_3 in
for VARIABLE: 0.0
********** f = VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = item VARIABLE_3 in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end
VARIABLE in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = let's VARIABLE_2
VARIABLE_2: 0.0
********** f = NUMBER for item VARIABLE_3
NUMBER for VARIABLE: 0.0
********** f = VARIABLE_1 of
VARIABLE_1 index: 0.0
********** f = VARIABLE_3 in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2
VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = let's VARIABLE_2 equal
VARIABLE_2: 0.0
********** f = equal NUMBER for item VARIABLE_3 in
NUMBER for VARIABLE: 0.0
********** f = NUMBER for item VARIABLE_3 in
NUMBER for VARIABLE: 0.0
********** f = add VARIABLE_1 of VARIABLE_3 to VARIABLE_2
VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = in VARIABLE_0 add VARIABLE_1 of VARIABLE_3 to VARIABLE_2 end for
in VARIABLE_0 VARIABLE_2 + = VARIABLE_1 index VARIABLE_3: 0.0
********** f = equal NUMBER for item VARIABLE_3
NUMBER for VARIABLE: 0.0
********** f = FUNCTION_CALL_5 open
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5
= VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot
VARIABLE_2 = VARIABLE_1 .: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 close bracket
VARIABLE_3: 0.0
********** f = dot
.: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = bracket VARIABLE_3 close bracket
VARIABLE_3: 0.0
********** f = in VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end for
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = open bracket VARIABLE_3
VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end
in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = for return VARIABLE_2
return VARIABLE_2: 0.0
********** f = dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
. FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = for VARIABLE_3 in
for VARIABLE: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket
= VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3
VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = close bracket end for
in: 0.0
********** f = open bracket VARIABLE_3 close bracket
VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end for return
in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3 return: 0.0
********** f = VARIABLE_3 close
VARIABLE_3: 0.0
********** f = VARIABLE_1 dot
VARIABLE_1 .: 0.0
********** f = equals VARIABLE_1 dot
= VARIABLE_1 .: 0.0
********** f = FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 dot FUNCTION_CALL_5
VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = dot FUNCTION_CALL_5 open
. FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end for
in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 in VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket end for
VARIABLE in VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
= VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = dot FUNCTION_CALL_5 open bracket
. FUNCTION_CALL_5: 0.0
********** f = for VARIABLE_3
for: -0.6931471805599453
for VARIABLE_3: -0.6931471805599453
********** f = FUNCTION_CALL_5 open bracket VARIABLE_3 close
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = bracket VARIABLE_3
VARIABLE_3: 0.0
********** f = VARIABLE_2 equals VARIABLE_1
VARIABLE_2 = VARIABLE_1: 0.0
********** f = close bracket end
in: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3
= VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close
= VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 open bracket
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open
VARIABLE_0 VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close
VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 dot FUNCTION_CALL_5 open
VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = dot FUNCTION_CALL_5 open bracket VARIABLE_3
. FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = bracket end
in: 0.0
********** f = bracket VARIABLE_3 close
VARIABLE_3: 0.0
********** f = dot FUNCTION_CALL_5
. FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1
VARIABLE_0 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2
VARIABLE_0 VARIABLE_2: -0.2876820724517809
VARIABLE_0 VARIABLE_2 +: -1.3862943611198906
********** f = VARIABLE_1 dot FUNCTION_CALL_5 open bracket VARIABLE_3 close bracket
VARIABLE_1 . FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_2 equals VARIABLE_1 dot
VARIABLE_0 VARIABLE_2 = VARIABLE_1 .: 0.0
********** f = equals VARIABLE_1 dot FUNCTION_CALL_5 open
= VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 equals VARIABLE_1 dot FUNCTION_CALL_5
VARIABLE_2 = VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = dot FUNCTION_CALL_5 open bracket VARIABLE_3 close
. FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = bracket end for
in: 0.0
********** f = FUNCTION_CALL_5 open bracket VARIABLE_3
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 dot FUNCTION_CALL_5 open bracket
VARIABLE_1 . FUNCTION_CALL_5: 0.0
********** f = open bracket VARIABLE_3 close
VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_2 plus
VARIABLE_2 +: -0.2231435513142097
VARIABLE_2: -1.6094379124341003
********** f = is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
= VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than
VARIABLE_2 = NUMBER while VARIABLE_5 <: 0.0
********** f = NUMBER while VARIABLE_5 is less than
NUMBER while VARIABLE_5 <: 0.0
********** f = equal to VARIABLE_2 plus
= VARIABLE_2 +: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
= VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = the value given by VARIABLE_1 with
VARIABLE_1: 0.0
********** f = key
index: 0.0
********** f = with key VARIABLE_3
index VARIABLE_3: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3
< VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_3 is equal to the
VARIABLE_3 =: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than
= NUMBER while VARIABLE_5 <: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = the value given by VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5
VARIABLE_0 index VARIABLE_5: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4
while VARIABLE_5 < VARIABLE_4: 0.0
********** f = indexed at VARIABLE_5 and
index VARIABLE_5: 0.0
********** f = is equal to VARIABLE_2 plus the value given by VARIABLE_1 with
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is equal to
index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with
VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = VARIABLE_0 indexed
VARIABLE_0: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = equal to the VARIABLE_0 indexed at
= VARIABLE_0 index: 0.0
********** f = to NUMBER and VARIABLE_2 is equal
= NUMBER VARIABLE_2: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal to
index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = to NUMBER while VARIABLE_5
= NUMBER while VARIABLE_5: 0.0
********** f = and VARIABLE_2 is equal to
VARIABLE_2 =: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal
= NUMBER VARIABLE_2: 0.0
********** f = while VARIABLE_5 is
while VARIABLE_5: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_2 is equal to NUMBER while
VARIABLE_2 = NUMBER while: 0.0
********** f = is less than VARIABLE_4
< VARIABLE_4: 0.0
********** f = to the VARIABLE_0 indexed at
= VARIABLE_0 index: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed
VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is equal
index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
= NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = VARIABLE_0 VARIABLE_5 is
VARIABLE_0 VARIABLE_5: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while
VARIABLE_2 = NUMBER while: 0.0
********** f = NUMBER while VARIABLE_5
NUMBER while VARIABLE_5: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER while
= NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = at VARIABLE_5 and
index VARIABLE_5: 0.0
********** f = VARIABLE_2 plus the value given by VARIABLE_1
VARIABLE_2 + VARIABLE_1: 0.0
********** f = to the VARIABLE_0
= VARIABLE_0: -1.3862943611198906
VARIABLE_0: -0.2876820724517809
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = the value given by VARIABLE_1 with key VARIABLE_3
VARIABLE_1 index VARIABLE_3: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = equal to the FUNCTION_CALL_7 of
= FUNCTION_CALL_7: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1
VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = VARIABLE_5
VARIABLE_5: -0.1823215567939546
VARIABLE_1 VARIABLE_5: -1.791759469228055
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0
VARIABLE_3 = VARIABLE_0: 0.0
********** f = plus the value given by VARIABLE_1 with
+ VARIABLE_1: 0.0
********** f = equal to NUMBER
= NUMBER: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 =: 0.0
********** f = VARIABLE_2 is equal to NUMBER
VARIABLE_2 = NUMBER: -0.6931471805599453
VARIABLE_2 == NUMBER: -0.6931471805599453
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_5 and VARIABLE_2
VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to
VARIABLE_0 VARIABLE_5 =: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = is equal to VARIABLE_2 plus
= VARIABLE_2 +: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = NUMBER while VARIABLE_5 is
NUMBER while VARIABLE_5: 0.0
********** f = equal to the FUNCTION_CALL_7
= FUNCTION_CALL_7: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than
VARIABLE_2 = NUMBER while VARIABLE_5 <: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
< VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = and VARIABLE_2 is equal to NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = equal to VARIABLE_2 plus the value given by VARIABLE_1
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal
VARIABLE_0 VARIABLE_5: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7
VARIABLE_4 = FUNCTION_CALL_7: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with
VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = less than VARIABLE_4
< VARIABLE_4: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = is equal to the VARIABLE_0 indexed
= VARIABLE_0: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = equal to the FUNCTION_CALL_7 of the
= FUNCTION_CALL_7: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
< VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_5 and
VARIABLE_5: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = is less than
<: -0.5108256237659907
and: -1.6094379124341003
< VARIABLE_0: -1.6094379124341003
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of
VARIABLE_4 = FUNCTION_CALL_7: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal
VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = plus the value given by VARIABLE_1 with key VARIABLE_3
+ VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER
= NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = while VARIABLE_5 is less than
while VARIABLE_5 <: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the
VARIABLE_4 = FUNCTION_CALL_7: 0.0
********** f = FUNCTION_CALL_7 of
FUNCTION_CALL_7: -0.6931471805599453
index: -0.6931471805599453
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4
VARIABLE_5 < VARIABLE_4: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to
= NUMBER VARIABLE_2 =: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is
= NUMBER while VARIABLE_5: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = less than
<: -0.15415067982725836
and: -1.9459101490553135
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5
VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4
NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = equal to the VARIABLE_0
= VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 =: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER while
= NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is
< VARIABLE_4 VARIABLE_3: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key
VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = is equal to NUMBER while
= NUMBER while: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 =: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = equal to VARIABLE_2
= VARIABLE_2: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
= NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is
index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 =: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = is equal to the FUNCTION_CALL_7 of
= FUNCTION_CALL_7: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_4 is equal to the
VARIABLE_4 =: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is
VARIABLE_0 VARIABLE_5: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to
= NUMBER VARIABLE_2 =: 0.0
********** f = with key
index: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2
index VARIABLE_5 VARIABLE_2: 0.0
********** f = to VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
= VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to
VARIABLE_0 VARIABLE_5 =: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 =: 0.0
********** f = to the FUNCTION_CALL_7 of
= FUNCTION_CALL_7: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = to VARIABLE_2 plus the value given by VARIABLE_1 with key
= VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_4 is
VARIABLE_4: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = to VARIABLE_2
= VARIABLE_2: -1.3862943611198906
VARIABLE_2: -0.4700036292457356
=: -2.0794415416798357
********** f = equal to NUMBER while VARIABLE_5
= NUMBER while VARIABLE_5: 0.0
********** f = FUNCTION_CALL_7 of the
FUNCTION_CALL_7: -0.6931471805599453
index: -0.6931471805599453
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 <: 0.0
********** f = to NUMBER and VARIABLE_2
= NUMBER VARIABLE_2: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to
VARIABLE_5 VARIABLE_2 =: 0.0
********** f = VARIABLE_2 plus the value given by VARIABLE_1 with key VARIABLE_3
VARIABLE_2 + VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = is equal to VARIABLE_2 plus the value given by VARIABLE_1
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = VARIABLE_2 is
VARIABLE_2: -0.0953101798043249
VARIABLE_2 ==: -2.3978952727983707
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = at VARIABLE_5
index VARIABLE_5: 0.0
********** f = to the FUNCTION_CALL_7
= FUNCTION_CALL_7: 0.0
********** f = VARIABLE_5 is
VARIABLE_5: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
< VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and
VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the
= FUNCTION_CALL_7: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to
VARIABLE_0 VARIABLE_5 =: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the
VARIABLE_4 VARIABLE_3 =: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while
NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with
VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = equal to NUMBER while VARIABLE_5 is
= NUMBER while VARIABLE_5: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1
index VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = VARIABLE_3 is
VARIABLE_3: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = to NUMBER and
= NUMBER: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the
< VARIABLE_4 VARIABLE_3 =: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = is equal to NUMBER while VARIABLE_5
= NUMBER while VARIABLE_5: 0.0
********** f = is equal to the VARIABLE_0
= VARIABLE_0: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at
VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5
VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 <: 0.0
********** f = NUMBER and VARIABLE_2 is equal to
NUMBER VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 =: 0.0
********** f = at
index: 0.0
********** f = is equal to VARIABLE_2
= VARIABLE_2: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is
VARIABLE_5 VARIABLE_2: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_3 is
VARIABLE_4 VARIABLE_3: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than
= NUMBER while VARIABLE_5 <: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER
= NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = is equal to the VARIABLE_0 indexed at
= VARIABLE_0 index: 0.0
********** f = equal to NUMBER and
= NUMBER: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = is less than VARIABLE_4 VARIABLE_3 is equal
< VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = NUMBER and VARIABLE_2 is equal
NUMBER VARIABLE_2: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5
VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = VARIABLE_2 plus the value given by VARIABLE_1 with
VARIABLE_2 + VARIABLE_1: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = to NUMBER and VARIABLE_2 is
= NUMBER VARIABLE_2: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
while VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = indexed at VARIABLE_5
index VARIABLE_5: 0.0
********** f = NUMBER and VARIABLE_2
NUMBER VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key
VARIABLE_2 = VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = is equal to VARIABLE_2 plus the value given by VARIABLE_1 with key
= VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = equal to NUMBER while
= NUMBER while: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER
NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal
index VARIABLE_5 VARIABLE_2: 0.0
********** f = to the FUNCTION_CALL_7 of the
= FUNCTION_CALL_7: 0.0
********** f = while VARIABLE_5
while VARIABLE_5: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = less than VARIABLE_4 VARIABLE_3
< VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = to the VARIABLE_0 indexed
= VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_2 is
NUMBER VARIABLE_2: 0.0
********** f = to VARIABLE_2 plus the value given by VARIABLE_1
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = VARIABLE_2 plus the value given by VARIABLE_1 with key
VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the
< VARIABLE_4 VARIABLE_3 =: 0.0
********** f = to VARIABLE_2 plus the value given by VARIABLE_1 with
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal
< VARIABLE_4 VARIABLE_3: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and
VARIABLE_0 index VARIABLE_5: 0.0
********** f = VARIABLE_4 VARIABLE_3
VARIABLE_4 VARIABLE_3: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal
VARIABLE_0 VARIABLE_5: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = VARIABLE_5 is less than
VARIABLE_5 <: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is
index VARIABLE_5 VARIABLE_2: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_4 is equal
VARIABLE_4: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal
VARIABLE_4 VARIABLE_3: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1
VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = to VARIABLE_2 plus
= VARIABLE_2 +: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
= VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 =: 0.0
********** f = and VARIABLE_2 is
VARIABLE_2: 0.0
********** f = the value given by VARIABLE_1 with key
VARIABLE_1 index: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = VARIABLE_3 is equal
VARIABLE_3: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to
VARIABLE_0 index VARIABLE_5 VARIABLE_2 =: 0.0
********** f = VARIABLE_4 is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is
VARIABLE_4 = FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5: 0.0
********** f = to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 <: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus
index VARIABLE_5 VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 indexed at
VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_7
FUNCTION_CALL_7: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1
VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = equal to NUMBER and VARIABLE_2
= NUMBER VARIABLE_2: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = is equal to NUMBER
= NUMBER: -1.0986122886681098
== NUMBER: -0.40546510810816444
********** f = to NUMBER while
= NUMBER while: 0.0
********** f = plus the value given by VARIABLE_1 with key
+ VARIABLE_1 index: 0.0
********** f = is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the
= NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3 =: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
< VARIABLE_4 VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = is equal to the FUNCTION_CALL_7
= FUNCTION_CALL_7: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and
VARIABLE_3 = VARIABLE_0 index VARIABLE_5: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = equal to NUMBER and VARIABLE_2 is
= NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while: 0.0
********** f = equal to VARIABLE_2 plus the value given by VARIABLE_1 with
= VARIABLE_2 + VARIABLE_1: 0.0
********** f = VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0
VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = to NUMBER while VARIABLE_5 is
= NUMBER while VARIABLE_5: 0.0
********** f = of the VARIABLE_0 VARIABLE_5 is
VARIABLE_0 VARIABLE_5: 0.0
********** f = key VARIABLE_3
index VARIABLE_3: 0.0
********** f = to NUMBER while VARIABLE_5 is less than
= NUMBER while VARIABLE_5 <: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is
< VARIABLE_4 VARIABLE_3: 0.0
********** f = and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4
VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed
< VARIABLE_4 VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is
NUMBER VARIABLE_2 = NUMBER while VARIABLE_5 < VARIABLE_4 VARIABLE_3: 0.0
********** f = equal to VARIABLE_2 plus the value given by VARIABLE_1 with key
= VARIABLE_2 + VARIABLE_1 index: 0.0
********** f = the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER: 0.0
********** f = and VARIABLE_2 is equal
VARIABLE_2: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = at VARIABLE_5 and VARIABLE_2
index VARIABLE_5 VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 indexed
= VARIABLE_0: 0.0
********** f = to NUMBER while VARIABLE_5 is less than VARIABLE_4
= NUMBER while VARIABLE_5 < VARIABLE_4: 0.0
********** f = VARIABLE_2 is equal
VARIABLE_2: -0.2876820724517809
VARIABLE_2 ==: -1.3862943611198906
********** f = VARIABLE_2 is equal to VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = plus the value given by VARIABLE_1
+ VARIABLE_1: 0.0
********** f = indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1
index VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2
= VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = while VARIABLE_5 is less than VARIABLE_4 VARIABLE_3 is equal to the VARIABLE_0 indexed at
while VARIABLE_5 < VARIABLE_4 VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_3 is equal to the VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2
VARIABLE_3 = VARIABLE_0 index VARIABLE_5 VARIABLE_2 = VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 indexed at VARIABLE_5 and
= VARIABLE_0 index VARIABLE_5: 0.0
********** f = indexed at
index: 0.0
********** f = VARIABLE_0 indexed at VARIABLE_5 and VARIABLE_2 is
VARIABLE_0 index VARIABLE_5 VARIABLE_2: 0.0
********** f = to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and VARIABLE_2 is
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER VARIABLE_2: 0.0
********** f = equal to NUMBER and VARIABLE_2 is equal to NUMBER while VARIABLE_5 is
= NUMBER VARIABLE_2 = NUMBER while VARIABLE_5: 0.0
********** f = is equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 =: 0.0
********** f = equal to the FUNCTION_CALL_7 of the VARIABLE_0 VARIABLE_5 is equal to NUMBER and
= FUNCTION_CALL_7 VARIABLE_0 VARIABLE_5 = NUMBER: 0.0
********** f = VARIABLE_0 VARIABLE_5 is equal
VARIABLE_0 VARIABLE_5: 0.0
********** f = at VARIABLE_5 and VARIABLE_2 is equal to VARIABLE_2 plus the value given by VARIABLE_1 with
index VARIABLE_5 VARIABLE_2 = VARIABLE_2 + VARIABLE_1: 0.0
********** f = for each VARIABLE_0 between NUMBER and
for VARIABLE: 0.0
********** f = NUMBER and NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER FUNCTION_CALL_3
NUMBER NUMBER FUNCTION_CALL_3: 0.0
********** f = for each VARIABLE_0
for: 0.0
********** f = for each VARIABLE_0 between NUMBER
for VARIABLE: 0.0
********** f = VARIABLE_0 between NUMBER
VARIABLE: 0.0
********** f = and NUMBER FUNCTION_CALL_3
NUMBER NUMBER FUNCTION_CALL_3: 0.0
********** f = VARIABLE_0 between
VARIABLE: 0.0
********** f = between
VARIABLE: 0.0
********** f = NUMBER FUNCTION_CALL_3 VARIABLE_0 and
NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 and
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = for each VARIABLE_0 between
for VARIABLE: 0.0
********** f = for each VARIABLE_0 between NUMBER and NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
for VARIABLE in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER and NUMBER FUNCTION_CALL_3
NUMBER NUMBER FUNCTION_CALL_3: 0.0
********** f = between NUMBER and
VARIABLE: 0.0
********** f = VARIABLE_0 and
VARIABLE_0: 0.0
********** f = between NUMBER
VARIABLE: 0.0
********** f = NUMBER and NUMBER FUNCTION_CALL_3 VARIABLE_0 and
NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = and NUMBER FUNCTION_CALL_3 VARIABLE_0 and
NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = between NUMBER and NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
VARIABLE in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER and NUMBER
NUMBER NUMBER: 0.0
********** f = NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = and NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = loop
FUNCTION_CALL_2: 0.0
********** f = and NUMBER
NUMBER NUMBER: 0.0
********** f = VARIABLE_0 between NUMBER and
VARIABLE: 0.0
********** f = VARIABLE_0 between NUMBER and NUMBER FUNCTION_CALL_3 VARIABLE_0 and end the loop
VARIABLE in FUNCTION_CALL_2 NUMBER NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = parentheses FUNCTION_CALL_2
+ FUNCTION_CALL_2: 0.0
********** f = parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
+ FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = VARIABLE_0 plus plus
VARIABLE_0 +: -0.6931471805599453
VARIABLE_0 + +: -0.6931471805599453
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = NUMBER VARIABLE_0 plus plus
NUMBER VARIABLE_0 +: -0.6931471805599453
NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = VARIABLE_0 plus plus open
VARIABLE_0 +: 0.0
********** f = VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER: 0.0
********** f = integer VARIABLE_0
VARIABLE_0: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: 0.0
********** f = NUMBER VARIABLE_0 smaller than
NUMBER VARIABLE_0 <: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than
for VARIABLE_0 = NUMBER VARIABLE_0 <: 0.0
********** f = VARIABLE_0 backslash n close parentheses
VARIABLE_0 + NEWLINE: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0
for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
< NUMBER VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = NUMBER VARIABLE_0 smaller than NUMBER
NUMBER VARIABLE_0 < NUMBER: 0.0
********** f = open parentheses FUNCTION_CALL_2
+ FUNCTION_CALL_2: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
< NUMBER VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0
VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = parentheses
+: 0.0
********** f = open parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
+ FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = NUMBER VARIABLE_0 plus plus open parentheses
NUMBER VARIABLE_0 + +: 0.0
********** f = backslash n
NEWLINE: 0.0
********** f = VARIABLE_0 smaller than
VARIABLE_0 <: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER: 0.0
********** f = NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
NUMBER VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: 0.0
********** f = for integer VARIABLE_0
for VARIABLE_0: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER
for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: 0.0
********** f = equals NUMBER VARIABLE_0
= NUMBER VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: 0.0
********** f = integer VARIABLE_0 equals NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus open
< NUMBER VARIABLE_0 +: 0.0
********** f = VARIABLE_0 smaller than NUMBER
VARIABLE_0 < NUMBER: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0
VARIABLE_0 = NUMBER VARIABLE_0: 0.0
********** f = FUNCTION_CALL_2
FUNCTION_CALL_2: -0.25131442828090605
FUNCTION_CALL_2 STRING_CONST: -2.1972245773362196
: FUNCTION_CALL_2: -2.1972245773362196
********** f = NUMBER VARIABLE_0 plus plus open
NUMBER VARIABLE_0 +: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0
VARIABLE_0 = NUMBER VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0
NUMBER VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = plus plus open parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
+ + FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0
for VARIABLE_0 = NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
VARIABLE_0 < NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = smaller than NUMBER VARIABLE_0 plus plus open parentheses
< NUMBER VARIABLE_0 + +: 0.0
********** f = VARIABLE_0 plus plus open parentheses
VARIABLE_0 + +: 0.0
********** f = integer VARIABLE_0 equals
VARIABLE_0 =: 0.0
********** f = smaller than NUMBER
< NUMBER: 0.0
********** f = plus plus
+: -0.6931471805599453
+ +: -0.6931471805599453
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than
VARIABLE_0 = NUMBER VARIABLE_0 <: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses
VARIABLE_0 < NUMBER VARIABLE_0 + +: 0.0
********** f = plus plus open
+: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = open parentheses
+: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
VARIABLE_0 < NUMBER VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = for integer VARIABLE_0 equals NUMBER
for VARIABLE_0 = NUMBER: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than
VARIABLE_0 = NUMBER VARIABLE_0 <: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than
= NUMBER VARIABLE_0 <: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0: 0.0
********** f = for integer VARIABLE_0 equals
for VARIABLE_0 =: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus
for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: -0.6931471805599453
********** f = VARIABLE_0 equals NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus
< NUMBER VARIABLE_0 +: -0.6931471805599453
< NUMBER VARIABLE_0 + +: -0.6931471805599453
********** f = plus plus open parentheses FUNCTION_CALL_2
+ + FUNCTION_CALL_2: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER
= NUMBER VARIABLE_0 < NUMBER: 0.0
********** f = plus plus open parentheses
+ +: 0.0
********** f = smaller than
<: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + + FUNCTION_CALL_2: 0.0
********** f = smaller than NUMBER VARIABLE_0
< NUMBER VARIABLE_0: 0.0
********** f = for integer
for: 0.0
********** f = NUMBER VARIABLE_0 plus plus open parentheses FUNCTION_CALL_2 VARIABLE_0 backslash n close parentheses
NUMBER VARIABLE_0 + + FUNCTION_CALL_2 VARIABLE_0 + NEWLINE: 0.0
********** f = line and
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = then put the new line and end the
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = new line and
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = else if
else if: -0.2876820724517809
STRING_CONST else if: -1.3862943611198906
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: 0.0
********** f = the for loop
for: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = put the new
NUMBER: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST: -1.3862943611198906
NUMBER FUNCTION_CALL_3: -1.3862943611198906
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: 0.0
********** f = increments by NUMBER each time if
NUMBER if: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = put the
NUMBER: -1.3862943611198906
NUMBER FUNCTION_CALL_3: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -1.3862943611198906
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER
VARIABLE_0 = NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = than or equal to NUMBER and
NUMBER: 0.0
********** f = or VARIABLE_0 is less than or equal
VARIABLE_0 <=: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
else if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = NUMBER does not
NUMBER !=: -0.6931471805599453
NUMBER != NUMBER: -0.6931471805599453
********** f = NUMBER is
==: 0.0
********** f = the new
NUMBER FUNCTION_CALL_3: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST: -1.3862943611198906
NUMBER: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -1.3862943611198906
********** f = equal to NUMBER and VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0 increments
= NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0 increments
VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = if VARIABLE_0 is equal to NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2
FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_0
NUMBER VARIABLE_0: -1.0986122886681098
VARIABLE_0: -0.40546510810816444
********** f = buzz then put
STRING_CONST: 0.0
********** f = fizz
and: 0.0
********** f = does not equal
!=: 0.0
********** f = or VARIABLE_0 is less than or equal to NUMBER and
VARIABLE_0 <= NUMBER: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER
FUNCTION_CALL_2 VARIABLE_0 NUMBER: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0: -0.6931471805599453
********** f = is equal
==: 0.0
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = then put the
NUMBER FUNCTION_CALL_3: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -1.3862943611198906
NUMBER: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST: -1.3862943611198906
********** f = then put the new
NUMBER FUNCTION_CALL_3: -1.3862943611198906
NUMBER: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3: -1.3862943611198906
NUMBER FUNCTION_CALL_3 STRING_CONST: -1.3862943611198906
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER
VARIABLE_0 = NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal to
= NUMBER VARIABLE_0 <=: 0.0
********** f = the new line and end
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = increments by NUMBER each
NUMBER: 0.0
********** f = if VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = than or equal to NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0: 0.0
********** f = or VARIABLE_0 is less than or
VARIABLE_0 <=: 0.0
********** f = equal NUMBER and
+: 0.0
********** f = NUMBER is equal NUMBER
NUMBER ==: 0.0
********** f = new line and end
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = else
else: -0.11778303565638351
STRING_CONST else: -2.1972245773362196
********** f = the new line and
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = and VARIABLE_0
VARIABLE_0: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than
= NUMBER VARIABLE_0 <=: 0.0
********** f = than or equal to NUMBER and VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = then put the new line and end
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = time if
if: 0.0
********** f = or equal to NUMBER and VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = or equal to NUMBER and
NUMBER: 0.0
********** f = does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
!= NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = NUMBER or VARIABLE_0 is less
NUMBER VARIABLE_0 <=: 0.0
********** f = NUMBER does not equal NUMBER then
NUMBER != NUMBER: 0.0
********** f = new line and end the
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = by NUMBER each
NUMBER: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3
NUMBER != NUMBER FUNCTION_CALL_3: 0.0
********** f = increments by NUMBER each time
NUMBER: 0.0
********** f = if VARIABLE_0 is
VARIABLE_0: -0.6931471805599453
if VARIABLE_0 ==: -0.6931471805599453
********** f = does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
!= NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = is
==: -0.9808292530117262
VARIABLE_0: -0.6931471805599453
VARIABLE_3: -2.0794415416798357
********** f = NUMBER or VARIABLE_0 is less than or equal
NUMBER VARIABLE_0 <=: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: -0.6931471805599453
********** f = equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER and
= NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal
= NUMBER VARIABLE_0 <=: 0.0
********** f = does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
!= NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal to
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = or equal to NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 else
VARIABLE_0 else: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less
= NUMBER VARIABLE_0 <=: 0.0
********** f = to NUMBER or VARIABLE_0 is less
= NUMBER VARIABLE_0 <=: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: 0.0
********** f = to NUMBER or VARIABLE_0 is less than
= NUMBER VARIABLE_0 <=: 0.0
********** f = buzz
STRING_CONST: 0.0
********** f = if VARIABLE_0 is equal
VARIABLE_0: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER
FUNCTION_CALL_2 VARIABLE_0 NUMBER: 0.0
********** f = does not
!=: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal to NUMBER and
= NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER
FUNCTION_CALL_2 VARIABLE_0 NUMBER: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or equal
= NUMBER VARIABLE_0 <=: 0.0
********** f = put the new line and end
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = each time if
if: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal to NUMBER
= NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = NUMBER or VARIABLE_0 is less than or equal to
NUMBER VARIABLE_0 <=: 0.0
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = does not equal NUMBER then FUNCTION_CALL_3
!= NUMBER FUNCTION_CALL_3: 0.0
********** f = NUMBER does not equal
NUMBER !=: 0.0
********** f = line and end
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = for loop 
for: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_2
else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = VARIABLE_0 increments
VARIABLE_0: 0.0
********** f = put the new line and
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3: 0.0
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal to
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = than or equal to NUMBER
NUMBER: -0.6931471805599453
<= NUMBER: -0.6931471805599453
********** f = the for loop 
for: 0.0
********** f = NUMBER or VARIABLE_0 is less than or
NUMBER VARIABLE_0 <=: 0.0
********** f = NUMBER or VARIABLE_0 is less than
NUMBER VARIABLE_0 <=: 0.0
********** f = each time if VARIABLE_0 FUNCTION_CALL_2
if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
!= NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = time if VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
if FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = to NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0: 0.0
********** f = NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = by NUMBER each time if
NUMBER if: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2
!= NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = does not equal NUMBER then
!= NUMBER: 0.0
********** f = NUMBER then FUNCTION_CALL_3
NUMBER FUNCTION_CALL_3: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = line and end the
FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
STRING_CONST FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
NEWLINE: -1.3862943611198906
FUNCTION_CALL_3 NEWLINE: -1.3862943611198906
********** f = each time if VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
if FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER
= NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or
= NUMBER VARIABLE_0 <=: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = by NUMBER each time
NUMBER: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_2
if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = then put the new line and
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2
FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0
NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = if
if: -0.06453852113757118
FUNCTION_CALL_2: -3.4657359027997265
NUMBER if: -3.4657359027997265
********** f = equal NUMBER then FUNCTION_CALL_3
NUMBER FUNCTION_CALL_3: 0.0
********** f = equal to NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 else
FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = or VARIABLE_0 is less than or equal to NUMBER
VARIABLE_0 <= NUMBER: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0 increments
= NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = or VARIABLE_0 is less than
VARIABLE_0 <=: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 else if
FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = to NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0
= NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_2 NUMBER
if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = buzz then
STRING_CONST: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = increments by NUMBER
NUMBER: 0.0
********** f = equal NUMBER then FUNCTION_CALL_3 VARIABLE_0 else
NUMBER FUNCTION_CALL_3 VARIABLE_0 else: 0.0
********** f = NUMBER or VARIABLE_0 is less than or equal to NUMBER and
NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = VARIABLE_0 else if
VARIABLE_0 else if: 0.0
********** f = by NUMBER each time if VARIABLE_0 FUNCTION_CALL_2
NUMBER if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or
= NUMBER VARIABLE_0 <=: 0.0
********** f = VARIABLE_0 is equal
VARIABLE_0: 0.0
********** f = or VARIABLE_0 is less than or equal to
VARIABLE_0 <=: 0.0
********** f = FUNCTION_CALL_2 NUMBER
FUNCTION_CALL_2: 0.0
********** f = end the for loop 
for: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3: 0.0
********** f = to NUMBER and VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = by NUMBER each time if VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
NUMBER if FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
FUNCTION_CALL_2 VARIABLE_0 NUMBER !=: 0.0
********** f = NUMBER and VARIABLE_0 increments
NUMBER VARIABLE_0: 0.0
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER and
VARIABLE_0 = NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
FUNCTION_CALL_3 VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 is equal to NUMBER
VARIABLE_0 = NUMBER: -0.6931471805599453
VARIABLE_0 == NUMBER: -0.6931471805599453
********** f = VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0
= NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_2 NUMBER is equal NUMBER
if FUNCTION_CALL_2 VARIABLE_0 NUMBER ==: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
if FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = time if VARIABLE_0 FUNCTION_CALL_2
if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = is equal NUMBER
NUMBER ==: 0.0
********** f = equal to NUMBER or VARIABLE_0 is less than or equal to
= NUMBER VARIABLE_0 <=: 0.0
********** f = and VARIABLE_0 increments
VARIABLE_0: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or equal
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = or equal to NUMBER
NUMBER: -0.6931471805599453
<= NUMBER: -0.6931471805599453
********** f = or VARIABLE_0 is less
VARIABLE_0 <=: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = NUMBER or VARIABLE_0 is less than or equal to NUMBER
NUMBER VARIABLE_0 <= NUMBER: 0.0
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0 else if
NUMBER FUNCTION_CALL_3 VARIABLE_0 else if: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2
FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 else if VARIABLE_0 FUNCTION_CALL_2 NUMBER
VARIABLE_0 else if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = increments by NUMBER each time if VARIABLE_0 FUNCTION_CALL_2
NUMBER if FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = equal NUMBER then
NUMBER: 0.0
********** f = or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0
VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = increments by NUMBER each time if VARIABLE_0 FUNCTION_CALL_2 NUMBER does not
NUMBER if FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER: 0.0
********** f = put the new line and end the
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = NUMBER then FUNCTION_CALL_3 VARIABLE_0
NUMBER FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = if VARIABLE_0 is equal to NUMBER or VARIABLE_0 is less than or
VARIABLE_0 = NUMBER VARIABLE_0 <=: 0.0
********** f = NUMBER or VARIABLE_0 is less than or equal to NUMBER and VARIABLE_0
NUMBER VARIABLE_0 <= NUMBER VARIABLE_0: 0.0
********** f = NUMBER is equal
==: 0.0
********** f = the new line and end the
NUMBER FUNCTION_CALL_3 STRING_CONST FUNCTION_CALL_3 NEWLINE: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_2 NUMBER does not equal NUMBER then FUNCTION_CALL_3
FUNCTION_CALL_2 VARIABLE_0 NUMBER != NUMBER FUNCTION_CALL_3: 0.0
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER and
VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = FUNCTION_CALL_2 fizz
FUNCTION_CALL_2: -0.6931471805599453
FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = if VARIABLE_0 percent
if VARIABLE_0 %: 0.0
********** f = fizz else if VARIABLE_0
STRING_CONST else if VARIABLE_0: -0.6931471805599453
else if VARIABLE_0: -0.6931471805599453
********** f = if VARIABLE_0
if VARIABLE_0: -0.3364722366212129
if: -1.252762968495368
********** f = then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2
NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER equals equals NUMBER then
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 percent NUMBER equals
VARIABLE_0 % NUMBER: 0.0
********** f = fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = else if VARIABLE_0 percent NUMBER equal equals NUMBER
STRING_CONST else if VARIABLE_0 % NUMBER ==: -0.6931471805599453
else if VARIABLE_0 % NUMBER ==: -0.6931471805599453
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals
VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = fizz else
else: -0.6931471805599453
STRING_CONST else: -0.6931471805599453
********** f = fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER then
if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 close
VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_0 plus plus if VARIABLE_0
NUMBER VARIABLE_0 + + if VARIABLE_0: 0.0
********** f = equals equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0 percent
== NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 %: 0.0
********** f = equals equals NUMBER
== NUMBER: 0.0
********** f = buzz else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = percent NUMBER equals equals
% NUMBER ==: 0.0
********** f = then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close
NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if
VARIABLE_0 < NUMBER VARIABLE_0 + + if: 0.0
********** f = and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = else if VARIABLE_0 percent NUMBER
else if VARIABLE_0 % NUMBER: 0.0
********** f = buzz else if
STRING_CONST else if: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2
== NUMBER FUNCTION_CALL_2: -0.6931471805599453
== NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = percent
%: 0.0
********** f = plus if VARIABLE_0 percent NUMBER
+ if VARIABLE_0 % NUMBER: 0.0
********** f = if VARIABLE_0 percent NUMBER equal equals NUMBER
if VARIABLE_0 % NUMBER ==: 0.0
********** f = percent NUMBER
% NUMBER: 0.0
********** f = plus if VARIABLE_0 percent NUMBER equals
+ if VARIABLE_0 % NUMBER: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz buzz else
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = else FUNCTION_CALL_2
else FUNCTION_CALL_2: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals
NUMBER VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = else if VARIABLE_0 percent NUMBER equal equals NUMBER then
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER: -0.6931471805599453
else if VARIABLE_0 % NUMBER == NUMBER: -0.6931471805599453
********** f = equals equals NUMBER and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
== NUMBER and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = equals NUMBER then
== NUMBER: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = plus plus if VARIABLE_0 percent NUMBER
+ + if VARIABLE_0 % NUMBER: 0.0
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER and
if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
% NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + + if: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz buzz
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz
NUMBER FUNCTION_CALL_2: -0.6931471805599453
NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = NUMBER then FUNCTION_CALL_2
NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = equals equals NUMBER then FUNCTION_CALL_2
== NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
== NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = FUNCTION_CALL_2 fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER
FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 % NUMBER ==: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals
VARIABLE_0 % NUMBER ==: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = else if VARIABLE_0
STRING_CONST else if VARIABLE_0: -0.6931471805599453
else if VARIABLE_0: -0.6931471805599453
********** f = if VARIABLE_0 percent NUMBER equal equals NUMBER then
if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0
< NUMBER VARIABLE_0 + + if VARIABLE_0: 0.0
********** f = then FUNCTION_CALL_2
NUMBER FUNCTION_CALL_2: 0.0
********** f = FUNCTION_CALL_2 fizz else if
FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = buzz else if VARIABLE_0
STRING_CONST else if VARIABLE_0: 0.0
********** f = FUNCTION_CALL_2 fizz else
FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = plus plus if VARIABLE_0 percent NUMBER equals equals
+ + if VARIABLE_0 % NUMBER ==: 0.0
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = percent NUMBER equals equals NUMBER then
% NUMBER == NUMBER: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2 fizz else if
== NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = plus plus if VARIABLE_0 percent
+ + if VARIABLE_0 %: 0.0
********** f = NUMBER equals
NUMBER: -0.6931471805599453
NUMBER NUMBER: -0.6931471805599453
********** f = percent NUMBER equals equals NUMBER
% NUMBER == NUMBER: 0.0
********** f = NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent
NUMBER VARIABLE_0 + + if VARIABLE_0 %: 0.0
********** f = equals equals NUMBER then FUNCTION_CALL_2 fizz
== NUMBER FUNCTION_CALL_2: -0.6931471805599453
== NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = FUNCTION_CALL_2 buzz else
FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = else if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + + if: 0.0
********** f = fizz else if VARIABLE_0 percent
else if VARIABLE_0 %: -0.6931471805599453
STRING_CONST else if VARIABLE_0 %: -0.6931471805599453
********** f = NUMBER equals equals NUMBER then
NUMBER == NUMBER: 0.0
********** f = FUNCTION_CALL_2 fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER then
FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = for integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
for VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0
VARIABLE_0 < NUMBER VARIABLE_0 + + if VARIABLE_0: 0.0
********** f = and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz buzz else
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0
NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = if VARIABLE_0 percent NUMBER equals
if VARIABLE_0 % NUMBER: 0.0
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
% NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER then
else if VARIABLE_0 % NUMBER == NUMBER: -0.6931471805599453
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER: -0.6931471805599453
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = integer VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = then
NUMBER: -0.6931471805599453
-: -1.791759469228055
- =: -1.791759469228055
= NUMBER: -1.791759469228055
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = NUMBER equals equals NUMBER and
NUMBER == NUMBER: 0.0
********** f = NUMBER VARIABLE_0 plus
NUMBER VARIABLE_0 +: 0.0
********** f = plus plus if VARIABLE_0 percent NUMBER equals
+ + if VARIABLE_0 % NUMBER: 0.0
********** f = VARIABLE_0 percent
VARIABLE_0 %: 0.0
********** f = buzz else
STRING_CONST else: 0.0
********** f = then FUNCTION_CALL_2 buzz else
NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = percent NUMBER equal equals NUMBER
% NUMBER ==: 0.0
********** f = FUNCTION_CALL_2 buzz
FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = equal equals
==: 0.0
********** f = FUNCTION_CALL_2 fizz else if VARIABLE_0
FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = percent NUMBER equals
% NUMBER: 0.0
********** f = if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0 percent
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 %: 0.0
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER
STRING_CONST else if VARIABLE_0 % NUMBER: 0.0
********** f = VARIABLE_0 equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
VARIABLE_0 = NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = else if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0
NUMBER VARIABLE_0 < NUMBER VARIABLE_0 + + if VARIABLE_0: 0.0
********** f = plus plus if
+ + if: -0.40546510810816444
+ if: -1.0986122886681098
********** f = else if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = if VARIABLE_0 percent NUMBER equals equals
if VARIABLE_0 % NUMBER ==: 0.0
********** f = equals equals NUMBER then
== NUMBER: 0.0
********** f = FUNCTION_CALL_2 buzz else FUNCTION_CALL_2
FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2 fizz
== NUMBER FUNCTION_CALL_2: -0.6931471805599453
== NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = buzz else if VARIABLE_0 percent
STRING_CONST else if VARIABLE_0 %: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER
< NUMBER VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = and VARIABLE_0 percent
VARIABLE_0 %: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 close parenthesis
FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = plus plus if VARIABLE_0
+ + if VARIABLE_0: -0.40546510810816444
+ if VARIABLE_0: -1.0986122886681098
********** f = then FUNCTION_CALL_2 buzz
NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = if VARIABLE_0 percent NUMBER
if VARIABLE_0 % NUMBER: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals equals NUMBER
VARIABLE_0 + + if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz buzz
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = plus plus if VARIABLE_0 percent NUMBER equals equals NUMBER
+ + if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0
== NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = else if VARIABLE_0 percent
else if VARIABLE_0 %: -0.6931471805599453
STRING_CONST else if VARIABLE_0 %: -0.6931471805599453
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
********** f = and VARIABLE_0 percent NUMBER equals equals NUMBER then
VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -1.0986122886681098
and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -1.0986122886681098
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -1.0986122886681098
********** f = if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = NUMBER equal equals NUMBER
NUMBER ==: 0.0
********** f = plus if VARIABLE_0 percent NUMBER equals equals
+ if VARIABLE_0 % NUMBER ==: 0.0
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = else if VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2
else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
STRING_CONST else if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
if VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals equals
NUMBER VARIABLE_0 + + if VARIABLE_0 % NUMBER ==: 0.0
********** f = NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER
NUMBER VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = else if VARIABLE_0 percent NUMBER equals equals NUMBER then
else if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2 fizz else
== NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = percent NUMBER equals equals NUMBER and
% NUMBER == NUMBER: 0.0
********** f = FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close
FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = equals NUMBER and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
== NUMBER and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = plus plus if VARIABLE_0 percent NUMBER equals equals NUMBER and
+ + if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 close parenthesis
VARIABLE_0: 0.0
********** f = VARIABLE_0 plus plus if
VARIABLE_0 + + if: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz else if
NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = NUMBER VARIABLE_0 plus plus if
NUMBER VARIABLE_0 + + if: 0.0
********** f = NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_2: -0.6931471805599453
********** f = percent NUMBER equal equals NUMBER then
% NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals equals NUMBER and
VARIABLE_0 + + if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = equals equals NUMBER then FUNCTION_CALL_2 fizz else if
== NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = equals NUMBER and
== NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz
NUMBER and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_2 fizz else if VARIABLE_0 percent
FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 %: 0.0
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER then
VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz else if
% NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else if: 0.0
********** f = plus if
+ if: 0.0
********** f = VARIABLE_0 smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent
VARIABLE_0 < NUMBER VARIABLE_0 + + if VARIABLE_0 %: 0.0
********** f = equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0 percent
== NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 %: 0.0
********** f = NUMBER equals equals NUMBER
NUMBER == NUMBER: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER equals
STRING_CONST else if VARIABLE_0 % NUMBER: 0.0
********** f = NUMBER equal equals NUMBER then
NUMBER == NUMBER: 0.0
********** f = else FUNCTION_CALL_2 VARIABLE_0 close
else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if VARIABLE_0 percent NUMBER equals equals NUMBER
if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER
VARIABLE_0 % NUMBER ==: 0.0
********** f = NUMBER equals equals
NUMBER ==: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals equals
VARIABLE_0 + + if VARIABLE_0 % NUMBER ==: 0.0
********** f = equals equals
==: 0.0
********** f = fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER
else if VARIABLE_0 % NUMBER ==: -0.6931471805599453
STRING_CONST else if VARIABLE_0 % NUMBER ==: -0.6931471805599453
********** f = else if VARIABLE_0 percent NUMBER equals equals
else if VARIABLE_0 % NUMBER ==: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0 percent
NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 %: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0
VARIABLE_0 + + if VARIABLE_0: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER
VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz else
NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = VARIABLE_0 percent NUMBER equals equals NUMBER then
VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus if
< NUMBER VARIABLE_0 + + if: 0.0
********** f = fizz else if
else if: -0.6931471805599453
STRING_CONST else if: -0.6931471805599453
********** f = plus if VARIABLE_0 percent NUMBER equals equals NUMBER and
+ if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 percent NUMBER equals equals NUMBER then FUNCTION_CALL_2 fizz buzz
NUMBER and VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = buzz else FUNCTION_CALL_2
STRING_CONST else FUNCTION_CALL_2: 0.0
********** f = VARIABLE_0 percent NUMBER
VARIABLE_0 % NUMBER: 0.0
********** f = plus if VARIABLE_0 percent NUMBER equals equals NUMBER
+ if VARIABLE_0 % NUMBER == NUMBER: 0.0
********** f = plus if VARIABLE_0
+ if VARIABLE_0: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER
VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2
NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0 percent NUMBER equal equals NUMBER
NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0 % NUMBER ==: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus
< NUMBER VARIABLE_0 +: 0.0
********** f = buzz else if VARIABLE_0 percent NUMBER equals equals
STRING_CONST else if VARIABLE_0 % NUMBER ==: 0.0
********** f = equals NUMBER VARIABLE_0 smaller than NUMBER VARIABLE_0 plus
= NUMBER VARIABLE_0 < NUMBER VARIABLE_0 +: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent NUMBER equals
< NUMBER VARIABLE_0 + + if VARIABLE_0 % NUMBER: 0.0
********** f = buzz else FUNCTION_CALL_2 VARIABLE_0 close
STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz else FUNCTION_CALL_2 VARIABLE_0 close parenthesis
NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST else FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = plus if VARIABLE_0 percent
+ if VARIABLE_0 %: 0.0
********** f = equals equals NUMBER then FUNCTION_CALL_2 fizz else if VARIABLE_0
== NUMBER FUNCTION_CALL_2 STRING_CONST else if VARIABLE_0: 0.0
********** f = VARIABLE_0 plus plus if VARIABLE_0 percent
VARIABLE_0 + + if VARIABLE_0 %: 0.0
********** f = equals equals NUMBER then FUNCTION_CALL_2 fizz else
== NUMBER FUNCTION_CALL_2 STRING_CONST else: 0.0
********** f = percent NUMBER equal equals NUMBER then FUNCTION_CALL_2
% NUMBER == NUMBER FUNCTION_CALL_2: 0.0
********** f = equals equals NUMBER and
== NUMBER: 0.0
********** f = else if VARIABLE_0 percent NUMBER equals
else if VARIABLE_0 % NUMBER: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 close
FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 percent NUMBER equal equals NUMBER then FUNCTION_CALL_2 buzz
VARIABLE_0 % NUMBER == NUMBER FUNCTION_CALL_2 STRING_CONST: 0.0
********** f = smaller than NUMBER VARIABLE_0 plus plus if VARIABLE_0 percent
< NUMBER VARIABLE_0 + + if VARIABLE_0 %: 0.0
********** f = buzz speech marks close brackets
FUNCTION_CALL_3: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = speech marks close brackets
==: -1.791759469228055
STRING_CONST: -1.791759469228055
FUNCTION_CALL_3: -1.791759469228055
NUMBER == NUMBER: -1.791759469228055
NUMBER ==: -1.791759469228055
== NUMBER: -1.791759469228055
********** f = else if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks
VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else if FUNCTION_CALL_3: 0.0
********** f = speech marks
NUMBER ==: -1.6094379124341003
STRING_CONST: -1.6094379124341003
NUMBER == NUMBER: -1.6094379124341003
== NUMBER: -1.6094379124341003
==: -1.6094379124341003
********** f = fizz buzz speech marks
and: 0.0
********** f = FUNCTION_CALL_4 open bracket speech marks
VARIABLE: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks fizz speech
VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else if FUNCTION_CALL_3: 0.0
********** f = speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = speech marks fizz
and: -0.6931471805599453
STRING_CONST: -0.6931471805599453
********** f = speech marks close
STRING_CONST: -1.6094379124341003
== NUMBER: -1.6094379124341003
NUMBER ==: -1.6094379124341003
==: -1.6094379124341003
NUMBER == NUMBER: -1.6094379124341003
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = speech marks fizz buzz speech marks
and: 0.0
********** f = close brackets else
else: 0.0
********** f = marks buzz speech marks close brackets else FUNCTION_CALL_4
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = open brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = speech marks buzz
STRING_CONST: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = speech
== NUMBER: -1.6094379124341003
NUMBER ==: -1.6094379124341003
STRING_CONST: -1.6094379124341003
NUMBER == NUMBER: -1.6094379124341003
==: -1.6094379124341003
********** f = brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = open brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = brackets VARIABLE_0 close
VARIABLE_0: 0.0
********** f = open brackets speech marks buzz
STRING_CONST: 0.0
********** f = marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = open bracket speech marks
VARIABLE: 0.0
********** f = FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER: 0.0
********** f = FUNCTION_CALL_4 open brackets speech
FUNCTION_CALL_4 STRING_CONST: -0.6931471805599453
FUNCTION_CALL_4: -0.6931471805599453
********** f = FUNCTION_CALL_4 open brackets speech marks fizz
FUNCTION_CALL_4 STRING_CONST: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = marks close brackets
FUNCTION_CALL_3: -0.6931471805599453
STRING_CONST: -0.6931471805599453
********** f = marks close brackets else
else: -0.6931471805599453
STRING_CONST else: -0.6931471805599453
********** f = fizz speech marks
STRING_CONST: 0.0
********** f = for VARIABLE_0 equals NUMBER to NUMBER
for: 0.0
********** f = brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open brackets
NUMBER == NUMBER FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4: -0.6931471805599453
********** f = open brackets VARIABLE_0 close
VARIABLE_0: 0.0
********** f = speech marks buzz speech marks close brackets else FUNCTION_CALL_4
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = marks close brackets else if
STRING_CONST else if: 0.0
********** f = marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close brackets
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = NUMBER to NUMBER if
if: 0.0
********** f = bracket
VARIABLE: 0.0
********** f = buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = speech marks close brackets else if
STRING_CONST else if: 0.0
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST: -1.0986122886681098
== NUMBER FUNCTION_CALL_4: -1.0986122886681098
NUMBER == NUMBER FUNCTION_CALL_4: -1.0986122886681098
********** f = speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close brackets
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = buzz speech marks close brackets else FUNCTION_CALL_4 open brackets
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = NUMBER equals NUMBER FUNCTION_CALL_4
NUMBER == NUMBER FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4: -0.6931471805599453
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = marks fizz speech marks
STRING_CONST: 0.0
********** f = NUMBER if VARIABLE_0
if: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = FUNCTION_CALL_4 open brackets
FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0
if: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = marks
STRING_CONST: 0.0
********** f = open brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = open bracket speech
VARIABLE: 0.0
********** f = NUMBER equals NUMBER
== NUMBER: -1.0986122886681098
NUMBER NUMBER: -1.0986122886681098
NUMBER == NUMBER: -1.0986122886681098
********** f = equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = marks fizz buzz speech marks
and: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = marks buzz speech marks close brackets else FUNCTION_CALL_4 open
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_3
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = fizz buzz
and: 0.0
********** f = FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER: 0.0
********** f = brackets
FUNCTION_CALL_3: -0.6931471805599453
(: -0.6931471805599453
********** f = brackets else if
else if: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = buzz speech marks close brackets else FUNCTION_CALL_4 open
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER: 0.0
********** f = open brackets speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = VARIABLE_0 equals NUMBER to NUMBER if
if: 0.0
********** f = marks fizz
and: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = speech marks fizz buzz speech marks close brackets
and FUNCTION_CALL_3: 0.0
********** f = speech marks fizz speech
STRING_CONST: 0.0
********** f = FUNCTION_CALL_4 open bracket speech
VARIABLE: 0.0
********** f = brackets speech marks
STRING_CONST: 0.0
********** f = speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = speech marks fizz buzz speech marks close
and: 0.0
********** f = fizz speech marks close brackets else
STRING_CONST else: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER: 0.0
********** f = bracket speech
VARIABLE: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech
VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else if FUNCTION_CALL_3: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = brackets speech marks fizz
STRING_CONST: 0.0
********** f = fizz buzz speech
and: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech
== NUMBER FUNCTION_CALL_4: -1.0986122886681098
NUMBER == NUMBER FUNCTION_CALL_4: -1.0986122886681098
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST: -1.0986122886681098
********** f = fizz speech marks close brackets else if
STRING_CONST else if: 0.0
********** f = open brackets speech marks fizz
STRING_CONST: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER: 0.0
********** f = close brackets
FUNCTION_CALL_3: 0.0
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open
NUMBER == NUMBER FUNCTION_CALL_4: -0.6931471805599453
== NUMBER FUNCTION_CALL_4: -0.6931471805599453
********** f = FUNCTION_CALL_3 NUMBER
NUMBER NUMBER: -1.3862943611198906
FUNCTION_CALL_3 NUMBER: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER: -1.3862943611198906
********** f = for VARIABLE_0 equals NUMBER
for: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = NUMBER equals NUMBER then FUNCTION_CALL_4 open
NUMBER == NUMBER: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = NUMBER if
if: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = equals NUMBER to NUMBER if VARIABLE_0
if: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = open bracket
VARIABLE: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0
if: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = marks fizz speech marks close brackets else if
STRING_CONST else if: 0.0
********** f = bracket speech marks
VARIABLE: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4 open
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = marks fizz buzz speech
and: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks fizz
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST: 0.0
********** f = end if
in FUNCTION_CALL_2: -1.9459101490553135
in: -0.3364722366212129
in FUNCTION_CALL_4: -1.9459101490553135
********** f = if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 open brackets speech marks
FUNCTION_CALL_4 STRING_CONST: -0.6931471805599453
FUNCTION_CALL_4: -0.6931471805599453
********** f = FUNCTION_CALL_4 open bracket
VARIABLE: 0.0
********** f = marks fizz buzz
and: 0.0
********** f = to NUMBER if VARIABLE_0
if: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_3
FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = equals NUMBER to NUMBER if
if: 0.0
********** f = FUNCTION_CALL_4 open brackets speech marks fizz speech
FUNCTION_CALL_4 STRING_CONST: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = brackets speech
STRING_CONST: 0.0
********** f = fizz speech marks close
STRING_CONST: 0.0
********** f = brackets end if
in FUNCTION_CALL_2: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close brackets
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = marks close
STRING_CONST: 0.0
********** f = marks fizz buzz speech marks close brackets
and FUNCTION_CALL_3: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = open brackets speech
STRING_CONST: 0.0
********** f = marks fizz speech marks close brackets else
STRING_CONST else: 0.0
********** f = close brackets else if
else if: 0.0
********** f = VARIABLE_0 equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = for VARIABLE_0 equals NUMBER to
for: 0.0
********** f = and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4 open
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = brackets else
else: 0.0
********** f = NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4 open
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = open brackets speech marks
STRING_CONST: 0.0
********** f = speech marks buzz speech marks close brackets else FUNCTION_CALL_4 open brackets VARIABLE_0 close brackets
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = brackets VARIABLE_0 close brackets
VARIABLE_0: 0.0
********** f = marks fizz buzz speech marks close
and: 0.0
********** f = else if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks fizz
VARIABLE_0 NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else if FUNCTION_CALL_3: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = fizz speech marks close brackets
STRING_CONST: 0.0
********** f = NUMBER equals NUMBER then
NUMBER == NUMBER: 0.0
********** f = open brackets speech marks fizz speech
STRING_CONST: 0.0
********** f = if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = fizz buzz speech marks close
and: 0.0
********** f = brackets speech marks buzz
STRING_CONST: 0.0
********** f = NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and
NUMBER NUMBER if: 0.0
********** f = open brackets VARIABLE_0 close brackets
VARIABLE_0: 0.0
********** f = for VARIABLE_0 equals
for: 0.0
********** f = VARIABLE_0 close brackets
VARIABLE_0: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER
NUMBER NUMBER if: 0.0
********** f = to NUMBER if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = equals NUMBER and VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4 open
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4 open
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = speech marks fizz buzz
and: 0.0
********** f = marks fizz speech marks close brackets
STRING_CONST: 0.0
********** f = for VARIABLE_0
for: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = speech marks close brackets else
STRING_CONST else: 0.0
********** f = fizz buzz speech marks close brackets
and FUNCTION_CALL_3: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER and VARIABLE_0 FUNCTION_CALL_3
NUMBER NUMBER if FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER equals
NUMBER NUMBER if: 0.0
********** f = NUMBER equals NUMBER and
NUMBER NUMBER: 0.0
********** f = brackets speech marks fizz speech
STRING_CONST: 0.0
********** f = equals NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3
if: 0.0
********** f = equals NUMBER and VARIABLE_0
VARIABLE_0: 0.0
********** f = NUMBER equals NUMBER FUNCTION_CALL_4 open brackets speech marks fizz speech
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST: 0.0
********** f = VARIABLE_0 FUNCTION_CALL_3 NUMBER equals NUMBER then FUNCTION_CALL_4
FUNCTION_CALL_3 VARIABLE_0 NUMBER == NUMBER: 0.0
********** f = speech marks fizz buzz speech
and: 0.0
********** f = buzz speech marks close brackets else FUNCTION_CALL_4
== NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
NUMBER == NUMBER FUNCTION_CALL_4 STRING_CONST else FUNCTION_CALL_4: -0.6931471805599453
********** f = to NUMBER if
if: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = FUNCTION_CALL_4 open
FUNCTION_CALL_4: 0.0
********** f = brackets end
in: 0.0
********** f = NUMBER equals NUMBER then FUNCTION_CALL_4
NUMBER == NUMBER: 0.0
********** f = marks buzz
STRING_CONST: 0.0
********** f = NUMBER to NUMBER if VARIABLE_0 FUNCTION_CALL_3 NUMBER
NUMBER NUMBER if: 0.0
********** f = marks fizz speech marks close
STRING_CONST: 0.0
********** f = VARIABLE_1 is NUMBER then return
VARIABLE_1 == NUMBER return: 0.0
********** f = is NUMBER then return false end for
NUMBER return false: -0.6931471805599453
== NUMBER return false: -0.6931471805599453
********** f = the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_0 in the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder VARIABLE_0
VARIABLE in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: -0.6931471805599453
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: -0.6931471805599453
********** f = is NUMBER then return false end for loop
== NUMBER return false: -0.6931471805599453
NUMBER return false: -0.6931471805599453
********** f = return false end for
return false: 0.0
********** f = of VARIABLE_1
VARIABLE_1: -0.6931471805599453
index: -0.6931471805599453
********** f = in the FUNCTION_CALL_3
VARIABLE in FUNCTION_CALL_3: 0.0
********** f = false end for loop return true 
false return true: 0.0
********** f = false end for loop return
false return: 0.0
********** f = false end
false: 0.0
********** f = is NUMBER then
NUMBER: -0.6931471805599453
== NUMBER: -0.6931471805599453
********** f = is NUMBER then return false end for loop return true 
== NUMBER return false return true: -0.6931471805599453
NUMBER return false return true: -0.6931471805599453
********** f = VARIABLE_1 is NUMBER then return false end
VARIABLE_1 == NUMBER return false: 0.0
********** f = in the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder
VARIABLE in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: 0.0
********** f = false end for
false: 0.0
********** f = for loop return true 
return true: 0.0
********** f = NUMBER then return false end
== NUMBER return false: -1.0986122886681098
NUMBER return false: -0.40546510810816444
********** f = if remaineder
if FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 is NUMBER then return false end for loop return true 
VARIABLE_1 == NUMBER return false return true: 0.0
********** f = VARIABLE_1 is NUMBER then return false end for
VARIABLE_1 == NUMBER return false: 0.0
********** f = NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive
NUMBER FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = NUMBER then return false end for loop return
NUMBER return false return: -0.6931471805599453
== NUMBER return false return: -0.6931471805599453
********** f = in the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive
VARIABLE in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if: -0.6931471805599453
********** f = VARIABLE_1 is
VARIABLE_1: -0.40546510810816444
VARIABLE_1 ==: -1.0986122886681098
********** f = remaineder
FUNCTION_CALL_5: 0.0
********** f = NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if
NUMBER FUNCTION_CALL_4 VARIABLE_1 if: 0.0
********** f = for loop return
return: 0.0
********** f = VARIABLE_1 is NUMBER then return false end for loop return
VARIABLE_1 == NUMBER return false return: 0.0
********** f = NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder
NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: 0.0
********** f = is NUMBER then return false end
== NUMBER return false: -0.6931471805599453
NUMBER return false: -0.6931471805599453
********** f = loop return
return: 0.0
********** f = NUMBER then return false end for
== NUMBER return false: -0.6931471805599453
NUMBER return false: -0.6931471805599453
********** f = return false end for loop
return false: 0.0
********** f = NUMBER then return false end for loop
NUMBER return false: -0.6931471805599453
== NUMBER return false: -0.6931471805599453
********** f = true 
true: 0.0
********** f = is NUMBER then return false end for loop return
== NUMBER return false return: -0.6931471805599453
NUMBER return false return: -0.6931471805599453
********** f = NUMBER then return false end for loop return true 
== NUMBER return false return true: -0.6931471805599453
NUMBER return false return true: -0.6931471805599453
********** f = VARIABLE_1 is NUMBER then return false end for loop
VARIABLE_1 == NUMBER return false: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if: -0.6931471805599453
********** f = return false end for loop return true 
return false return true: 0.0
********** f = to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder
FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: 0.0
********** f = return false end for loop return
return false return: 0.0
********** f = in the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if
VARIABLE in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if: 0.0
********** f = is NUMBER then return
== NUMBER return: -0.6931471805599453
NUMBER return: -0.6931471805599453
********** f = the FUNCTION_CALL_3
FUNCTION_CALL_3: -0.2876820724517809
in FUNCTION_CALL_3: -1.3862943611198906
********** f = to FUNCTION_CALL_4 of VARIABLE_1 inclusive if
FUNCTION_CALL_4 VARIABLE_1 if: 0.0
********** f = false end for loop
false: 0.0
********** f = FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1: -0.6931471805599453
********** f = the FUNCTION_CALL_3 NUMBER
FUNCTION_CALL_3 NUMBER: -0.40546510810816444
in FUNCTION_CALL_3 NUMBER: -1.0986122886681098
********** f = the FUNCTION_CALL_3 NUMBER to FUNCTION_CALL_4 of VARIABLE_1 inclusive if remaineder
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: -0.6931471805599453
in FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_1 if FUNCTION_CALL_5: -0.6931471805599453
********** f = return true 
return true: 0.0
********** f = loop return true 
return true: 0.0
********** f = return false end
return false: 0.0
********** f = VARIABLE_1 is NUMBER then
VARIABLE_1 == NUMBER: 0.0
********** f = in the FUNCTION_CALL_3 NUMBER
VARIABLE in FUNCTION_CALL_3 NUMBER: 0.0
********** f = to FUNCTION_CALL_4 of VARIABLE_1 inclusive
FUNCTION_CALL_4 VARIABLE_1: 0.0
********** f = equals NUMBER then return false otherwise if VARIABLE_0
NUMBER return false else if VARIABLE_0: 0.0
********** f = time do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = following if the
= NUMBER if: 0.0
********** f = following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER: 0.0
********** f = time do the following if the FUNCTION_CALL_4
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = otherwise if VARIABLE_0
else if VARIABLE_0: 0.0
********** f = return true otherwise
return true else: 0.0
********** f = do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then
VARIABLE_0 VARIABLE_1 == NUMBER: 0.0
********** f = each time do
+: 0.0
********** f = false end if
false: 0.0
********** f = return false end if
return false: 0.0
********** f = each time do the following if the FUNCTION_CALL_4 of VARIABLE_0
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = true otherwise for
true else for: 0.0
********** f = following if the FUNCTION_CALL_4 of
= NUMBER if FUNCTION_CALL_4: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = otherwise if VARIABLE_0 equals
else if VARIABLE_0: 0.0
********** f = time do the
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = each time do the following if the FUNCTION_CALL_4
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = with VARIABLE_1 equals NUMBER then return false end if end for return true 
VARIABLE_1 == NUMBER return false return true: 0.0
********** f = do
+: 0.0
********** f = incrementing
<: 0.0
********** f = do the following if the FUNCTION_CALL_4 of
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = false
false: 0.0
********** f = equals NUMBER then return false end if end for return true 
NUMBER return false return true: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = NUMBER then return false otherwise if
NUMBER return false else if: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = time do the following
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = return false otherwise if
return false else if: 0.0
********** f = equals NUMBER return true otherwise
NUMBER return true else: 0.0
********** f = with VARIABLE_1 equals
VARIABLE_1 ==: 0.0
********** f = do the following if the FUNCTION_CALL_4
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = if the FUNCTION_CALL_4
= NUMBER if FUNCTION_CALL_4: 0.0
********** f = if end for return true 
return true: 0.0
********** f = equals NUMBER then return false otherwise if
NUMBER return false else if: 0.0
********** f = up to the
==: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = false otherwise if VARIABLE_0
false else if VARIABLE_0: 0.0
********** f = otherwise if
else if: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals
VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then
VARIABLE_0 VARIABLE_1 == NUMBER: 0.0
********** f = following if the FUNCTION_CALL_4
= NUMBER if FUNCTION_CALL_4: 0.0
********** f = for VARIABLE_1 equals NUMBER
for VARIABLE_1 = NUMBER: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end for
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = if VARIABLE_0 equals
if VARIABLE_0: -0.6931471805599453
if VARIABLE_0 ==: -0.6931471805599453
********** f = NUMBER return true otherwise for VARIABLE_1 equals
NUMBER return true else for VARIABLE_1 =: 0.0
********** f = do the following if the FUNCTION_CALL_4 of VARIABLE_0
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = equals NUMBER return true otherwise for VARIABLE_1 equals
NUMBER return true else for VARIABLE_1 =: 0.0
********** f = return false end if end
return false: 0.0
********** f = time do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = equals NUMBER return true
NUMBER return true: 0.0
********** f = equals NUMBER then return false end if
NUMBER return false: 0.0
********** f = false otherwise if VARIABLE_0 equals
false else if VARIABLE_0: 0.0
********** f = false otherwise
false else: 0.0
********** f = of VARIABLE_0
VARIABLE_0: -0.2876820724517809
VARIABLE_0 sublist: -2.0794415416798357
VARIABLE_0 sublist NUMBER: -2.0794415416798357
********** f = false end if end for
false: 0.0
********** f = return false otherwise if VARIABLE_0 equals
return false else if VARIABLE_0: 0.0
********** f = if the FUNCTION_CALL_4 of VARIABLE_0
= NUMBER if FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = up to
==: 0.0
********** f = NUMBER then return false
NUMBER return false: 0.0
********** f = for VARIABLE_1 equals
for VARIABLE_1 =: -1.3862943611198906
for VARIABLE in: -1.3862943611198906
for: -1.3862943611198906
for VARIABLE: -1.3862943611198906
********** f = if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = do the
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = following if the FUNCTION_CALL_4 of VARIABLE_0
= NUMBER if FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = true otherwise for VARIABLE_1 equals
true else for VARIABLE_1 =: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = return false otherwise
return false else: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER: 0.0
********** f = NUMBER then return false end if end
NUMBER return false: 0.0
********** f = VARIABLE_0 with VARIABLE_1
VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = true otherwise
true else: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return
VARIABLE_0 VARIABLE_1 == NUMBER return: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return
VARIABLE_0 VARIABLE_1 == NUMBER return: 0.0
********** f = incrementing VARIABLE_1 each
VARIABLE_1 <: 0.0
********** f = with VARIABLE_1 equals NUMBER then
VARIABLE_1 == NUMBER: 0.0
********** f = equals NUMBER then return false
NUMBER return false: 0.0
********** f = NUMBER return true
NUMBER return true: 0.0
********** f = return true
return true: 0.0
********** f = the following
VARIABLE_1: 0.0
********** f = end for return true 
return true: 0.0
********** f = true otherwise for VARIABLE_1
true else for VARIABLE_1: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = with VARIABLE_1 equals NUMBER then return false end if end for
VARIABLE_1 == NUMBER return false: 0.0
********** f = do the following if the
VARIABLE_1 + = NUMBER if: 0.0
********** f = time do the following if the FUNCTION_CALL_4 of VARIABLE_0
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = with VARIABLE_1
VARIABLE_1 ==: 0.0
********** f = of VARIABLE_0 with VARIABLE_1
VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = NUMBER then return false end if
NUMBER return false: 0.0
********** f = return false end if end for return true 
return false return true: 0.0
********** f = NUMBER then return false otherwise if VARIABLE_0 equals
NUMBER return false else if VARIABLE_0: 0.0
********** f = equals NUMBER then return
NUMBER return: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end for return true 
VARIABLE_0 VARIABLE_1 == NUMBER return false return true: 0.0
********** f = equals NUMBER return
NUMBER return: 0.0
********** f = NUMBER return true otherwise for
NUMBER return true else for: 0.0
********** f = NUMBER then return false otherwise if VARIABLE_0
NUMBER return false else if VARIABLE_0: 0.0
********** f = for return true 
return true: 0.0
********** f = do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = equals NUMBER then return false end
NUMBER return false: 0.0
********** f = otherwise for
else for: 0.0
********** f = up
==: 0.0
********** f = incrementing VARIABLE_1
VARIABLE_1 <: 0.0
********** f = each time do the
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = return true otherwise for VARIABLE_1
return true else for VARIABLE_1: 0.0
********** f = time do the following if the FUNCTION_CALL_4 of
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = equals NUMBER then return false otherwise if VARIABLE_0 equals
NUMBER return false else if VARIABLE_0: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = if the FUNCTION_CALL_4 of
= NUMBER if FUNCTION_CALL_4: 0.0
********** f = otherwise for VARIABLE_1
else for VARIABLE_1: 0.0
********** f = return true otherwise for VARIABLE_1 equals
return true else for VARIABLE_1 =: 0.0
********** f = equals NUMBER then return false otherwise
NUMBER return false else: 0.0
********** f = NUMBER then return false otherwise
NUMBER return false else: 0.0
********** f = with
==: 0.0
********** f = VARIABLE_1 each
VARIABLE_1: 0.0
********** f = following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = NUMBER then return false end if end for return true 
NUMBER return false return true: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end for
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = return false otherwise if VARIABLE_0
return false else if VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end for
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = with VARIABLE_1 equals NUMBER then return
VARIABLE_1 == NUMBER return: 0.0
********** f = true
true: 0.0
********** f = false end if end
false: 0.0
********** f = false otherwise if
false else if: 0.0
********** f = VARIABLE_1 equals NUMBER
VARIABLE_1 = NUMBER: -0.40546510810816444
NUMBER: -1.0986122886681098
********** f = if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return: 0.0
********** f = return false
return false: 0.0
********** f = with VARIABLE_1 equals NUMBER then return false end
VARIABLE_1 == NUMBER return false: 0.0
********** f = return false end if end for
return false: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false end if end
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = with VARIABLE_1 equals NUMBER then return false end if end
VARIABLE_1 == NUMBER return false: 0.0
********** f = time do the following if the
VARIABLE_1 + = NUMBER if: 0.0
********** f = true otherwise for VARIABLE_1 equals NUMBER
true else for VARIABLE_1 = NUMBER: 0.0
********** f = equals NUMBER then return false end if end
NUMBER return false: 0.0
********** f = equals NUMBER then return false end if end for
NUMBER return false: 0.0
********** f = end if end for return true 
return true: 0.0
********** f = equals NUMBER return true otherwise for
NUMBER return true else for: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return false
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = NUMBER return true otherwise
NUMBER return true else: 0.0
********** f = NUMBER return true otherwise for VARIABLE_1
NUMBER return true else for VARIABLE_1: 0.0
********** f = each time do the following if the
VARIABLE_1 + = NUMBER if: 0.0
********** f = with VARIABLE_1 equals NUMBER then return false end if
VARIABLE_1 == NUMBER return false: 0.0
********** f = each time do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = to the FUNCTION_CALL_3
FUNCTION_CALL_3: 0.0
********** f = do the following
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER: 0.0
********** f = each time do the following if the FUNCTION_CALL_4 of
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4: 0.0
********** f = following if
NUMBER if: -0.6931471805599453
if: -0.6931471805599453
********** f = incrementing VARIABLE_1 each time
VARIABLE_1 <: 0.0
********** f = false end if end for return true 
false return true: 0.0
********** f = equals NUMBER return true otherwise for VARIABLE_1
NUMBER return true else for VARIABLE_1: 0.0
********** f = following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = each time do the following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1
VARIABLE_1 + = NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = NUMBER return true otherwise for VARIABLE_1 equals NUMBER
NUMBER return true else for VARIABLE_1 = NUMBER: 0.0
********** f = equals NUMBER return true otherwise for VARIABLE_1 equals NUMBER
NUMBER return true else for VARIABLE_1 = NUMBER: 0.0
********** f = if the
= NUMBER if: -1.9459101490553135
if: -0.15415067982725836
********** f = otherwise
else: -0.6931471805599453
else VARIABLE_3: -2.0794415416798357
NUMBER else VARIABLE_6: -2.0794415416798357
NUMBER else: -2.0794415416798357
else VARIABLE_6: -2.0794415416798357
********** f = with VARIABLE_1 equals NUMBER then return false
VARIABLE_1 == NUMBER return false: 0.0
********** f = of VARIABLE_0 with VARIABLE_1 equals
VARIABLE_0 VARIABLE_1 ==: 0.0
********** f = return true otherwise for VARIABLE_1 equals NUMBER
return true else for VARIABLE_1 = NUMBER: 0.0
********** f = NUMBER then return false end if end for
NUMBER return false: 0.0
********** f = following if the FUNCTION_CALL_4 of VARIABLE_0 with VARIABLE_1 equals NUMBER then return
= NUMBER if FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 == NUMBER return: 0.0
********** f = VARIABLE_0 with VARIABLE_1 equals NUMBER then return false
VARIABLE_0 VARIABLE_1 == NUMBER return false: 0.0
********** f = otherwise for VARIABLE_1 equals
else for VARIABLE_1 =: 0.0
********** f = each time do the following
VARIABLE_1 +: -0.6931471805599453
+: -0.6931471805599453
********** f = otherwise for VARIABLE_1 equals NUMBER
else for VARIABLE_1 = NUMBER: 0.0
********** f = VARIABLE_1 each time
VARIABLE_1: 0.0
********** f = time do
+: 0.0
********** f = return true otherwise for
return true else for: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER
VARIABLE_1 < VARIABLE_2 / NUMBER: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses
NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1 + +: 0.0
********** f = divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0 and
/ NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 plus plus open parentheses VARIABLE_0
VARIABLE_1 + + VARIABLE_0: 0.0
********** f = different than
!=: 0.0
********** f = VARIABLE_2 VARIABLE_1 different than NUMBER
VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = smaller than VARIABLE_2
< VARIABLE_2: 0.0
********** f = VARIABLE_2 divided by NUMBER VARIABLE_1
VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0
NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0 and
< VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than
VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = equal true for
= true for: 0.0
********** f = VARIABLE_1 plus plus open parentheses
VARIABLE_1 + +: 0.0
********** f = by NUMBER VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided
true for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = for VARIABLE_1 equal to NUMBER VARIABLE_1
for VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_2 VARIABLE_1 different than
VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = equal to NUMBER VARIABLE_1
= NUMBER VARIABLE_1: 0.0
********** f = plus plus open parentheses VARIABLE_0 and
+ + VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_1 smaller than VARIABLE_2
NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0
< VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = true for VARIABLE_1
true for VARIABLE_1: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close parenthesis
& = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = VARIABLE_1 different than NUMBER close
VARIABLE_1 != NUMBER: 0.0
********** f = for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than
for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0 and
VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_1 smaller than
NUMBER VARIABLE_1 <: 0.0
********** f = NUMBER VARIABLE_1 smaller than VARIABLE_2 divided
NUMBER VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = VARIABLE_0 equal true for VARIABLE_1 equal to NUMBER
VARIABLE_0 = true for VARIABLE_1 = NUMBER: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1: 0.0
********** f = true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2
true for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close parenthesis return VARIABLE_0 
& = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2
VARIABLE_1 < VARIABLE_2: 0.0
********** f = equal FUNCTION_CALL_4
= FUNCTION_CALL_4: 0.0
********** f = equal true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2
= true for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0 and
NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close parenthesis return VARIABLE_0 
& = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER return VARIABLE_0: 0.0
********** f = than NUMBER close
NUMBER: 0.0
********** f = NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1
NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = different
!=: 0.0
********** f = equal true for VARIABLE_1 equal to NUMBER
= true for VARIABLE_1 = NUMBER: 0.0
********** f = smaller than VARIABLE_2 divided by NUMBER
< VARIABLE_2 / NUMBER: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0
VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses
VARIABLE_2 / NUMBER VARIABLE_1 + +: 0.0
********** f = divided by NUMBER VARIABLE_1 plus plus open parentheses
/ NUMBER VARIABLE_1 + +: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1: 0.0
********** f = VARIABLE_0 equal true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than
VARIABLE_0 = true for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = equal to NUMBER VARIABLE_1 smaller than
= NUMBER VARIABLE_1 <: 0.0
********** f = plus plus open parentheses VARIABLE_0
+ + VARIABLE_0: 0.0
********** f = smaller than VARIABLE_2 divided by NUMBER VARIABLE_1
< VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = divided by NUMBER VARIABLE_1
/ NUMBER VARIABLE_1: 0.0
********** f = and equal FUNCTION_CALL_4
= FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 equal true
VARIABLE_0 = true: 0.0
********** f = VARIABLE_0 equal true for VARIABLE_1 equal to NUMBER VARIABLE_1
VARIABLE_0 = true for VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_0 and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close parenthesis
VARIABLE_0 & = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = close parenthesis
&: 0.0
********** f = VARIABLE_0 equal true for VARIABLE_1 equal to
VARIABLE_0 = true for VARIABLE_1 =: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2
FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = true for VARIABLE_1 equal to
true for VARIABLE_1 =: 0.0
********** f = equal true for VARIABLE_1
= true for VARIABLE_1: 0.0
********** f = smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses
< VARIABLE_2 / NUMBER VARIABLE_1 + +: 0.0
********** f = VARIABLE_2 divided by NUMBER
VARIABLE_2 / NUMBER: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1
VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_0 equal
VARIABLE_0 =: -1.0986122886681098
VARIABLE_0: -0.40546510810816444
********** f = true for VARIABLE_1 equal to NUMBER
true for VARIABLE_1 = NUMBER: 0.0
********** f = VARIABLE_1 equal to
VARIABLE_1 =: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = VARIABLE_2 VARIABLE_1 different
VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = equal true for VARIABLE_1 equal to NUMBER VARIABLE_1
= true for VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 plus plus open parentheses VARIABLE_0 and
VARIABLE_1 + + VARIABLE_0: 0.0
********** f = equal true for VARIABLE_1 equal to
= true for VARIABLE_1 =: 0.0
********** f = true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than
true for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER
= NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER: 0.0
********** f = true for
true for: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided
VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_2 divided
VARIABLE_2 /: 0.0
********** f = VARIABLE_1 different than NUMBER
VARIABLE_1 != NUMBER: 0.0
********** f = NUMBER close
NUMBER: 0.0
********** f = NUMBER VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2
= FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = VARIABLE_2 VARIABLE_1
VARIABLE_2 VARIABLE_1: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_0 equal true for
VARIABLE_0 = true for: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than
FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 !=: 0.0
********** f = smaller than VARIABLE_2 divided
< VARIABLE_2 /: 0.0
********** f = VARIABLE_2 VARIABLE_1 different than NUMBER close
VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = VARIABLE_1 equal to NUMBER
VARIABLE_1 = NUMBER: 0.0
********** f = parenthesis
&: 0.0
********** f = NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER
NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER: 0.0
********** f = equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1
= NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_0 equal true for VARIABLE_1
VARIABLE_0 = true for VARIABLE_1: 0.0
********** f = divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0
/ NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = different than NUMBER close
!= NUMBER: 0.0
********** f = VARIABLE_1 different
VARIABLE_1 !=: 0.0
********** f = by NUMBER VARIABLE_1 plus plus open parentheses
NUMBER VARIABLE_1 + +: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close parenthesis
& = FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0
VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided
for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2
for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = VARIABLE_1 different than
VARIABLE_1 !=: 0.0
********** f = return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = for VARIABLE_1 equal to NUMBER
for VARIABLE_1 = NUMBER: 0.0
********** f = equal true for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than
= true for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = for VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER
for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER: 0.0
********** f = different than NUMBER
!= NUMBER: 0.0
********** f = and equal FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 different than NUMBER close
= FUNCTION_CALL_4 VARIABLE_2 VARIABLE_1 != NUMBER: 0.0
********** f = and equal
=: 0.0
********** f = true for VARIABLE_1 equal to NUMBER VARIABLE_1
true for VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 / NUMBER: 0.0
********** f = equal to NUMBER VARIABLE_1 smaller than VARIABLE_2
= NUMBER VARIABLE_1 < VARIABLE_2: 0.0
********** f = equal to NUMBER VARIABLE_1 smaller than VARIABLE_2 divided
= NUMBER VARIABLE_1 < VARIABLE_2 /: 0.0
********** f = VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses VARIABLE_0 and
VARIABLE_2 / NUMBER VARIABLE_1 + + VARIABLE_0: 0.0
********** f = equal true
= true: 0.0
********** f = for VARIABLE_1 equal to
for VARIABLE_1 =: 0.0
********** f = VARIABLE_1 smaller than VARIABLE_2 divided by NUMBER VARIABLE_1 plus plus open parentheses
VARIABLE_1 < VARIABLE_2 / NUMBER VARIABLE_1 + +: 0.0
********** f = equal FUNCTION_CALL_4 VARIABLE_2
= FUNCTION_CALL_4 VARIABLE_2: 0.0
********** f = than NUMBER
NUMBER: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = VARIABLE_1 smaller than
VARIABLE_1 <: 0.0
********** f = let VARIABLE_0 equal
VARIABLE_0 =: 0.0
********** f = NUMBER end
NUMBER: 0.0
********** f = equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do
= NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = do return false end
return false: 0.0
********** f = equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do if
= NUMBER while VARIABLE_2 < VARIABLE_0 if: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0 do
NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_2
NUMBER while VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1
FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = do return false end if VARIABLE_2 is equal to VARIABLE_2 plus
return false VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end return true 
VARIABLE_2 = VARIABLE_2 + NUMBER return true: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus
== NUMBER return false VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = to NUMBER do return false end
NUMBER return false: 0.0
********** f = is less than VARIABLE_0
< VARIABLE_0: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = end if VARIABLE_2 is equal
VARIABLE_2: 0.0
********** f = if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end return true 
VARIABLE_2 = VARIABLE_2 + NUMBER return true: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1
if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if
VARIABLE_2 == NUMBER return false: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is
VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1
FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = VARIABLE_2 equals NUMBER while
VARIABLE_2 = NUMBER while: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus
NUMBER return false VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = plus NUMBER end
+ NUMBER: 0.0
********** f = to VARIABLE_2 plus NUMBER
= VARIABLE_2 + NUMBER: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0
NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal to
VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2 =: 0.0
********** f = equals NUMBER while VARIABLE_2
= NUMBER while VARIABLE_2: 0.0
********** f = do return false end if VARIABLE_2 is equal to VARIABLE_2
return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal
VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = let
=: -0.2231435513142097
= NUMBER: -1.6094379124341003
********** f = to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2
NUMBER return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is
NUMBER return false VARIABLE_2: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = if VARIABLE_2
VARIABLE_2: -1.0986122886681098
if VARIABLE_2: -0.40546510810816444
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = do return false end if
return false: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = end if VARIABLE_2 is equal to
VARIABLE_2 =: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = is equal to VARIABLE_2 plus NUMBER
= VARIABLE_2 + NUMBER: 0.0
********** f = do if FUNCTION_CALL_6
if FUNCTION_CALL_6: 0.0
********** f = if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_2 plus NUMBER end
VARIABLE_2 + NUMBER: 0.0
********** f = equal to NUMBER do return false end if
NUMBER return false: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if
while VARIABLE_2 < VARIABLE_0 if: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6
NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2
NUMBER return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end return true 
VARIABLE_2 = VARIABLE_2 + NUMBER return true: 0.0
********** f = do return false end if VARIABLE_2 is equal to
return false VARIABLE_2 =: 0.0
********** f = do return false end if VARIABLE_2
return false VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end
VARIABLE_2 == NUMBER return false: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal to
NUMBER return false VARIABLE_2 =: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2
NUMBER return false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2
== NUMBER return false VARIABLE_2: 0.0
********** f = do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1
FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is equal to
NUMBER return false VARIABLE_2 =: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if
VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = to VARIABLE_2 plus NUMBER end return true 
= VARIABLE_2 + NUMBER return true: 0.0
********** f = FUNCTION_CALL_5 of
FUNCTION_CALL_5: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2
VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = equal to VARIABLE_2 plus NUMBER end return true 
= VARIABLE_2 + NUMBER return true: 0.0
********** f = do return false end if VARIABLE_2 is equal
return false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do
VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = to NUMBER do return false end if VARIABLE_2
NUMBER return false VARIABLE_2: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is equal to
NUMBER return false VARIABLE_2 =: 0.0
********** f = equal to VARIABLE_2 plus NUMBER end
= VARIABLE_2 + NUMBER: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = is less than VARIABLE_0 do
< VARIABLE_0: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = NUMBER do return false end if VARIABLE_2
NUMBER return false VARIABLE_2: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = end return true 
return true: 0.0
********** f = VARIABLE_2 plus NUMBER
VARIABLE_2 + NUMBER: 0.0
********** f = the FUNCTION_CALL_4
FUNCTION_CALL_4: -0.11778303565638351
= FUNCTION_CALL_4: -2.1972245773362196
********** f = VARIABLE_1 VARIABLE_2 is equal to
VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of
VARIABLE_0 = FUNCTION_CALL_4: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do
while VARIABLE_2 < VARIABLE_0: 0.0
********** f = NUMBER do return false end if
NUMBER return false: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus
NUMBER return false VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = is equal to VARIABLE_2 plus NUMBER end return true 
= VARIABLE_2 + NUMBER return true: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = if FUNCTION_CALL_6
if FUNCTION_CALL_6: 0.0
********** f = equal to NUMBER do return false
NUMBER return false: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal to
VARIABLE_2 == NUMBER return false VARIABLE_2 =: 0.0
********** f = end if VARIABLE_2
VARIABLE_2: 0.0
********** f = is equal to NUMBER do return false end
== NUMBER return false: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = VARIABLE_0 equal the
VARIABLE_0: 0.0
********** f = VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do if
VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0 if: 0.0
********** f = VARIABLE_1 VARIABLE_2
VARIABLE_1 VARIABLE_2: 0.0
********** f = plus NUMBER
+ NUMBER: -0.2231435513142097
NUMBER: -1.6094379124341003
********** f = VARIABLE_1 VARIABLE_2 is
VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = if VARIABLE_2 is equal to VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6
= NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = to NUMBER do return false end if
NUMBER return false: 0.0
********** f = if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = if VARIABLE_2 is equal to
VARIABLE_2 =: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal
NUMBER return false VARIABLE_2: 0.0
********** f = equals NUMBER while VARIABLE_2 is less than VARIABLE_0
= NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = equal to VARIABLE_2 plus NUMBER
= VARIABLE_2 + NUMBER: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2 is equal
== NUMBER return false VARIABLE_2: 0.0
********** f = do return false
return false: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2
VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal
VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false
VARIABLE_2 == NUMBER return false: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end
VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2 is equal to
== NUMBER return false VARIABLE_2 =: 0.0
********** f = let VARIABLE_0 equal the
VARIABLE_0 =: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER
VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal
VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2 is
== NUMBER return false VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is
NUMBER return false VARIABLE_2: 0.0
********** f = let VARIABLE_0
VARIABLE_0 =: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = NUMBER do return false end
NUMBER return false: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0
while VARIABLE_2 < VARIABLE_0: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2
NUMBER return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = the FUNCTION_CALL_4 of
FUNCTION_CALL_4: -0.2876820724517809
= FUNCTION_CALL_4: -1.3862943611198906
********** f = if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is
NUMBER return false VARIABLE_2: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1
if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false
VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do
VARIABLE_2 < VARIABLE_0: 0.0
********** f = NUMBER end return true 
NUMBER return true: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end if
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = end if VARIABLE_2 is equal to VARIABLE_2
VARIABLE_2 = VARIABLE_2: 0.0
********** f = VARIABLE_2 equals NUMBER while VARIABLE_2
VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = plus NUMBER end return true 
+ NUMBER return true: 0.0
********** f = equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1
= NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER: 0.0
********** f = is equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2
== NUMBER return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = is equal to NUMBER do return false
== NUMBER return false: 0.0
********** f = is equal to NUMBER do return false end if
== NUMBER return false: 0.0
********** f = VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0
VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0
VARIABLE_2 < VARIABLE_0: 0.0
********** f = do return false end if VARIABLE_2 is
return false VARIABLE_2: 0.0
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = equal to NUMBER do return false end
NUMBER return false: 0.0
********** f = equal the FUNCTION_CALL_4 of
FUNCTION_CALL_4: -0.40546510810816444
= FUNCTION_CALL_4: -1.0986122886681098
********** f = the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is equal
NUMBER return false VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = to VARIABLE_2 plus NUMBER end
= VARIABLE_2 + NUMBER: 0.0
********** f = NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1
NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = VARIABLE_2 plus NUMBER end return true 
VARIABLE_2 + NUMBER return true: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4
VARIABLE_0 = FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_6
FUNCTION_CALL_6: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER: 0.0
********** f = NUMBER while VARIABLE_2 is less than VARIABLE_0 do if
NUMBER while VARIABLE_2 < VARIABLE_0 if: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER end
VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = equal the FUNCTION_CALL_4
FUNCTION_CALL_4: -0.40546510810816444
= FUNCTION_CALL_4: -1.0986122886681098
********** f = equals NUMBER while
= NUMBER while: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to NUMBER do return false end
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 == NUMBER return false: 0.0
********** f = equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2
VARIABLE_2 == NUMBER return false VARIABLE_2 = VARIABLE_2: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6
< VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = if VARIABLE_2 is equal
VARIABLE_2: 0.0
********** f = end if VARIABLE_2 is
VARIABLE_2: 0.0
********** f = is equal to VARIABLE_2 plus NUMBER end
= VARIABLE_2 + NUMBER: 0.0
********** f = the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals NUMBER while VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 = NUMBER while VARIABLE_2: 0.0
********** f = do if
if: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = NUMBER do return false
NUMBER return false: 0.0
********** f = to NUMBER do return false
NUMBER return false: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if
VARIABLE_2 < VARIABLE_0 if: 0.0
********** f = VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2
VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2: 0.0
********** f = end if VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = if VARIABLE_2 is equal to VARIABLE_2 plus
VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is equal
NUMBER return false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal
FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1: 0.0
********** f = while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = VARIABLE_2 is equal to NUMBER do return false end if VARIABLE_2 is
VARIABLE_2 == NUMBER return false VARIABLE_2: 0.0
********** f = equal to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus
NUMBER return false VARIABLE_2 = VARIABLE_2 +: 0.0
********** f = VARIABLE_2 equals NUMBER while VARIABLE_2 is less than VARIABLE_0 do if FUNCTION_CALL_6
VARIABLE_2 = NUMBER while VARIABLE_2 < VARIABLE_0 if FUNCTION_CALL_6: 0.0
********** f = is less than VARIABLE_0 do if FUNCTION_CALL_6 VARIABLE_1
< VARIABLE_0 if FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2
FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2: 0.0
********** f = to NUMBER do return false end if VARIABLE_2 is equal to VARIABLE_2 plus NUMBER
NUMBER return false VARIABLE_2 = VARIABLE_2 + NUMBER: 0.0
********** f = while VARIABLE_2
while VARIABLE_2: 0.0
********** f = do if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 is equal to
if FUNCTION_CALL_6 VARIABLE_1 VARIABLE_2 ==: 0.0
********** f = is less than VARIABLE_0 do if
< VARIABLE_0 if: 0.0
********** f = let VARIABLE_0 equal the FUNCTION_CALL_4 of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
VARIABLE_0 = FUNCTION_CALL_4 FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = if VARIABLE_2 is
VARIABLE_2: -0.6931471805599453
if VARIABLE_2: -0.6931471805599453
********** f = of the FUNCTION_CALL_5 of VARIABLE_1 VARIABLE_2 equals
FUNCTION_CALL_5 VARIABLE_1 VARIABLE_2 =: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to
for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = multiplied by VARIABLE_1 end for returns VARIABLE_0 
VARIABLE_0 * VARIABLE_1 return VARIABLE_0: 0.0
********** f = multiplied by VARIABLE_1 end
VARIABLE_0 * VARIABLE_1: 0.0
********** f = NUMBER for integer VARIABLE_1 equals NUMBER to
NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = equals NUMBER to
= NUMBER: -0.40546510810816444
VARIABLE: -1.0986122886681098
********** f = multiplied by VARIABLE_1 end for
VARIABLE_0 * VARIABLE_1: 0.0
********** f = returns VARIABLE_0 
return VARIABLE_0: 0.0
********** f = for returns VARIABLE_0 
return VARIABLE_0: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end for
VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
+ + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
********** f = multiplied by VARIABLE_1 end for returns
VARIABLE_0 * VARIABLE_1: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end for returns
VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
+ + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
********** f = end for returns
VARIABLE_0: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to VARIABLE_2
for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: -0.6931471805599453
for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 VARIABLE_1: -0.6931471805599453
********** f = for returns VARIABLE_0
VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end
VARIABLE_2 VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = integer VARIABLE_1 equals NUMBER to
VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = integer VARIABLE_1 equals NUMBER to VARIABLE_2
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: -0.6931471805599453
VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_0 equals NUMBER for integer VARIABLE_1 equals NUMBER to
VARIABLE_0 = NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = returns VARIABLE_0
VARIABLE_0: 0.0
********** f = VARIABLE_0 
return VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = integer
<: 0.0
********** f = VARIABLE_1 equals NUMBER to
VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = NUMBER for integer VARIABLE_1 equals NUMBER to VARIABLE_2
NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2 VARIABLE_1: -0.6931471805599453
NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_0 equals NUMBER for
VARIABLE_0 = NUMBER for: 0.0
********** f = equals NUMBER for integer VARIABLE_1 equals NUMBER to VARIABLE_2
= NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 < VARIABLE_2: -0.6931471805599453
********** f = multiplied by VARIABLE_1
* VARIABLE_1: -0.2231435513142097
VARIABLE_2 * VARIABLE_1: -1.6094379124341003
********** f = VARIABLE_2 VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end for returns
VARIABLE_2 VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = equals NUMBER for
= NUMBER for: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end for returns VARIABLE_0 
+ + VARIABLE_0 = VARIABLE_0 * VARIABLE_1 return VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end
+ + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_2 VARIABLE_0 equals VARIABLE_0 multiplied by VARIABLE_1 end for
VARIABLE_2 VARIABLE_1 + + VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = equals NUMBER for integer VARIABLE_1 equals NUMBER to
= NUMBER for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = VARIABLE_2 VARIABLE_0 equals VARIABLE_0
VARIABLE_2 VARIABLE_1 + + VARIABLE_0 =: 0.0
********** f = 
return: -0.40546510810816444
VARIABLE_0: -1.0986122886681098
********** f = equals NUMBER while VARIABLE_0 is less than VARIABLE_4
= NUMBER while VARIABLE_0 < VARIABLE_4: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 =: 0.0
********** f = VARIABLE_1 equals VARIABLE_3 b
VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b
while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2
= VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER while
NUMBER VARIABLE_0 = NUMBER while: 0.0
********** f = NUMBER while VARIABLE_0 is
NUMBER while VARIABLE_0: 0.0
********** f = equals VARIABLE_3 b
= VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER
VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b equals
while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 =: 0.0
********** f = equals VARIABLE_1 end
= VARIABLE_1: 0.0
********** f = VARIABLE_3 equals
VARIABLE_3 =: 0.0
********** f = VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4
VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4: 0.0
********** f = equals VARIABLE_1 end loop return VARIABLE_3 
= VARIABLE_1 return VARIABLE_3: 0.0
********** f = end loop return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = VARIABLE_3 b equals
VARIABLE_3 VARIABLE_3 =: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals
while VARIABLE_0 < VARIABLE_4 VARIABLE_1 =: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER
VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop return VARIABLE_3 
VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 return VARIABLE_3: 0.0
********** f = while VARIABLE_0 is less than
while VARIABLE_0 <: 0.0
********** f = VARIABLE_1 equals VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2
VARIABLE_1 = VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = equals NUMBER VARIABLE_0 equals NUMBER while
= NUMBER VARIABLE_0 = NUMBER while: 0.0
********** f = VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop
VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0
= NUMBER VARIABLE_3 = NUMBER VARIABLE_0: 0.0
********** f = equals VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2
= VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 equals NUMBER while VARIABLE_0 is
VARIABLE_0 = NUMBER while VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3
NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = equals NUMBER VARIABLE_0 equals
= NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals
VARIABLE_2 + VARIABLE_3 VARIABLE_2 =: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1
VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4
VARIABLE_0 < VARIABLE_4: 0.0
********** f = NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals
NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 =: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4
while VARIABLE_0 < VARIABLE_4: 0.0
********** f = while VARIABLE_0 is
while VARIABLE_0: 0.0
********** f = equals NUMBER VARIABLE_3
= NUMBER VARIABLE_3: 0.0
********** f = equals NUMBER VARIABLE_3 equals
= NUMBER VARIABLE_3 =: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4
NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
while VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = equals VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals
= VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 =: 0.0
********** f = less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3
< VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_1 end
VARIABLE_1: -0.40546510810816444
in: -1.0986122886681098
********** f = VARIABLE_0 equals NUMBER while
VARIABLE_0 = NUMBER while: 0.0
********** f = VARIABLE_1 equals VARIABLE_3
VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2
VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals
VARIABLE_0 < VARIABLE_4 VARIABLE_1 =: 0.0
********** f = equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals
= NUMBER VARIABLE_3 = NUMBER VARIABLE_0 =: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0
VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = loop return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 =: 0.0
********** f = equals VARIABLE_3
= VARIABLE_3 VARIABLE_3: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop
VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4
= NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4: 0.0
********** f = equals NUMBER VARIABLE_3 equals NUMBER
= NUMBER VARIABLE_3 = NUMBER: 0.0
********** f = b equals
=: 0.0
********** f = VARIABLE_0 is less than
VARIABLE_0 <: 0.0
********** f = NUMBER VARIABLE_3 equals
NUMBER VARIABLE_3 =: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_0 equals NUMBER while VARIABLE_0 is less than
VARIABLE_0 = NUMBER while VARIABLE_0 <: 0.0
********** f = VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals
VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 =: 0.0
********** f = equals NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
= NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = equals VARIABLE_1 end loop
= VARIABLE_1: 0.0
********** f = VARIABLE_4 VARIABLE_1 equals
VARIABLE_4 VARIABLE_1 =: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2
= VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_1 end loop return VARIABLE_3 
VARIABLE_1 return VARIABLE_3: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is
VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_3
NUMBER VARIABLE_3: 0.0
********** f = less than VARIABLE_4 VARIABLE_1
< VARIABLE_4 VARIABLE_1: 0.0
********** f = equals NUMBER while VARIABLE_0 is less than
= NUMBER while VARIABLE_0 <: 0.0
********** f = less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b
< VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0 equals
VARIABLE_3 = NUMBER VARIABLE_0 =: 0.0
********** f = less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b equals
< VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 =: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3
VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b equals
VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 =: 0.0
********** f = VARIABLE_1 end loop
VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is
NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while VARIABLE_0: 0.0
********** f = equals NUMBER while VARIABLE_0 is
= NUMBER while VARIABLE_0: 0.0
********** f = equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is
= NUMBER VARIABLE_0 = NUMBER while VARIABLE_0: 0.0
********** f = VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = NUMBER while VARIABLE_0 is less than
NUMBER while VARIABLE_0 <: 0.0
********** f = VARIABLE_4 VARIABLE_1 equals VARIABLE_3
VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = equals VARIABLE_3 b equals
= VARIABLE_3 VARIABLE_3 =: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b equals
VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3 =: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3 equals
VARIABLE_2 = NUMBER VARIABLE_3 =: 0.0
********** f = VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1
VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while
VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3
VARIABLE_2 = NUMBER VARIABLE_3: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while
NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER
NUMBER VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = VARIABLE_3 equals NUMBER
VARIABLE_3 = NUMBER: 0.0
********** f = equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while
= NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while: 0.0
********** f = while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3
while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_3 b
VARIABLE_3 VARIABLE_3: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER
NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop return VARIABLE_3 
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 return VARIABLE_3: 0.0
********** f = VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b
VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = less than VARIABLE_4 VARIABLE_1 equals
< VARIABLE_4 VARIABLE_1 =: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER
NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2
VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2: 0.0
********** f = equals NUMBER VARIABLE_0 equals NUMBER
= NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals
VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 =: 0.0
********** f = NUMBER while VARIABLE_0 is less than VARIABLE_4
NUMBER while VARIABLE_0 < VARIABLE_4: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than
VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 <: 0.0
********** f = NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b
NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end
VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is
NUMBER VARIABLE_0 = NUMBER while VARIABLE_0: 0.0
********** f = VARIABLE_3 b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end
VARIABLE_3 VARIABLE_3 = VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_3 equals NUMBER VARIABLE_0
VARIABLE_3 = NUMBER VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals
NUMBER VARIABLE_3 = NUMBER VARIABLE_0 =: 0.0
********** f = NUMBER VARIABLE_3 equals NUMBER VARIABLE_0
NUMBER VARIABLE_3 = NUMBER VARIABLE_0: 0.0
********** f = equals NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than
= NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 <: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3 equals NUMBER
VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals
VARIABLE_2 = NUMBER VARIABLE_3 = NUMBER VARIABLE_0 =: 0.0
********** f = b equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_4 VARIABLE_1
VARIABLE_4 VARIABLE_1: 0.0
********** f = VARIABLE_1 equals VARIABLE_3 b equals
VARIABLE_1 = VARIABLE_3 VARIABLE_3 =: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than
NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 <: 0.0
********** f = equals VARIABLE_2 plus VARIABLE_3 VARIABLE_2 equals VARIABLE_1 end loop return VARIABLE_3 
= VARIABLE_2 + VARIABLE_3 VARIABLE_2 = VARIABLE_1 return VARIABLE_3: 0.0
********** f = VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals VARIABLE_3 b
VARIABLE_0 < VARIABLE_4 VARIABLE_1 = VARIABLE_3 VARIABLE_3: 0.0
********** f = NUMBER VARIABLE_0 equals NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1
NUMBER VARIABLE_0 = NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1: 0.0
********** f = equals NUMBER while VARIABLE_0 is less than VARIABLE_4 VARIABLE_1 equals
= NUMBER while VARIABLE_0 < VARIABLE_4 VARIABLE_1 =: 0.0
********** f = equals NUMBER VARIABLE_3 equals NUMBER VARIABLE_0 equals NUMBER
= NUMBER VARIABLE_3 = NUMBER VARIABLE_0 = NUMBER: 0.0
********** f = set VARIABLE_0 is equal
VARIABLE_0 =: 0.0
********** f = FUNCTION_CALL_4 NUMBER to
FUNCTION_CALL_4 NUMBER: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to
FUNCTION_CALL_4 NUMBER: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 =: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0
NUMBER VARIABLE_2 VARIABLE_0: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1
NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1: 0.0
********** f = NUMBER for VARIABLE_1 in
NUMBER for VARIABLE: -0.40546510810816444
NUMBER for: -1.0986122886681098
********** f = NUMBER to VARIABLE_2
NUMBER VARIABLE_2: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1
VARIABLE_2 VARIABLE_0 = VARIABLE_1: 0.0
********** f = inclusive VARIABLE_0 equals VARIABLE_1 times
VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = VARIABLE_2 inclusive
VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 equals
VARIABLE_0 =: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 equals
VARIABLE_2 VARIABLE_0 =: 0.0
********** f = equals VARIABLE_1 times
= VARIABLE_1 *: 0.0
********** f = set VARIABLE_0 is equal NUMBER for VARIABLE_1
VARIABLE_0 = NUMBER for: 0.0
********** f = set VARIABLE_0 is equal NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = the FUNCTION_CALL_4 NUMBER
FUNCTION_CALL_4 NUMBER: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1 times
VARIABLE_2 VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = VARIABLE_1 in the
VARIABLE: 0.0
********** f = set VARIABLE_0 is equal NUMBER for
VARIABLE_0 = NUMBER for: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1 times
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = to VARIABLE_2 inclusive
VARIABLE_2: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0
VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1
VARIABLE_2 VARIABLE_0 = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1 times
VARIABLE_2 VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 =: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0
VARIABLE_2 VARIABLE_0: 0.0
********** f = set VARIABLE_0 is equal NUMBER for VARIABLE_1 in the
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 equals
VARIABLE_2 VARIABLE_0 =: 0.0
********** f = VARIABLE_0 equals VARIABLE_1 times
VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = inclusive VARIABLE_0
VARIABLE_0: 0.0
********** f = NUMBER to VARIABLE_2 inclusive
NUMBER VARIABLE_2: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1 times
NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1 times
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1 *: 0.0
********** f = VARIABLE_1 times
VARIABLE_1 *: 0.0
********** f = set VARIABLE_0 is equal NUMBER for VARIABLE_1 in
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = FUNCTION_CALL_4 NUMBER
FUNCTION_CALL_4 NUMBER: 0.0
********** f = NUMBER for VARIABLE_1
NUMBER for: 0.0
********** f = VARIABLE_0 equals VARIABLE_1
VARIABLE_0 = VARIABLE_1: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals
NUMBER VARIABLE_2 VARIABLE_0 =: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 equals VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = for VARIABLE_1 in
for VARIABLE: -0.2876820724517809
for: -1.3862943611198906
********** f = inclusive VARIABLE_0 equals VARIABLE_1
VARIABLE_0 = VARIABLE_1: 0.0
********** f = NUMBER for VARIABLE_1 in the
NUMBER for VARIABLE: -0.40546510810816444
NUMBER for: -1.0986122886681098
********** f = for VARIABLE_1 in the
for VARIABLE: -0.2876820724517809
for: -1.3862943611198906
********** f = VARIABLE_0 is NUMBER
VARIABLE_0 == NUMBER: 0.0
********** f = NUMBER return NUMBER else return
NUMBER return NUMBER else return: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2
VARIABLE_0 * FUNCTION_CALL_2: 0.0
********** f = VARIABLE_0 minus NUMBER
VARIABLE_0 - NUMBER: -0.2231435513142097
VARIABLE_0 - NUMBER VARIABLE_0: -1.6094379124341003
********** f = if VARIABLE_0 is NUMBER or
if VARIABLE_0 == NUMBER or VARIABLE_0: -0.6931471805599453
if VARIABLE_0 == NUMBER or: -0.6931471805599453
********** f = times FUNCTION_CALL_2
* FUNCTION_CALL_2: 0.0
********** f = if VARIABLE_0 is NUMBER
if VARIABLE_0 == NUMBER: 0.0
********** f = NUMBER or
NUMBER or: -0.6931471805599453
NUMBER or VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 minus
VARIABLE_0 -: 0.0
********** f = NUMBER return NUMBER else return VARIABLE_0 times FUNCTION_CALL_2 of
== NUMBER return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2: -0.6931471805599453
********** f = or
or VARIABLE_0: -2.1972245773362196
or: -1.5040773967762742
<=: -1.0986122886681098
FUNCTION_CALL_11 VARIABLE_6 or: -2.1972245773362196
VARIABLE_6 or: -2.1972245773362196
or VARIABLE_7: -2.1972245773362196
********** f = NUMBER return NUMBER else return VARIABLE_0 times FUNCTION_CALL_2
NUMBER return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2: 0.0
********** f = NUMBER return NUMBER else return VARIABLE_0 times
NUMBER return NUMBER else return VARIABLE_0 *: 0.0
********** f = minus NUMBER
- NUMBER: -0.2876820724517809
-: -2.0794415416798357
- NUMBER VARIABLE_0: -2.0794415416798357
********** f = minus NUMBER 
- NUMBER: 0.0
********** f = minus
-: 0.0
********** f = VARIABLE_0 minus NUMBER 
VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER return NUMBER else return VARIABLE_0
NUMBER return NUMBER else return VARIABLE_0: 0.0
********** f = VARIABLE_0 is NUMBER or
VARIABLE_0 == NUMBER or VARIABLE_0: -0.6931471805599453
VARIABLE_0 == NUMBER or: -0.6931471805599453
********** f = NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = set VARIABLE_0 to VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER
FUNCTION_CALL_4 NUMBER: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER: -0.6931471805599453
********** f = set VARIABLE_0 to VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER
FUNCTION_CALL_4 NUMBER: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4
FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 to
VARIABLE_0 =: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end for
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to
FUNCTION_CALL_4 NUMBER: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER: -0.6931471805599453
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = VARIABLE_0 to NUMBER for
VARIABLE_0 = NUMBER for: 0.0
********** f = VARIABLE_0 to NUMBER for VARIABLE_1 in the
VARIABLE_0 = NUMBER for: 0.0
********** f = VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = VARIABLE_0 to NUMBER for VARIABLE_1
VARIABLE_0 = NUMBER for: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = loop return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = initialize VARIABLE_0 to NUMBER for VARIABLE_1 in
VARIABLE_0 = NUMBER for VARIABLE: -0.6931471805599453
VARIABLE_0 = NUMBER for VARIABLE in: -0.6931471805599453
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = to NUMBER for VARIABLE_1 in the
= NUMBER for: 0.0
********** f = NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = initialize VARIABLE_0 to NUMBER for VARIABLE_1
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end for
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to
FUNCTION_CALL_4 NUMBER: 0.0
********** f = for loop return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = to NUMBER for VARIABLE_1 in
= NUMBER for: 0.0
********** f = initialize VARIABLE_0 to NUMBER for
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = to NUMBER for VARIABLE_1
= NUMBER for: 0.0
********** f = to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive
FUNCTION_CALL_4 NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end for loop
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = inclusive set VARIABLE_0 to VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4
FUNCTION_CALL_4: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4: -0.6931471805599453
********** f = VARIABLE_0 to NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = initialize VARIABLE_0 to NUMBER for VARIABLE_1 in the
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 to NUMBER for VARIABLE_1 in
VARIABLE_0 = NUMBER for: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by VARIABLE_1 end
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 * VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive set VARIABLE_0 to VARIABLE_0 multiplied by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = is equal to NUMBER return
== NUMBER return: 0.0
********** f = that 
return: 0.0
********** f = by VARIABLE_0 and then return that
VARIABLE_0: 0.0
********** f = by VARIABLE_0 and then
VARIABLE_0: 0.0
********** f = NUMBER multiply this
NUMBER * VARIABLE_0: -0.6931471805599453
NUMBER *: -0.6931471805599453
********** f = minus NUMBER multiply this by VARIABLE_0
VARIABLE_0 - NUMBER *: -0.6931471805599453
VARIABLE_0 - NUMBER * VARIABLE_0: -0.6931471805599453
********** f = is equal to NUMBER return NUMBER otherwise recursively calculate the
== NUMBER return NUMBER else: 0.0
********** f = FUNCTION_CALL_2 of
FUNCTION_CALL_2: 0.0
********** f = return that 
return: 0.0
********** f = minus NUMBER multiply this by VARIABLE_0 and
VARIABLE_0 - NUMBER *: -0.6931471805599453
VARIABLE_0 - NUMBER * VARIABLE_0: -0.6931471805599453
********** f = by VARIABLE_0 and then return
VARIABLE_0: 0.0
********** f = to NUMBER return NUMBER otherwise recursively calculate the
NUMBER return NUMBER else: 0.0
********** f = minus NUMBER multiply this by
- NUMBER * VARIABLE_0: -0.6931471805599453
- NUMBER *: -0.6931471805599453
********** f = NUMBER return NUMBER otherwise recursively calculate the
NUMBER return NUMBER else: 0.0
********** f = minus NUMBER multiply this by VARIABLE_0 and then return that
VARIABLE_0 - NUMBER *: -0.6931471805599453
VARIABLE_0 - NUMBER * VARIABLE_0: -0.6931471805599453
********** f = minus NUMBER multiply this
- NUMBER *: -0.6931471805599453
- NUMBER * VARIABLE_0: -0.6931471805599453
********** f = multiply this by
* VARIABLE_0: -0.6931471805599453
*: -0.6931471805599453
********** f = by VARIABLE_0 and
VARIABLE_0: 0.0
********** f = minus NUMBER multiply this by VARIABLE_0 and then return
VARIABLE_0 - NUMBER * VARIABLE_0: -0.6931471805599453
VARIABLE_0 - NUMBER *: -0.6931471805599453
********** f = NUMBER multiply this by
NUMBER *: -0.6931471805599453
NUMBER * VARIABLE_0: -0.6931471805599453
********** f = minus NUMBER multiply this by VARIABLE_0 and then
VARIABLE_0 - NUMBER *: -0.6931471805599453
VARIABLE_0 - NUMBER * VARIABLE_0: -0.6931471805599453
********** f = multiply this
* VARIABLE_0: -0.6931471805599453
*: -0.6931471805599453
********** f = return NUMBER
return NUMBER: 0.0
********** f = VARIABLE_0 and then
VARIABLE_0: 0.0
********** f = NUMBER otherwise recursively calculate the
NUMBER else: 0.0
********** f = to NUMBER return NUMBER
NUMBER return NUMBER: 0.0
********** f = VARIABLE_0 and then return that
VARIABLE_0: 0.0
********** f = and then return that 
return: 0.0
********** f = by VARIABLE_0
VARIABLE_0: -0.6931471805599453
VARIABLE_0 +: -0.6931471805599453
********** f = is equal to NUMBER return NUMBER
== NUMBER return NUMBER: 0.0
********** f = otherwise recursively calculate the
else: 0.0
********** f = NUMBER return NUMBER
NUMBER return NUMBER: 0.0
********** f = VARIABLE_0 and then return
VARIABLE_0: 0.0
********** f = to NUMBER return
NUMBER return: 0.0
********** f = then return that 
return: 0.0
********** f = return NUMBER otherwise recursively calculate the
return NUMBER else: 0.0
********** f = VARIABLE_1 decrements by NUMBER each time the VARIABLE_0 is equal to the VARIABLE_0 times
VARIABLE_1 - - VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater
VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater
= VARIABLE_2 VARIABLE_1 >: 0.0
********** f = for loop where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than
for VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = VARIABLE_0 is equal to the
VARIABLE_0 =: 0.0
********** f = than NUMBER and
NUMBER: 0.0
********** f = each time the VARIABLE_0 is equal to the
VARIABLE_0 =: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a
VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater than
VARIABLE_2 VARIABLE_1 >: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 decrements
VARIABLE_1 - -: 0.0
********** f = time the VARIABLE_0 is equal to the VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER
= VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = VARIABLE_0 is equal to the VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = while VARIABLE_1 is greater than NUMBER and VARIABLE_1
VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater than
= VARIABLE_2 VARIABLE_1 >: 0.0
********** f = for loop where VARIABLE_1 is equal to VARIABLE_2
for VARIABLE_1 = VARIABLE_2: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater
= VARIABLE_2 VARIABLE_1 >: 0.0
********** f = the VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = NUMBER and VARIABLE_1 decrements
NUMBER VARIABLE_1 - -: 0.0
********** f = NUMBER and do
NUMBER: 0.0
********** f = each time the VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1
= VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = the VARIABLE_0 is equal to the
VARIABLE_0 =: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = while VARIABLE_1 is greater than
VARIABLE_1 >: 0.0
********** f = each time the VARIABLE_0 is equal to the VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater
VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater than
= VARIABLE_2 VARIABLE_1 >: 0.0
********** f = time the VARIABLE_0 is
VARIABLE_0: 0.0
********** f = where VARIABLE_1 is equal to
VARIABLE_1 =: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater
VARIABLE_2 VARIABLE_1 >: 0.0
********** f = by NUMBER each time the VARIABLE_0 is equal to the VARIABLE_0 times
VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = while VARIABLE_1 is greater than NUMBER
VARIABLE_1 > NUMBER: 0.0
********** f = while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = NUMBER each time the VARIABLE_0 is equal to the VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = NUMBER each time the VARIABLE_0 is equal to the
VARIABLE_0 =: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop where VARIABLE_1 is
VARIABLE_0 = NUMBER for VARIABLE_1: 0.0
********** f = than NUMBER and VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = for loop where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater
for VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
= VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = while VARIABLE_1 is greater
VARIABLE_1 >: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2
VARIABLE_1 = VARIABLE_2: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = NUMBER each time the VARIABLE_0 is
VARIABLE_0: 0.0
********** f = for loop where VARIABLE_1 is
for VARIABLE_1: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2
VARIABLE_1 = VARIABLE_2: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = time the VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = for loop where VARIABLE_1
for VARIABLE_1: 0.0
********** f = where VARIABLE_1
VARIABLE_1: 0.0
********** f = and VARIABLE_1
VARIABLE_1: 0.0
********** f = while VARIABLE_1 is greater than NUMBER and
VARIABLE_1 > NUMBER: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop
VARIABLE_0 = NUMBER for: 0.0
********** f = time the VARIABLE_0 is equal to the
VARIABLE_0 =: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than
VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
= VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop where
VARIABLE_0 = NUMBER for: 0.0
********** f = NUMBER and VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = NUMBER each time the VARIABLE_0 is equal to
VARIABLE_0 =: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER
VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
= VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = decrements
- -: 0.0
********** f = for loop where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER
for VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = the VARIABLE_0 is equal to the VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = for loop where VARIABLE_1 is equal to
for VARIABLE_1 =: 0.0
********** f = equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1 decrements
= VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1 - -: 0.0
********** f = than NUMBER and VARIABLE_1 decrements
NUMBER VARIABLE_1 - -: 0.0
********** f = VARIABLE_1 end the for loop then return the VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = for loop where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and
for VARIABLE_1 = VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = where VARIABLE_1 is
VARIABLE_1: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER
= VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop where VARIABLE_1 is equal to
VARIABLE_0 = NUMBER for VARIABLE_1 =: 0.0
********** f = the VARIABLE_0 is
VARIABLE_0: -0.6931471805599453
VARIABLE_0 ==: -0.6931471805599453
********** f = VARIABLE_1 is equal to
VARIABLE_1 =: 0.0
********** f = and VARIABLE_1 decrements by NUMBER each time the VARIABLE_0 is equal to the VARIABLE_0 times
VARIABLE_1 - - VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = decrements by NUMBER each time the VARIABLE_0 is equal to the VARIABLE_0 times
- - VARIABLE_0 = VARIABLE_0 *: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop where VARIABLE_1
VARIABLE_0 = NUMBER for VARIABLE_1: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater than NUMBER
VARIABLE_2 VARIABLE_1 > NUMBER: 0.0
********** f = where VARIABLE_1 is equal to VARIABLE_2 while VARIABLE_1 is greater than
VARIABLE_1 = VARIABLE_2 VARIABLE_1 >: 0.0
********** f = VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1
VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = and VARIABLE_1 decrements
VARIABLE_1 - -: 0.0
********** f = let VARIABLE_0 equal NUMBER and do a for loop where VARIABLE_1 is equal to VARIABLE_2
VARIABLE_0 = NUMBER for VARIABLE_1 = VARIABLE_2: 0.0
********** f = is equal to VARIABLE_2 while VARIABLE_1 is greater than NUMBER and VARIABLE_1
= VARIABLE_2 VARIABLE_1 > NUMBER VARIABLE_1: 0.0
********** f = each time the VARIABLE_0 is
VARIABLE_0: 0.0
********** f = for loop where
for: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -: 0.0
********** f = minus NUMBER end
- NUMBER: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -: 0.0
********** f = minus NUMBER end if 
- NUMBER: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER end if
NUMBER: 0.0
********** f = NUMBER then return NUMBER
NUMBER return NUMBER: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if 
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = VARIABLE_0 equals NUMBER then
VARIABLE_0 == NUMBER: 0.0
********** f = VARIABLE_0 equals NUMBER then return NUMBER otherwise
VARIABLE_0 == NUMBER return NUMBER else: 0.0
********** f = if VARIABLE_0 equals NUMBER then return
if VARIABLE_0 == NUMBER return: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if 
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if VARIABLE_0 equals NUMBER then return NUMBER otherwise return
if VARIABLE_0 == NUMBER return NUMBER else return: 0.0
********** f = NUMBER otherwise return
NUMBER else return: 0.0
********** f = if VARIABLE_0 equals NUMBER then return NUMBER otherwise
if VARIABLE_0 == NUMBER return NUMBER else: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if 
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER otherwise
NUMBER else: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if 
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = times FUNCTION_CALL_2 of
* FUNCTION_CALL_2: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = if VARIABLE_0 equals NUMBER then
if VARIABLE_0 == NUMBER: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -: 0.0
********** f = minus NUMBER end if
- NUMBER: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return NUMBER otherwise return
return NUMBER else return: 0.0
********** f = VARIABLE_0 equals NUMBER then return NUMBER
VARIABLE_0 == NUMBER return NUMBER: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = otherwise return
else return: 0.0
********** f = NUMBER end if 
NUMBER: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 equals NUMBER then return
VARIABLE_0 == NUMBER return: 0.0
********** f = VARIABLE_0 equals NUMBER then return NUMBER otherwise return
VARIABLE_0 == NUMBER return NUMBER else return: 0.0
********** f = NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if
NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return NUMBER otherwise
return NUMBER else: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if VARIABLE_0 equals NUMBER then return NUMBER
if VARIABLE_0 == NUMBER return NUMBER: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER end if
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER then return NUMBER otherwise
NUMBER return NUMBER else: 0.0
********** f = otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus
else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -: 0.0
********** f = return NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus
return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 -: 0.0
********** f = NUMBER then return NUMBER otherwise return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0
NUMBER return NUMBER else return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER
VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER then return NUMBER otherwise return
NUMBER return NUMBER else return: 0.0
********** f = return VARIABLE_0 times FUNCTION_CALL_2 of VARIABLE_0 minus NUMBER
return VARIABLE_0 * FUNCTION_CALL_2 VARIABLE_0 - NUMBER: 0.0
********** f = return VARIABLE_0 times VARIABLE_0 plus NUMBER
return VARIABLE_0 * ( VARIABLE_0 + NUMBER: 0.0
********** f = times VARIABLE_0 plus NUMBER over
* ( VARIABLE_0 + NUMBER ) /: 0.0
********** f = NUMBER over NUMBER
NUMBER ) / NUMBER: 0.0
********** f = VARIABLE_0 times VARIABLE_0 plus NUMBER
VARIABLE_0 * ( VARIABLE_0 + NUMBER: 0.0
********** f = over
) /: -0.6931471805599453
/: -0.6931471805599453
********** f = return VARIABLE_0 times VARIABLE_0 plus NUMBER over
return VARIABLE_0 * ( VARIABLE_0 + NUMBER ) /: 0.0
********** f = VARIABLE_0 plus NUMBER over NUMBER
VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = plus NUMBER over
+ NUMBER ) /: 0.0
********** f = VARIABLE_0 plus NUMBER
VARIABLE_0 + NUMBER: 0.0
********** f = times VARIABLE_0 plus NUMBER
* ( VARIABLE_0 + NUMBER: 0.0
********** f = VARIABLE_0 times VARIABLE_0
VARIABLE_0 * ( VARIABLE_0: 0.0
********** f = return VARIABLE_0 times VARIABLE_0
return VARIABLE_0 * ( VARIABLE_0: 0.0
********** f = VARIABLE_0 plus NUMBER over
VARIABLE_0 + NUMBER ) /: 0.0
********** f = return VARIABLE_0 times VARIABLE_0 plus
return VARIABLE_0 * ( VARIABLE_0 +: 0.0
********** f = NUMBER over
NUMBER ) /: 0.0
********** f = over NUMBER
) / NUMBER: 0.0
********** f = VARIABLE_0 times VARIABLE_0 plus
VARIABLE_0 * ( VARIABLE_0 +: 0.0
********** f = VARIABLE_0 times VARIABLE_0 plus NUMBER over NUMBER
VARIABLE_0 * ( VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = times VARIABLE_0 plus NUMBER over NUMBER
* ( VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = times VARIABLE_0 plus
* ( VARIABLE_0 +: 0.0
********** f = VARIABLE_0 times VARIABLE_0 plus NUMBER over
VARIABLE_0 * ( VARIABLE_0 + NUMBER ) /: 0.0
********** f = plus NUMBER over NUMBER
+ NUMBER ) / NUMBER: 0.0
********** f = loop and return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = equal NUMBER for VARIABLE_1 in the
NUMBER for VARIABLE: 0.0
********** f = inclusive VARIABLE_0 plus equals VARIABLE_1
VARIABLE_0 + = VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = set VARIABLE_0 to equal NUMBER for
VARIABLE_0 = NUMBER for: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = set VARIABLE_0 to equal NUMBER for VARIABLE_1 in
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1
VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = plus equals VARIABLE_1
+ = VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for loop
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = inclusive VARIABLE_0 plus equals
VARIABLE_0 + =: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus
NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = set VARIABLE_0 to equal NUMBER
VARIABLE_0 = NUMBER: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 plus
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for loop
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = for loop and return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 plus
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for loop
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = to VARIABLE_2 inclusive VARIABLE_0 plus equals
VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1
NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the for
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = inclusive VARIABLE_0 plus
VARIABLE_0 +: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end the
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1 end
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals
NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 plus equals
VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = set VARIABLE_0 to equal
VARIABLE_0 =: 0.0
********** f = and return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = equal NUMBER for VARIABLE_1 in
NUMBER for VARIABLE: 0.0
********** f = set VARIABLE_0 to equal NUMBER for VARIABLE_1
VARIABLE_0 = NUMBER for: 0.0
********** f = equal NUMBER for VARIABLE_1
NUMBER for: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive VARIABLE_0 plus equals
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = VARIABLE_0 plus equals VARIABLE_1
VARIABLE_0 + = VARIABLE_1: 0.0
********** f = VARIABLE_2 inclusive VARIABLE_0 plus equals VARIABLE_1
VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = set VARIABLE_0 to equal NUMBER for VARIABLE_1 in the
VARIABLE_0 = NUMBER for VARIABLE: 0.0
********** f = the for loop and return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = to VARIABLE_2 inclusive increment VARIABLE_0
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by VARIABLE_1 return VARIABLE_0 
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1 return VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by VARIABLE_1
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = to VARIABLE_2 inclusive increment VARIABLE_0 by
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = inclusive increment VARIABLE_0
VARIABLE_0 +: 0.0
********** f = by VARIABLE_1 return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = VARIABLE_0 by
VARIABLE_0: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by VARIABLE_1
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = increment VARIABLE_0
VARIABLE_0 +: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = inclusive increment VARIABLE_0 by
VARIABLE_0 +: 0.0
********** f = inclusive increment
+: 0.0
********** f = NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by
NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = VARIABLE_2 inclusive increment VARIABLE_0 by
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = by VARIABLE_1
VARIABLE_1: 0.0
********** f = increment VARIABLE_0 by
VARIABLE_0 +: 0.0
********** f = VARIABLE_1 return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by
FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = VARIABLE_1 in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + =: 0.0
********** f = NUMBER to VARIABLE_2 inclusive increment VARIABLE_0
NUMBER VARIABLE_2 VARIABLE_0 +: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to VARIABLE_2 inclusive increment VARIABLE_0 by VARIABLE_1
in FUNCTION_CALL_4 NUMBER VARIABLE_2 VARIABLE_0 + = VARIABLE_1: 0.0
********** f = VARIABLE_2 inclusive increment VARIABLE_0
VARIABLE_2 VARIABLE_0 +: 0.0
********** f = add VARIABLE_0
+: 0.0
********** f = between NUMBER and VARIABLE_2
VARIABLE_2: 0.0
********** f = to NUMBER and for
NUMBER for VARIABLE: 0.0
********** f = a
VARIABLE_0: -1.3862943611198906
=: -0.2876820724517809
********** f = result in
FUNCTION_CALL_4: 0.0
********** f = store that result in
in FUNCTION_CALL_4: 0.0
********** f = store that result in VARIABLE_0
in FUNCTION_CALL_4: 0.0
********** f = variable called VARIABLE_0 set equal
VARIABLE_0 = VARIABLE_0: 0.0
********** f = result
FUNCTION_CALL_4: 0.0
********** f = variable called VARIABLE_0
VARIABLE_0 = VARIABLE_0: 0.0
********** f = and VARIABLE_1 and store
=: 0.0
********** f = variable called
= VARIABLE_0: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = and
VARIABLE: -1.6094379124341003
=: -1.6094379124341003
): -1.6094379124341003
VARIABLE_1: -1.6094379124341003
VARIABLE_0 VARIABLE_1: -1.6094379124341003
********** f = in VARIABLE_0 end the loop
VARIABLE_1: 0.0
********** f = create a
VARIABLE_0: 0.0
********** f = end the loop return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = all VARIABLE_1 between NUMBER
NUMBER: 0.0
********** f = all VARIABLE_1 between
NUMBER: 0.0
********** f = VARIABLE_0 and VARIABLE_1 and store
=: 0.0
********** f = all VARIABLE_1
NUMBER: 0.0
********** f = all
NUMBER: 0.0
********** f = equal to NUMBER and for
NUMBER for VARIABLE: 0.0
********** f = add VARIABLE_0 and VARIABLE_1
+: 0.0
********** f = VARIABLE_0 set equal
VARIABLE_0 =: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = store that result in VARIABLE_0 end
in FUNCTION_CALL_4: 0.0
********** f = all VARIABLE_1 between NUMBER and
NUMBER: 0.0
********** f = that result in VARIABLE_0
in FUNCTION_CALL_4: 0.0
********** f = variable called VARIABLE_0 set
VARIABLE_0 = VARIABLE_0: 0.0
********** f = called VARIABLE_0 set
VARIABLE_0: -0.6931471805599453
VARIABLE_0 =: -0.6931471805599453
********** f = all VARIABLE_1 between NUMBER and VARIABLE_2
NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 end the loop return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = called VARIABLE_0
VARIABLE_0: -0.6931471805599453
VARIABLE_0 =: -0.6931471805599453
********** f = called VARIABLE_0 set equal
VARIABLE_0 =: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = and store
=: 0.0
********** f = that result in VARIABLE_0 end
in FUNCTION_CALL_4: 0.0
********** f = the loop return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = store that
in: 0.0
********** f = that result in
in FUNCTION_CALL_4: 0.0
********** f = result in VARIABLE_0 end
FUNCTION_CALL_4: 0.0
********** f = in VARIABLE_0 end the loop return VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = set equal to NUMBER and for
NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 end the loop
VARIABLE_1: 0.0
********** f = that result
in FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 set
VARIABLE_0 =: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 and VARIABLE_1 and
=: 0.0
********** f = result in VARIABLE_0
FUNCTION_CALL_4: 0.0
********** f = VARIABLE_1 between NUMBER and VARIABLE_2
VARIABLE_2: 0.0
********** f = and VARIABLE_1 and
=: 0.0
********** f = store that result
in FUNCTION_CALL_4: 0.0
********** f = add VARIABLE_0 and
+: 0.0
********** f = while VARIABLE_1
while VARIABLE_1 >: 0.0
********** f = add VARIABLE_1 to the VARIABLE_0
VARIABLE_0 +: 0.0
********** f = NUMBER from VARIABLE_1 end
NUMBER VARIABLE_1: 0.0
********** f = equal NUMBER while VARIABLE_1
NUMBER while VARIABLE_1 >: 0.0
********** f = equal NUMBER while
NUMBER while: 0.0
********** f = then subtract NUMBER from VARIABLE_1
NUMBER VARIABLE_1 -: -0.6931471805599453
NUMBER VARIABLE_1 - =: -0.6931471805599453
********** f = VARIABLE_0 equal NUMBER while VARIABLE_1
NUMBER while VARIABLE_1 >: 0.0
********** f = then subtract NUMBER from VARIABLE_1 end
NUMBER VARIABLE_1 -: -0.6931471805599453
NUMBER VARIABLE_1 - =: -0.6931471805599453
********** f = bigger
NUMBER: -0.6931471805599453
>: -0.6931471805599453
********** f = NUMBER while VARIABLE_1
NUMBER while VARIABLE_1 >: 0.0
********** f = add VARIABLE_1 to the
+: 0.0
********** f = then subtract
-: -0.6931471805599453
- =: -0.6931471805599453
********** f = subtract NUMBER from VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = subtract NUMBER
NUMBER: 0.0
********** f = subtract NUMBER from
NUMBER: 0.0
********** f = NUMBER from VARIABLE_1
NUMBER VARIABLE_1: 0.0
********** f = NUMBER from
NUMBER: 0.0
********** f = VARIABLE_0 equal NUMBER while
NUMBER while: 0.0
********** f = add VARIABLE_1
+: 0.0
********** f = variable VARIABLE_0
=: 0.0
********** f = subtract NUMBER from VARIABLE_1 end
NUMBER VARIABLE_1: 0.0
********** f = from VARIABLE_1
VARIABLE_1: 0.0
********** f = variable VARIABLE_0 equal
=: 0.0
********** f = let variable VARIABLE_0 equal
=: 0.0
********** f = let variable VARIABLE_0
=: 0.0
********** f = end while
=: 0.0
********** f = bigger than
NUMBER: -0.6931471805599453
>: -0.6931471805599453
********** f = VARIABLE_1 to the VARIABLE_0
VARIABLE_0: 0.0
********** f = from VARIABLE_1 end
VARIABLE_1: 0.0
********** f = add VARIABLE_1 to
+: 0.0
********** f = VARIABLE_0 equal NUMBER
NUMBER: 0.0
********** f = and VARIABLE_0 multiplied by VARIABLE_0 plus NUMBER divided by NUMBER 
VARIABLE_0 * ( VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = multiplied by VARIABLE_0 plus
( VARIABLE_0 + NUMBER: 0.0
********** f = and VARIABLE_0 multiplied by VARIABLE_0 plus NUMBER divided by NUMBER
VARIABLE_0 * ( VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = multiplied by VARIABLE_0
( VARIABLE_0 +: 0.0
********** f = by NUMBER 
*: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = by VARIABLE_0 plus
VARIABLE_0 + NUMBER: 0.0
********** f = and VARIABLE_0 multiplied by VARIABLE_0 plus NUMBER divided by
VARIABLE_0 * ( VARIABLE_0 + NUMBER ) / NUMBER: 0.0
********** f = multiplied
(: 0.0
********** f = of the VARIABLE_0
VARIABLE_0: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = the for loop then return true 
return true: 0.0
********** f = inclusive if character
if: 0.0
********** f = character at index
index: 0.0
********** f = VARIABLE_0 then
VARIABLE_0: 0.0
********** f = of the VARIABLE_0 for VARIABLE_2
VARIABLE_0 for: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER inclusive if
NUMBER VARIABLE_1 / NUMBER if: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = FUNCTION_CALL_5 NUMBER to VARIABLE_1 over NUMBER
FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER: 0.0
********** f = FUNCTION_CALL_5 NUMBER to VARIABLE_1 over NUMBER inclusive if character at index VARIABLE_2 in VARIABLE_0
FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER if VARIABLE_0 index VARIABLE_2: 0.0
********** f = then return true 
return true: 0.0
********** f = character at index VARIABLE_2 in VARIABLE_0 does not
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = at index VARIABLE_2 in VARIABLE_0
VARIABLE_0 index VARIABLE_2: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus
index VARIABLE_1 - NUMBER -: 0.0
********** f = VARIABLE_0 for
VARIABLE_0 for: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2 in
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 for VARIABLE: 0.0
********** f = equals the FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2
= FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = loop then return true 
return true: 0.0
********** f = then return false
return false: 0.0
********** f = FUNCTION_CALL_5 NUMBER to VARIABLE_1 over NUMBER inclusive if
FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER if: 0.0
********** f = FUNCTION_CALL_5 NUMBER to VARIABLE_1 over NUMBER inclusive
FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER: 0.0
********** f = equals the FUNCTION_CALL_4 of the VARIABLE_0
= FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = does not equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0
!= VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = does not equal character
!=: 0.0
********** f = at index VARIABLE_1
index VARIABLE_1: 0.0
********** f = VARIABLE_1 minus NUMBER minus VARIABLE_2 of
VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = at index VARIABLE_2 in VARIABLE_0 does not equal character
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equals the FUNCTION_CALL_4 of the VARIABLE_0 for
= FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = to VARIABLE_1 over
VARIABLE_1 /: 0.0
********** f = of VARIABLE_0 then
VARIABLE_0: 0.0
********** f = equal character at index VARIABLE_1
index VARIABLE_1: 0.0
********** f = if character at index VARIABLE_2 in VARIABLE_0 does not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = character at index VARIABLE_2 in VARIABLE_0 does not equal
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = for loop then return true 
return true: 0.0
********** f = VARIABLE_1 minus NUMBER minus
VARIABLE_1 - NUMBER -: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER inclusive if character at index VARIABLE_2 in VARIABLE_0 does not
NUMBER VARIABLE_1 / NUMBER if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = inclusive if character at index VARIABLE_2 in VARIABLE_0 does not equal character
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = end the for loop then
in: 0.0
********** f = inclusive if
if: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return: 0.0
********** f = equals the FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2 in
= FUNCTION_CALL_4 VARIABLE_0 for VARIABLE: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = the VARIABLE_0 for VARIABLE_2
VARIABLE_0 for: 0.0
********** f = VARIABLE_0 for VARIABLE_2
VARIABLE_0 for: 0.0
********** f = does not equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then
!= VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = character at index VARIABLE_1
index VARIABLE_1: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER
NUMBER VARIABLE_1 / NUMBER: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = at index VARIABLE_2 in VARIABLE_0 does not equal
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 NUMBER to VARIABLE_1 over NUMBER inclusive if character
FUNCTION_CALL_5 NUMBER VARIABLE_1 / NUMBER if: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus
index VARIABLE_1 - NUMBER -: 0.0
********** f = at index VARIABLE_2 in VARIABLE_0 does not
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = of the VARIABLE_0 for VARIABLE_2 in
VARIABLE_0 for VARIABLE: 0.0
********** f = VARIABLE_1 equals the
VARIABLE_1 =: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return false
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return false: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus
index VARIABLE_1 - NUMBER -: 0.0
********** f = VARIABLE_1 minus NUMBER minus VARIABLE_2
VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2 in
FUNCTION_CALL_4 VARIABLE_0 for VARIABLE: 0.0
********** f = if character at index VARIABLE_2 in VARIABLE_0 does not equal character
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equals the
=: -0.40546510810816444
= NUMBER: -1.0986122886681098
********** f = equals the FUNCTION_CALL_4
= FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 of
VARIABLE_2: 0.0
********** f = minus NUMBER minus VARIABLE_2 of
- NUMBER - VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the
FUNCTION_CALL_4: -0.2876820724517809
= FUNCTION_CALL_4: -1.3862943611198906
********** f = FUNCTION_CALL_4 of the VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: -0.2876820724517809
= FUNCTION_CALL_4 VARIABLE_0: -1.3862943611198906
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = inclusive if character at index VARIABLE_2 in VARIABLE_0 does not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of the VARIABLE_0 for
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = minus NUMBER minus VARIABLE_2
- NUMBER - VARIABLE_2: 0.0
********** f = equals the FUNCTION_CALL_4 of the
= FUNCTION_CALL_4: 0.0
********** f = the VARIABLE_0 for
VARIABLE_0 for: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER inclusive
NUMBER VARIABLE_1 / NUMBER: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 for
FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return false
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return false: 0.0
********** f = does not equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return
!= VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return: 0.0
********** f = minus NUMBER minus
- NUMBER -: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = if character at index VARIABLE_2 in VARIABLE_0
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = equal character at index
index: 0.0
********** f = the VARIABLE_0 for VARIABLE_2 in
VARIABLE_0 for VARIABLE: 0.0
********** f = at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of the
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return: 0.0
********** f = equals the FUNCTION_CALL_4 of
= FUNCTION_CALL_4: 0.0
********** f = inclusive if character at index VARIABLE_2 in VARIABLE_0
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = if character
if: 0.0
********** f = if character at index VARIABLE_2 in VARIABLE_0 does not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = character at index VARIABLE_2 in VARIABLE_0 does not equal character
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = inclusive if character at index VARIABLE_2 in VARIABLE_0 does not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equal character at index VARIABLE_1 minus NUMBER minus VARIABLE_2
index VARIABLE_1 - NUMBER - VARIABLE_2: 0.0
********** f = character at index VARIABLE_2 in VARIABLE_0
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 over
VARIABLE_1 /: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER inclusive if character
NUMBER VARIABLE_1 / NUMBER if: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 for VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 for: 0.0
********** f = character at index VARIABLE_2
index VARIABLE_2: 0.0
********** f = NUMBER to VARIABLE_1 over NUMBER inclusive if character at index VARIABLE_2 in VARIABLE_0
NUMBER VARIABLE_1 / NUMBER if VARIABLE_0 index VARIABLE_2: 0.0
********** f = character at index VARIABLE_1 minus NUMBER minus VARIABLE_2 of VARIABLE_0 then return false
VARIABLE_0 index VARIABLE_1 - NUMBER - VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 for
VARIABLE_0 for: 0.0
********** f = character at index VARIABLE_2 in
index VARIABLE_2: 0.0
********** f = VARIABLE_0 for VARIABLE_2 in
VARIABLE_0 for VARIABLE: 0.0
********** f = VARIABLE_1 equals the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_0 integer
VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0
if VARIABLE_0 index VARIABLE_1: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not
VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = to the character at
index: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of
FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = character at VARIABLE_1 in
index VARIABLE_1: 0.0
********** f = of the VARIABLE_0 minus NUMBER minus VARIABLE_1
VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = equal to the character at
index: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the character
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of
NUMBER FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to the character at
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = VARIABLE_0 minus NUMBER minus VARIABLE_1
VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = the VARIABLE_0 minus NUMBER minus
VARIABLE_0 - NUMBER -: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to the
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 integer divided by NUMBER if the
VARIABLE_0 / NUMBER if: 0.0
********** f = VARIABLE_1 return
VARIABLE_1 return: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the
FUNCTION_CALL_3 NUMBER: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to the character
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
/ NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = to the FUNCTION_CALL_4
FUNCTION_CALL_4: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER if the character
VARIABLE_0 / NUMBER if: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0
VARIABLE_0 index VARIABLE_1: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4
FUNCTION_CALL_4: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer
NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER
VARIABLE_0 / NUMBER: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = integer divided by NUMBER
/ NUMBER: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = minus NUMBER minus VARIABLE_1 return false
- NUMBER - VARIABLE_1 return false: 0.0
********** f = the character at
index: 0.0
********** f = minus VARIABLE_1
- VARIABLE_1: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal to
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = not equal to the character
!=: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = NUMBER to the FUNCTION_CALL_4
NUMBER FUNCTION_CALL_4: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = if the character
if: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER minus VARIABLE_1 return
NUMBER - VARIABLE_1 return: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = is not equal
!= VARIABLE_0: -1.0986122886681098
!=: -0.40546510810816444
********** f = by NUMBER if the character
NUMBER if: 0.0
********** f = is not equal to the character at
!= VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = the character at VARIABLE_1
index: -0.6931471805599453
index VARIABLE_1: -0.6931471805599453
********** f = minus NUMBER minus VARIABLE_1 return
- NUMBER - VARIABLE_1 return: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER if
VARIABLE_0 / NUMBER if: 0.0
********** f = by NUMBER if the
NUMBER if: 0.0
********** f = not equal to the
!=: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
/ NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = is not equal to
!= VARIABLE_0: -1.0986122886681098
!=: -0.40546510810816444
********** f = the FUNCTION_CALL_3 NUMBER to
FUNCTION_CALL_3 NUMBER: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = minus VARIABLE_1 return false
- VARIABLE_1 return false: 0.0
********** f = the VARIABLE_0 minus NUMBER minus VARIABLE_1
VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = equal to the character at VARIABLE_1
index: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = to the character at VARIABLE_1
index: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0
NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to the character
NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = at VARIABLE_1
index: -0.6931471805599453
index VARIABLE_1: -0.6931471805599453
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided
NUMBER FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = divided by NUMBER if
/ NUMBER if: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = not equal
!=: -0.2231435513142097
VARIABLE_1 !=: -1.6094379124341003
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = not equal to
!=: -0.2231435513142097
VARIABLE_1 !=: -1.6094379124341003
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus
FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = at VARIABLE_1 in
index VARIABLE_1: 0.0
********** f = is not equal to the
!= VARIABLE_0: -1.0986122886681098
!=: -0.40546510810816444
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0
NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = of the VARIABLE_0 minus
VARIABLE_0 -: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character at
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal to the character at
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not
VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = is not
!= VARIABLE_0: -1.0986122886681098
!=: -0.40546510810816444
********** f = VARIABLE_0 integer divided by NUMBER if
VARIABLE_0 / NUMBER if: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = not
!=: -0.2231435513142097
VARIABLE_1 !=: -1.6094379124341003
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = of VARIABLE_0 integer
VARIABLE_0: 0.0
********** f = divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = is not equal to the character at VARIABLE_1
!= VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = VARIABLE_0 minus NUMBER minus
VARIABLE_0 - NUMBER -: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = divided by NUMBER if the
/ NUMBER if: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = of VARIABLE_0 integer divided
VARIABLE_0 /: 0.0
********** f = integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = of the VARIABLE_0 minus NUMBER
VARIABLE_0 - NUMBER: 0.0
********** f = the VARIABLE_0 minus NUMBER
VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the
FUNCTION_CALL_3 NUMBER: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = integer divided
/: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0
VARIABLE_0 index VARIABLE_1: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = at VARIABLE_1 in VARIABLE_0
VARIABLE_0 index VARIABLE_1: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER if the
VARIABLE_0 / NUMBER if: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = FUNCTION_CALL_3 NUMBER to
FUNCTION_CALL_3 NUMBER: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = VARIABLE_0 integer divided
VARIABLE_0 /: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to the
NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to
NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the character at
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = character at VARIABLE_1
index: -0.6931471805599453
index VARIABLE_1: -0.6931471805599453
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal to the character
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = VARIABLE_1 return false
VARIABLE_1 return false: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = integer divided by NUMBER if the
/ NUMBER if: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = of the VARIABLE_0 minus NUMBER minus
VARIABLE_0 - NUMBER -: 0.0
********** f = NUMBER minus VARIABLE_1
NUMBER - VARIABLE_1: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided
FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = NUMBER minus
NUMBER -: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = the VARIABLE_0 minus
VARIABLE_0 -: 0.0
********** f = character at
index: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = divided by NUMBER if the character
/ NUMBER if: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = minus VARIABLE_1 return
- VARIABLE_1 return: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = integer divided by NUMBER if
/ NUMBER if: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = by NUMBER if
NUMBER if: 0.0
********** f = is not equal to the character
!= VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the
NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer divided
FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = of VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return false
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return false: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1 FUNCTION_CALL_4
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = at VARIABLE_1 FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal
VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = is not equal to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not
NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_3 NUMBER to the FUNCTION_CALL_4 of VARIABLE_0 integer divided by NUMBER if the character
FUNCTION_CALL_3 NUMBER FUNCTION_CALL_4 VARIABLE_0 / NUMBER if: 0.0
********** f = the character at VARIABLE_1 in
index VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_0 integer
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = if the character at VARIABLE_1 in VARIABLE_0 is not equal to the
if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = VARIABLE_0 integer divided by NUMBER
VARIABLE_0 / NUMBER: 0.0
********** f = character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER -: 0.0
********** f = character at VARIABLE_1 in VARIABLE_0 is not equal to the character at VARIABLE_1
VARIABLE_0 index VARIABLE_1 != VARIABLE_0 index: 0.0
********** f = integer divided by NUMBER if the character
/ NUMBER if: 0.0
********** f = VARIABLE_0 integer divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0
VARIABLE_0 / NUMBER if VARIABLE_0 index VARIABLE_1: 0.0
********** f = to the FUNCTION_CALL_4 of
FUNCTION_CALL_4: 0.0
********** f = the character at VARIABLE_1 in VARIABLE_0 is not
VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = NUMBER to the
NUMBER: 0.0
********** f = by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal
NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = VARIABLE_0 integer divided by NUMBER if the character
VARIABLE_0 / NUMBER if: 0.0
********** f = NUMBER minus VARIABLE_1 return false
NUMBER - VARIABLE_1 return false: 0.0
********** f = minus NUMBER minus VARIABLE_1
- NUMBER - VARIABLE_1: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer divided
FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = equal to the character at VARIABLE_1 FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 minus NUMBER minus VARIABLE_1 return
VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_4 of the
FUNCTION_CALL_4: 0.0
********** f = to the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus NUMBER minus VARIABLE_1 return
index FUNCTION_CALL_4 VARIABLE_0 - NUMBER - VARIABLE_1 return: 0.0
********** f = to the FUNCTION_CALL_4 of VARIABLE_0 integer
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = divided by NUMBER if the character at VARIABLE_1 in VARIABLE_0 is not equal to the
/ NUMBER if VARIABLE_0 index VARIABLE_1 != VARIABLE_0: 0.0
********** f = the character at VARIABLE_1 FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = to the VARIABLE_0 at index at
VARIABLE_0 index: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2
VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = be equal to the VARIABLE_1 of the
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = to the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = VARIABLE_1 minus
VARIABLE_1 -: 0.0
********** f = the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1
!= VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = minus VARIABLE_2 then return false
- VARIABLE_2 return false: 0.0
********** f = end if end loop and next
in: 0.0
********** f = VARIABLE_2 then
VARIABLE_2: 0.0
********** f = for each VARIABLE_2
for: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1
VARIABLE_0 index VARIABLE_1: 0.0
********** f = define VARIABLE_1 to
VARIABLE_1 = FUNCTION_CALL_1: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to the
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equal to the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = at index VARIABLE_2 is not equal to
index VARIABLE_2 !=: 0.0
********** f = VARIABLE_0 at index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 minus VARIABLE_2 then
VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = equal to the VARIABLE_1 of the VARIABLE_0
VARIABLE_0: 0.0
********** f = end if end loop and
in: 0.0
********** f = equal to the VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = at index at VARIABLE_1 minus VARIABLE_2 then
index VARIABLE_1 - VARIABLE_2: 0.0
********** f = be equal to the VARIABLE_1
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = NUMBER and VARIABLE_1 if the
NUMBER VARIABLE_1 if: 0.0
********** f = the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = to the VARIABLE_1 of the VARIABLE_0
VARIABLE_0: 0.0
********** f = at index VARIABLE_2 is
index VARIABLE_2: 0.0
********** f = not equal to the VARIABLE_0
!= VARIABLE_0: 0.0
********** f = at index at VARIABLE_1 minus VARIABLE_2
index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 at index
VARIABLE_0 index: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0 at index at
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1
index VARIABLE_2 != VARIABLE_0 index VARIABLE_1: 0.0
********** f = to the VARIABLE_1 of the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = be equal to the
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 is not equal
VARIABLE_2 !=: 0.0
********** f = minus VARIABLE_2
- VARIABLE_2: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is
VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = if end loop and next return true 
return true: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = define
FUNCTION_CALL_1: -0.6931471805599453
VARIABLE: -0.6931471805599453
********** f = equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = at index at VARIABLE_1
index VARIABLE_1: 0.0
********** f = VARIABLE_1 minus VARIABLE_2
VARIABLE_1 - VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index
VARIABLE_1 if VARIABLE_0 index: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1
VARIABLE_2 != VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1
VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index VARIABLE_1: 0.0
********** f = the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = loop and next return true 
return true: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_2 != VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = of the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = at index VARIABLE_2 is not equal to the VARIABLE_0
index VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_2 != VARIABLE_0: 0.0
********** f = for each VARIABLE_2 between
for VARIABLE: 0.0
********** f = VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1
VARIABLE_0 index VARIABLE_1: 0.0
********** f = end if end loop
in: 0.0
********** f = VARIABLE_1 if the VARIABLE_0
VARIABLE_1 if VARIABLE_0: 0.0
********** f = VARIABLE_1 to
VARIABLE_1 =: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1
!= VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = minus VARIABLE_2 then
- VARIABLE_2: 0.0
********** f = and next return true 
return true: 0.0
********** f = VARIABLE_2 then return false
VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is
VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = end loop and next return true 
return true: 0.0
********** f = at index at VARIABLE_1 minus
index VARIABLE_1 -: 0.0
********** f = at index VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
index VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_1 if the
VARIABLE_1 if: 0.0
********** f = is not equal to the VARIABLE_0
!= VARIABLE_0: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index
VARIABLE_1 if VARIABLE_0 index: 0.0
********** f = be equal to
FUNCTION_CALL_5: 0.0
********** f = at index VARIABLE_2 is not equal to the
index VARIABLE_2 !=: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1 minus
!= VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = VARIABLE_1 of the VARIABLE_0
VARIABLE_0: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index
NUMBER VARIABLE_1 if VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = equal to the VARIABLE_0 at index at
VARIABLE_0 index: 0.0
********** f = VARIABLE_2 is not
VARIABLE_2 !=: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = end if end
in: -0.15415067982725836
in FUNCTION_CALL_4: -1.9459101490553135
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0
NUMBER VARIABLE_1 if VARIABLE_0: 0.0
********** f = the VARIABLE_0 at index at
VARIABLE_0 index: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1 minus
VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = minus VARIABLE_2 then return
- VARIABLE_2 return: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2
VARIABLE_1 if VARIABLE_0 index VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_1 minus VARIABLE_2 then return false
VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = to the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1 minus
!= VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = of the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = is not equal to the VARIABLE_0 at index at
!= VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus
index VARIABLE_2 != VARIABLE_0 index VARIABLE_1 -: 0.0
********** f = VARIABLE_1 of the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = at index VARIABLE_2 is not equal
index VARIABLE_2 !=: 0.0
********** f = VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = be equal to the VARIABLE_1 of
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal to
VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = at index at VARIABLE_1 minus VARIABLE_2 then return
index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = be equal
FUNCTION_CALL_5: 0.0
********** f = the VARIABLE_1 of the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = at index VARIABLE_2 is not equal to the VARIABLE_0 at index at
index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at
VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = equal to the VARIABLE_0 at index at VARIABLE_1
VARIABLE_0 index VARIABLE_1: 0.0
********** f = the VARIABLE_1 of the VARIABLE_0
VARIABLE_0: 0.0
********** f = next return true 
return true: 0.0
********** f = VARIABLE_0 at index at
VARIABLE_0 index: 0.0
********** f = VARIABLE_2 then return
VARIABLE_2 return: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2 between
VARIABLE_0 for VARIABLE: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = equal to the VARIABLE_1 of the VARIABLE_0 for each VARIABLE_2
VARIABLE_0 for: 0.0
********** f = equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2
VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = at index VARIABLE_2 is not
index VARIABLE_2 !=: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
VARIABLE_2 != VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not equal
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and VARIABLE_1 if the
VARIABLE_1 if: 0.0
********** f = NUMBER and VARIABLE_1 if the VARIABLE_0 at index VARIABLE_2 is not
NUMBER VARIABLE_1 if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return false
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = not equal to the VARIABLE_0 at index at
!= VARIABLE_0 index: 0.0
********** f = be
FUNCTION_CALL_5: 0.0
********** f = and VARIABLE_1 if the VARIABLE_0
VARIABLE_1 if VARIABLE_0: 0.0
********** f = VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_2 is not equal to
VARIABLE_2 !=: 0.0
********** f = at index at
index: 0.0
********** f = at index at VARIABLE_1 minus VARIABLE_2 then return false
index VARIABLE_1 - VARIABLE_2 return false: 0.0
********** f = to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then return
VARIABLE_0 index VARIABLE_1 - VARIABLE_2 return: 0.0
********** f = VARIABLE_2 between
VARIABLE: 0.0
********** f = equal to the VARIABLE_1 of the VARIABLE_0 for each
VARIABLE_0 for: 0.0
********** f = not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = is not equal to the VARIABLE_0 at index at VARIABLE_1 minus VARIABLE_2 then
!= VARIABLE_0 index VARIABLE_1 - VARIABLE_2: 0.0
********** f = VARIABLE_2 is not equal to the
VARIABLE_2 !=: 0.0
********** f = increment VARIABLE_2 by NUMBER each time
VARIABLE_2 + +: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = VARIABLE_0 divided by NUMBER and then
VARIABLE_0 / NUMBER: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 - VARIABLE_2: 0.0
********** f = then return false end the if and end the for
return false: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = false end the if and end
false: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the if and end the for loop there then return true 
return true: 0.0
********** f = and end the for loop there then return true 
return true: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = increment VARIABLE_2 by NUMBER
VARIABLE_2 + +: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = return false end the if and end the for
return false: 0.0
********** f = return false end the if and end the
return false: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
NUMBER VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then do
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = where VARIABLE_2
VARIABLE_2: 0.0
********** f = where VARIABLE_2 is less than
VARIABLE_2: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = at VARIABLE_2
index VARIABLE_2: 0.0
********** f = divided by NUMBER and then do a for loop for VARIABLE_2 is equal to NUMBER
/ NUMBER for VARIABLE_2 = NUMBER: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0
= FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_4 of the
FUNCTION_CALL_4: -0.6931471805599453
= FUNCTION_CALL_4: -0.6931471805599453
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 at VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 then return false end the if and end the for loop
VARIABLE_2 return false: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = at VARIABLE_2 is
index VARIABLE_2: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = at the
index: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = if and end the for loop there then return true 
return true: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 divided
FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
********** f = false end the if and end the
false: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = of the VARIABLE_0 divided by NUMBER
VARIABLE_0 / NUMBER: 0.0
********** f = less than or
<=: 0.0
********** f = at the FUNCTION_CALL_4
index FUNCTION_CALL_4: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = is less than or equal to VARIABLE_1
<= VARIABLE_1: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 is less
VARIABLE_2: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = VARIABLE_1 equal
VARIABLE_1: -0.916290731874155
VARIABLE_1 =: -0.5108256237659907
********** f = let's VARIABLE_1 equal
VARIABLE_1: -0.6931471805599453
VARIABLE_1 =: -0.6931471805599453
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 divided by NUMBER and then do a for loop for VARIABLE_2 is equal to
VARIABLE_0 / NUMBER for VARIABLE_2 =: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = and then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = VARIABLE_0 at
VARIABLE_0 index: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = less than or equal
<=: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = where VARIABLE_2 is less than or equal
VARIABLE_2 <=: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2
VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then
VARIABLE_2 + +: 0.0
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = VARIABLE_2 by NUMBER each time and then do
VARIABLE_2: 0.0
********** f = for loop for VARIABLE_2 is equal
for VARIABLE_2: 0.0
********** f = minus VARIABLE_2 then return false end the if and
- VARIABLE_2 return false: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = return false end the if and end the for loop there
return false: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = by NUMBER each time and then do if
if: 0.0
********** f = let's VARIABLE_1 equal the
VARIABLE_1 =: -0.6931471805599453
VARIABLE_1: -0.6931471805599453
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = then do if the
if: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to
for VARIABLE_2 =: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 divided by NUMBER and then do
VARIABLE_0 / NUMBER: 0.0
********** f = equal to VARIABLE_1
VARIABLE_1: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = false end the if and end the for
false: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at
VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = by NUMBER and then do a for loop for VARIABLE_2 is equal to NUMBER where
NUMBER for VARIABLE_2 = NUMBER: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 - VARIABLE_2: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = let's VARIABLE_1
VARIABLE_1: -0.6931471805599453
VARIABLE_1 =: -0.6931471805599453
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 divided by NUMBER
VARIABLE_0 / NUMBER: 0.0
********** f = NUMBER where VARIABLE_2 is less than or
NUMBER VARIABLE_2 <=: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = for loop for VARIABLE_2 is
for VARIABLE_2: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0
index VARIABLE_2 != VARIABLE_0: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = less than or equal to VARIABLE_1
<= VARIABLE_1: 0.0
********** f = at VARIABLE_2 is not equal to
index VARIABLE_2 !=: 0.0
********** f = at VARIABLE_2 is not equal to the
index VARIABLE_2 !=: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = or equal to VARIABLE_1
<= VARIABLE_1: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = false end the if and end the for loop there then return true 
false return true: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = then return false end
return false: 0.0
********** f = end the for loop there then return true 
return true: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then do
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = and then do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = is not equal to the VARIABLE_0 at
!= VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = at VARIABLE_2 is not
index VARIABLE_2 !=: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = time and then do if the
if: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the for loop there then return true 
return true: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = divided by NUMBER and then do
/ NUMBER: 0.0
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0 divided
= FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 divided by NUMBER and then
VARIABLE_0 / NUMBER: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0: -0.6931471805599453
********** f = time and then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_2 then return false end the if and end the for loop there
VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = NUMBER each time and then do if
if: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 /: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = minus VARIABLE_2 then return false end the if and end
- VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = divided by NUMBER and then do a for loop for VARIABLE_2 is equal to
/ NUMBER for VARIABLE_2 =: 0.0
********** f = false end the if and end the for loop there
false: 0.0
********** f = VARIABLE_2 is less than
VARIABLE_2: 0.0
********** f = return false end the if and end the for loop there then
return false: 0.0
********** f = false end the if and end the for loop there then
false: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for loop
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = and then do a for loop for VARIABLE_2 is equal to NUMBER where
for VARIABLE_2 = NUMBER: 0.0
********** f = at the FUNCTION_CALL_4 of the
index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = than or equal to
<=: 0.0
********** f = NUMBER each time and then do if the
if: 0.0
********** f = NUMBER where VARIABLE_2 is less than
NUMBER VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at the
VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus
FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and then do a for loop for VARIABLE_2 is equal to
for VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 then return false end
VARIABLE_2 return false: 0.0
********** f = if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = VARIABLE_0 divided by NUMBER and then do
VARIABLE_0 / NUMBER: 0.0
********** f = by NUMBER and then do a for loop for VARIABLE_2 is equal to
NUMBER for VARIABLE_2 =: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if
<= VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = VARIABLE_2 by NUMBER each time
VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = is less than or equal
<=: 0.0
********** f = then return false end the if and end the for loop
return false: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = VARIABLE_1 increment VARIABLE_2
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 at the
VARIABLE_0 index: 0.0
********** f = NUMBER where VARIABLE_2 is less
NUMBER VARIABLE_2: 0.0
********** f = end the if and end the for loop there then return true 
return true: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2
NUMBER VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the if
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0
index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 then return false end the if
VARIABLE_2 return false: 0.0
********** f = and then do if
if: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for loop there
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the
<= VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = equal to the VARIABLE_0 at the
VARIABLE_0 index: 0.0
********** f = where VARIABLE_2 is less than or
VARIABLE_2 <=: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do
VARIABLE_2 + +: 0.0
********** f = by NUMBER and
NUMBER: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1
VARIABLE_2 <= VARIABLE_1: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = a for loop for VARIABLE_2 is equal to
for VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 divided by NUMBER and then
VARIABLE_0 / NUMBER: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = false end the if and
false: 0.0
********** f = do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = by NUMBER and then do a for loop for VARIABLE_2 is equal to NUMBER
NUMBER for VARIABLE_2 = NUMBER: 0.0
********** f = do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus
index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if and
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is
VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER
for VARIABLE_2 = NUMBER: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then do
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the if
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = less than or equal to
<=: 0.0
********** f = the VARIABLE_0 divided by NUMBER and
VARIABLE_0 / NUMBER: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = loop there then return true 
return true: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = where VARIABLE_2 is
VARIABLE_2: 0.0
********** f = do a for loop for VARIABLE_2 is equal to
for VARIABLE_2 =: 0.0
********** f = each time and then do if the
if: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = then return false end the if and
return false: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
!= VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal
NUMBER VARIABLE_2 <=: 0.0
********** f = do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = at VARIABLE_2 is not equal
index VARIABLE_2 !=: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = is less than or
<=: 0.0
********** f = not equal to the VARIABLE_0 at the
!= VARIABLE_0 index: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the
VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0
VARIABLE_0 index VARIABLE_2 != VARIABLE_0: 0.0
********** f = each time and then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for loop
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 equal the
VARIABLE_1 =: -1.0986122886681098
VARIABLE_1: -0.40546510810816444
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the for
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 divided
VARIABLE_0 /: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = then return false end the if and end the for loop there then
return false: 0.0
********** f = VARIABLE_0 at the
VARIABLE_0 index: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = minus VARIABLE_2 then return false end the if and end the
- VARIABLE_2 return false: 0.0
********** f = do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to NUMBER where
for VARIABLE_2 = NUMBER: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the
index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = there then return true 
return true: 0.0
********** f = VARIABLE_2 by NUMBER each
VARIABLE_2: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 then return false end the if and end the for
VARIABLE_2 return false: 0.0
********** f = or equal
<=: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0
VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = then return false end the
return false: 0.0
********** f = and then do a for loop for VARIABLE_2 is equal to NUMBER
for VARIABLE_2 = NUMBER: 0.0
********** f = minus VARIABLE_2 then return false end the
- VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = then return false end the if and end the for loop there
return false: 0.0
********** f = minus VARIABLE_2 then return false end the if
- VARIABLE_2 return false: 0.0
********** f = where VARIABLE_2 is less than or equal to
VARIABLE_2 <=: 0.0
********** f = return false end the if and
return false: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = NUMBER where VARIABLE_2
NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 minus VARIABLE_2 then return false end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = NUMBER where
NUMBER: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then do
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then do
= FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_4 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 - VARIABLE_2: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = false end the if
false: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 divided
FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
= FUNCTION_CALL_4 VARIABLE_0 /: -0.6931471805599453
********** f = is not equal to the VARIABLE_0 at the
!= VARIABLE_0 index: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is
VARIABLE_0 index VARIABLE_2: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to NUMBER
for VARIABLE_2 = NUMBER: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where
for VARIABLE_2 = NUMBER: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = minus VARIABLE_2 then return false end the if and end the for loop
- VARIABLE_2 return false: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to VARIABLE_1
NUMBER VARIABLE_2 <= VARIABLE_1: 0.0
********** f = VARIABLE_2 is less than or equal to
VARIABLE_2 <=: 0.0
********** f = minus VARIABLE_2 then return false end the if and end the for
- VARIABLE_2 return false: 0.0
********** f = the VARIABLE_0 at
VARIABLE_0 index: 0.0
********** f = then do if the VARIABLE_0
if VARIABLE_0: 0.0
********** f = divided by NUMBER and
/ NUMBER: 0.0
********** f = at the FUNCTION_CALL_4 of
index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the VARIABLE_0 at
VARIABLE_1 VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = return false end the
return false: 0.0
********** f = VARIABLE_2 by NUMBER each time and then
VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less than or
for VARIABLE_2 = NUMBER VARIABLE_2 <=: 0.0
********** f = of the VARIABLE_0 divided by NUMBER and then do
VARIABLE_0 / NUMBER: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if and
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
NUMBER VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = not equal to the VARIABLE_0 at
!= VARIABLE_0 index: 0.0
********** f = for loop there then return true 
return true: 0.0
********** f = for loop for VARIABLE_2
for VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and end the
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 then return false end the if and end the
VARIABLE_2 return false: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 - VARIABLE_2: 0.0
********** f = minus VARIABLE_2 then return false end the if and end the for loop there
- VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 then return false end the if and end
VARIABLE_2 return false: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the FUNCTION_CALL_4 of the
FUNCTION_CALL_4: -0.6931471805599453
= FUNCTION_CALL_4: -0.6931471805599453
********** f = equal to VARIABLE_1 increment VARIABLE_2
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if the
VARIABLE_2 + + if: 0.0
********** f = each time and then do if
if: 0.0
********** f = VARIABLE_0 minus VARIABLE_2
VARIABLE_0 - VARIABLE_2: 0.0
********** f = and then do if the
if: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = then return false end the if and end the
return false: 0.0
********** f = time and then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = and then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = then do if
if: 0.0
********** f = a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less than
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = do if the
if: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = minus VARIABLE_2 then return false end
- VARIABLE_2 return false: 0.0
********** f = then return false end the if
return false: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by
NUMBER VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 divided
VARIABLE_0 /: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = time and then do if
if: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = false end the if and end the for loop
false: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if
<= VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = NUMBER where VARIABLE_2 is less than or equal to
NUMBER VARIABLE_2 <=: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and then
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = the VARIABLE_0 at VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = and then do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 divided by NUMBER and
VARIABLE_0 / NUMBER: 0.0
********** f = do a for loop for VARIABLE_2 is equal to NUMBER
for VARIABLE_2 = NUMBER: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of
VARIABLE_1 = FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1
VARIABLE_2 <= VARIABLE_1: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 by NUMBER
VARIABLE_2: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = or equal to
<=: 0.0
********** f = by NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = of the VARIABLE_0 divided by NUMBER and
VARIABLE_0 / NUMBER: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 then return false end the if and
VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 by NUMBER each time and
VARIABLE_2: 0.0
********** f = time and then do if the VARIABLE_0 at VARIABLE_2 is not equal to
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = increment VARIABLE_2 by NUMBER each
VARIABLE_2 + +: 0.0
********** f = equal to the VARIABLE_0 at
VARIABLE_0 index: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = than or equal
<=: 0.0
********** f = VARIABLE_2 is less than or
VARIABLE_2 <=: 0.0
********** f = VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if and end
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = by NUMBER and then do
NUMBER: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = false end the
false: 0.0
********** f = return false end the if and end the for loop there then return true 
return false return true: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 divided
VARIABLE_0 /: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = NUMBER where VARIABLE_2 is
NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at
VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = then do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return
VARIABLE_0 - VARIABLE_2 return: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to the
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = to the VARIABLE_0 at the FUNCTION_CALL_4
VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = the VARIABLE_0 divided by NUMBER
VARIABLE_0 / NUMBER: 0.0
********** f = where VARIABLE_2 is less than or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER
VARIABLE_2 <= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = to the VARIABLE_0 at
VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is
VARIABLE_0 index VARIABLE_2: 0.0
********** f = is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = or equal to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = less than or equal to VARIABLE_1 increment VARIABLE_2 by
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the
VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 then return false end the if and end the for loop there then
VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end the if and
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
!= VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and
VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 at VARIABLE_2 is not equal to
VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = is less than or equal to
<=: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = than or equal to VARIABLE_1
<= VARIABLE_1: 0.0
********** f = VARIABLE_2 is less than or equal
VARIABLE_2 <=: 0.0
********** f = each time and then do if the VARIABLE_0 at
if VARIABLE_0 index: 0.0
********** f = at VARIABLE_2 is not equal to the VARIABLE_0 at
index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = where VARIABLE_2 is less
VARIABLE_2: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2 then return false end the if
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index: 0.0
********** f = return false end the if and end the for loop
return false: 0.0
********** f = of the VARIABLE_0 minus VARIABLE_2 then return false end the if and
VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = minus VARIABLE_2 then return false end the if and end the for loop there then
- VARIABLE_2 return false: 0.0
********** f = VARIABLE_2 then return false end the
VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = then do if the VARIABLE_0 at VARIABLE_2 is not equal to the
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = to VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = return false end the if and end
return false: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = let's VARIABLE_1 equal the FUNCTION_CALL_4 of the VARIABLE_0 divided by NUMBER and
VARIABLE_1 = FUNCTION_CALL_4 VARIABLE_0 / NUMBER: 0.0
********** f = then return false end the if and end
return false: 0.0
********** f = each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time and then do if the
VARIABLE_1 VARIABLE_2 + + if: 0.0
********** f = the VARIABLE_0 minus VARIABLE_2
VARIABLE_0 - VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = do a for loop for VARIABLE_2 is equal to NUMBER where
for VARIABLE_2 = NUMBER: 0.0
********** f = increment VARIABLE_2 by NUMBER each time and then do if
VARIABLE_2 + + if: 0.0
********** f = than or equal to VARIABLE_1 increment VARIABLE_2
<= VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = at the FUNCTION_CALL_4 of the VARIABLE_0 minus VARIABLE_2 then return false end
index FUNCTION_CALL_4 VARIABLE_0 - VARIABLE_2 return false: 0.0
********** f = VARIABLE_1 increment VARIABLE_2 by NUMBER each time
VARIABLE_1 VARIABLE_2 + +: 0.0
********** f = for loop for
for: 0.0
********** f = by NUMBER each time and then do if the
if: 0.0
********** f = do if the VARIABLE_0 at VARIABLE_2 is
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = if the VARIABLE_0 at VARIABLE_2 is not equal to the VARIABLE_0 at the FUNCTION_CALL_4 of
if VARIABLE_0 index VARIABLE_2 != VARIABLE_0 index FUNCTION_CALL_4: 0.0
********** f = do a for loop for VARIABLE_2 is equal to NUMBER where VARIABLE_2 is less than
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_0 at the FUNCTION_CALL_4 of the VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_4 VARIABLE_0 -: 0.0
********** f = return false end the if
return false: 0.0
********** f = than or
<=: 0.0
********** f = NUMBER each time and then do if the VARIABLE_0 at VARIABLE_2 is not equal
if VARIABLE_0 index VARIABLE_2 !=: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return
if VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index
VARIABLE_0 = VARIABLE_1 index: 0.0
********** f = VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1
+ = NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = let variable VARIABLE_2 equal VARIABLE_1
= NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = does not equal VARIABLE_0 return false
!= VARIABLE_0 return false: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 =: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3
VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = following let
=: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = VARIABLE_2 does not equal VARIABLE_0 return false end
VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = NUMBER incrementing VARIABLE_4
NUMBER: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4
index VARIABLE_3 - VARIABLE_4: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = following let variable VARIABLE_2 equal VARIABLE_1
= NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_0 return false end
VARIABLE_0 return false: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
VARIABLE_2 = VARIABLE_1 index VARIABLE_4: -0.6931471805599453
NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: -0.6931471805599453
********** f = to VARIABLE_3
VARIABLE_3: -0.6931471805599453
= VARIABLE_3: -1.3862943611198906
VARIABLE_3 VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = VARIABLE_4 each time do the
+: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = let variable VARIABLE_2 equal
= NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return false end if end for
VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index
VARIABLE_4 VARIABLE_0 = VARIABLE_1 index: 0.0
********** f = incrementing VARIABLE_4 each time do the
+: 0.0
********** f = variable VARIABLE_2 equal
NUMBER VARIABLE_2 =: -1.0986122886681098
VARIABLE_2 =: -0.40546510810816444
********** f = let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0
VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = incrementing VARIABLE_4 each time do the following let variable VARIABLE_2 equal
+ = NUMBER VARIABLE_2 =: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0
NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: -0.6931471805599453
VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: -0.6931471805599453
********** f = NUMBER up to
NUMBER: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_0 return false
VARIABLE_0 return false: 0.0
********** f = time do the following let variable VARIABLE_2 equal VARIABLE_1 index
+ = NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = VARIABLE_2 does not equal
VARIABLE_2 !=: 0.0
********** f = index VARIABLE_4
index VARIABLE_4: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4
VARIABLE_1 index VARIABLE_3 - VARIABLE_4: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4
index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_4 let VARIABLE_0
VARIABLE_4 VARIABLE_0 =: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return false end if
VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_3 integer div NUMBER
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = for VARIABLE_4 equals NUMBER
for VARIABLE_4 = NUMBER: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return
index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = following let variable VARIABLE_2 equal
= NUMBER VARIABLE_2 =: 0.0
********** f = the following let variable VARIABLE_2 equal VARIABLE_1
= NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index
NUMBER VARIABLE_2 = VARIABLE_1 index: -0.6931471805599453
VARIABLE_2 = VARIABLE_1 index: -0.6931471805599453
********** f = incrementing VARIABLE_4 each time do the following let
+ = NUMBER: -0.6931471805599453
+ =: -0.6931471805599453
********** f = VARIABLE_4 equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing
VARIABLE_4 = NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = each time do the following let variable VARIABLE_2
+ = NUMBER VARIABLE_2 =: 0.0
********** f = index
index: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following let
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + =: -0.6931471805599453
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = at index VARIABLE_3
index VARIABLE_3: 0.0
********** f = VARIABLE_4 equals NUMBER up
VARIABLE_4 = NUMBER: 0.0
********** f = does not equal VARIABLE_0 return false end if
!= VARIABLE_0 return false: 0.0
********** f = each time do the following let
+ =: -0.6931471805599453
+ = NUMBER: -0.6931471805599453
********** f = the following let variable VARIABLE_2 equal
= NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return false end if end for return true 
VARIABLE_2 != VARIABLE_0 return false return true: 0.0
********** f = each time do the following let variable VARIABLE_2 equal VARIABLE_1 index
+ = NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2
- VARIABLE_4 if VARIABLE_2: 0.0
********** f = the following let
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = if VARIABLE_2 does not equal
if VARIABLE_2 !=: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_3 equal
VARIABLE_3: -0.6931471805599453
VARIABLE_3 =: -0.6931471805599453
********** f = VARIABLE_4 if
VARIABLE_4 if: 0.0
********** f = do the following let
+ =: -0.6931471805599453
+ = NUMBER: -0.6931471805599453
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4: 0.0
********** f = following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1
VARIABLE_2 = VARIABLE_1: -0.6931471805599453
NUMBER VARIABLE_2 = VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_2 does not equal VARIABLE_0
VARIABLE_2 != VARIABLE_0: 0.0
********** f = VARIABLE_0 return false end if
VARIABLE_0 return false: 0.0
********** f = the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false
if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following let
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + =: -0.6931471805599453
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + = NUMBER: -0.6931471805599453
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3
VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return false
VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = equal VARIABLE_0 return false end
VARIABLE_0 return false: 0.0
********** f = VARIABLE_1 index
VARIABLE_1 index: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1
VARIABLE_4 VARIABLE_0 = VARIABLE_1: 0.0
********** f = NUMBER up
NUMBER: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4
VARIABLE_1 index VARIABLE_3 - VARIABLE_4: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0
VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = equal VARIABLE_1 index
VARIABLE_1 index: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = minus VARIABLE_4
- VARIABLE_4: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end for
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1: 0.0
********** f = equal VARIABLE_1 at index
VARIABLE_1 index: 0.0
********** f = the following let variable VARIABLE_2
= NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = does not equal VARIABLE_0 return false end if end
!= VARIABLE_0 return false: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following let
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + =: -0.6931471805599453
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + = NUMBER: -0.6931471805599453
********** f = variable VARIABLE_3
VARIABLE_3 =: 0.0
********** f = VARIABLE_3 integer
< VARIABLE_3: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end for
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up to
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = VARIABLE_4 equals NUMBER up to
VARIABLE_4 = NUMBER: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1
index VARIABLE_4 VARIABLE_0 = VARIABLE_1: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not
VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = do the following let variable VARIABLE_2 equal
+ = NUMBER VARIABLE_2 =: 0.0
********** f = to VARIABLE_3 integer div NUMBER
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = time do the following let variable VARIABLE_2 equal
+ = NUMBER VARIABLE_2 =: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false end if end
if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false end
if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = equal VARIABLE_0 return
VARIABLE_0 return: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = time do the following let
+ =: -0.6931471805599453
+ = NUMBER: -0.6931471805599453
********** f = VARIABLE_4 equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
VARIABLE_4 = NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_4 each time do the following let
+ = NUMBER: -0.6931471805599453
+ =: -0.6931471805599453
********** f = does not equal VARIABLE_0 return false end if end for return true 
!= VARIABLE_0 return false return true: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index
VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index: -0.6931471805599453
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up to
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = VARIABLE_4 equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
VARIABLE_4 = NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_1 index VARIABLE_4
VARIABLE_1 index VARIABLE_4: 0.0
********** f = VARIABLE_1 at index VARIABLE_3
VARIABLE_1 index VARIABLE_3: 0.0
********** f = equal VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0
if VARIABLE_2 != VARIABLE_0: 0.0
********** f = let variable VARIABLE_2
= NUMBER VARIABLE_2 =: 0.0
********** f = each time do the following let variable VARIABLE_2 equal
+ = NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2
VARIABLE_3 - VARIABLE_4 if VARIABLE_2: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false end if
if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_0 return
VARIABLE_0 return: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 =: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_4 each time do
+: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4
VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = minus VARIABLE_4 if
- VARIABLE_4 if: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not
- VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = VARIABLE_0 return false end if end for
VARIABLE_0 return false: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal
- VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = does not equal VARIABLE_0 return
!= VARIABLE_0 return: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_4 equals NUMBER
VARIABLE_4 = NUMBER: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1
VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1: -0.6931471805599453
NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1: -0.6931471805599453
********** f = up to VARIABLE_3 integer div NUMBER
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equal VARIABLE_0 return false
VARIABLE_0 return false: 0.0
********** f = VARIABLE_0 return false end if end
VARIABLE_0 return false: 0.0
********** f = does not equal VARIABLE_0
!= VARIABLE_0: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following let
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + =: -0.6931471805599453
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 + = NUMBER: -0.6931471805599453
********** f = equal VARIABLE_1 index VARIABLE_4
VARIABLE_1 index VARIABLE_4: 0.0
********** f = following let variable VARIABLE_2
= NUMBER VARIABLE_2 =: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3
VARIABLE_0 = VARIABLE_1 index VARIABLE_3: 0.0
********** f = time do the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
+ = NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = for VARIABLE_4
for VARIABLE_4: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2
index VARIABLE_3 - VARIABLE_4 if VARIABLE_2: 0.0
********** f = each time do the following let variable VARIABLE_2 equal VARIABLE_1
+ = NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = at index VARIABLE_3 minus
index VARIABLE_3 -: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 =: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if
VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = do the following let variable VARIABLE_2
+ = NUMBER VARIABLE_2 =: 0.0
********** f = incrementing VARIABLE_4 each time do the following let variable VARIABLE_2
+ = NUMBER VARIABLE_2 =: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if
VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return
VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false end if end for
if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up to
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
+ = NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index
index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index: 0.0
********** f = NUMBER incrementing VARIABLE_4 each
NUMBER: 0.0
********** f = VARIABLE_4 equals
VARIABLE_4 =: 0.0
********** f = VARIABLE_4 equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
VARIABLE_4 = NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4
VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4: 0.0
********** f = for VARIABLE_4 equals NUMBER up to
for VARIABLE_4 = NUMBER: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if
index VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal
VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = incrementing VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1 index
+ = NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4 equals NUMBER up
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4 = NUMBER: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if end for
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = if VARIABLE_2 does not equal VARIABLE_0 return false end if end for return true 
if VARIABLE_2 != VARIABLE_0 return false return true: 0.0
********** f = equal VARIABLE_0
VARIABLE_0: -0.6931471805599453
= VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 return false end if end for return true 
VARIABLE_0 return false return true: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = for VARIABLE_4 equals NUMBER up
for VARIABLE_4 = NUMBER: 0.0
********** f = up to VARIABLE_3 integer
< VARIABLE_3: 0.0
********** f = VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2: 0.0
********** f = VARIABLE_2 does not
VARIABLE_2 !=: 0.0
********** f = time do the following let variable VARIABLE_2 equal VARIABLE_1
+ = NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1 index
+ = NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = following let variable VARIABLE_2 equal VARIABLE_1 index
= NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2
VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2: 0.0
********** f = do the following let variable VARIABLE_2 equal VARIABLE_1
+ = NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = equals NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time
= NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = do the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
+ = NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = FUNCTION_CALL_6 of
FUNCTION_CALL_6: 0.0
********** f = variable VARIABLE_3 equal
VARIABLE_3 =: 0.0
********** f = VARIABLE_4 if VARIABLE_2
VARIABLE_4 if VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1
FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1
VARIABLE_0 = VARIABLE_1: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false end if
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = each time do the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
+ = NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = VARIABLE_4 each time do the following let variable VARIABLE_2
+ = NUMBER VARIABLE_2 =: 0.0
********** f = VARIABLE_1 at index
VARIABLE_1 index: 0.0
********** f = to VARIABLE_3 integer
< VARIABLE_3: 0.0
********** f = do the following let variable VARIABLE_2 equal VARIABLE_1 index
+ = NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = VARIABLE_4 let VARIABLE_0 equal
VARIABLE_4 VARIABLE_0 =: 0.0
********** f = incrementing VARIABLE_4 each time do the following
+: 0.0
********** f = NUMBER incrementing VARIABLE_4 each time
NUMBER: 0.0
********** f = does not equal VARIABLE_0 return false end if end for
!= VARIABLE_0 return false: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_0 = VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return: 0.0
********** f = variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: -0.6931471805599453
VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: -0.6931471805599453
********** f = time do the following let variable VARIABLE_2
+ = NUMBER VARIABLE_2 =: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = equals NUMBER up to
= NUMBER: 0.0
********** f = VARIABLE_4 each time do the following let variable VARIABLE_2 equal
+ = NUMBER VARIABLE_2 =: 0.0
********** f = if VARIABLE_2 does not
if VARIABLE_2 !=: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1 for
FUNCTION_CALL_6 VARIABLE_1 for: 0.0
********** f = the FUNCTION_CALL_6 of the VARIABLE_1
FUNCTION_CALL_6 VARIABLE_1: 0.0
********** f = let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = VARIABLE_3 minus VARIABLE_4
VARIABLE_3 - VARIABLE_4: 0.0
********** f = VARIABLE_2 does not equal VARIABLE_0 return false end if end
VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = VARIABLE_4 equals NUMBER up to VARIABLE_3 integer div NUMBER
VARIABLE_4 = NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = NUMBER incrementing
NUMBER: 0.0
********** f = let variable VARIABLE_2 equal VARIABLE_1 index
= NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = NUMBER up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the
NUMBER VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = incrementing VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1
+ = NUMBER VARIABLE_2 = VARIABLE_1: 0.0
********** f = up to VARIABLE_3
VARIABLE_3: 0.0
********** f = equal VARIABLE_0 return false end if end for return true 
VARIABLE_0 return false return true: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4
FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4: 0.0
********** f = the following let variable VARIABLE_2 equal VARIABLE_1 index
= NUMBER VARIABLE_2 = VARIABLE_1 index: 0.0
********** f = VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false
VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus
index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = VARIABLE_3 minus
VARIABLE_3 -: 0.0
********** f = let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if
VARIABLE_0 = VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal
index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = VARIABLE_4 each time do the following
+: 0.0
********** f = VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0
VARIABLE_3 - VARIABLE_4 if VARIABLE_2 != VARIABLE_0: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if: 0.0
********** f = equal the FUNCTION_CALL_6 of the VARIABLE_1 for
FUNCTION_CALL_6 VARIABLE_1 for: 0.0
********** f = at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not
index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = incrementing VARIABLE_4 each time do the following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
+ = NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = does not equal VARIABLE_0 return false end
!= VARIABLE_0 return false: 0.0
********** f = for VARIABLE_4 equals
for VARIABLE_4 =: 0.0
********** f = following let variable VARIABLE_2 equal VARIABLE_1 index VARIABLE_4
= NUMBER VARIABLE_2 = VARIABLE_1 index VARIABLE_4: 0.0
********** f = equal VARIABLE_0 return false end if end
VARIABLE_0 return false: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for: 0.0
********** f = incrementing VARIABLE_4 each time do
+: 0.0
********** f = equal VARIABLE_0 return false end if end for
VARIABLE_0 return false: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus VARIABLE_4 if VARIABLE_2 does not
VARIABLE_1 index VARIABLE_3 - VARIABLE_4 if VARIABLE_2 !=: 0.0
********** f = VARIABLE_3 integer div NUMBER incrementing VARIABLE_4 each time do the following
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4 +: 0.0
********** f = equals NUMBER up
= NUMBER: 0.0
********** f = up to VARIABLE_3 integer div NUMBER incrementing VARIABLE_4
VARIABLE_4 < VARIABLE_3 / NUMBER VARIABLE_4: 0.0
********** f = minus VARIABLE_4 if VARIABLE_2 does not equal VARIABLE_0 return false
- VARIABLE_4 if VARIABLE_2 != VARIABLE_0 return false: 0.0
********** f = index VARIABLE_4 let VARIABLE_0
index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1 at index VARIABLE_3
index VARIABLE_4 VARIABLE_0 = VARIABLE_1 index VARIABLE_3: 0.0
********** f = equal VARIABLE_0 return false end if
VARIABLE_0 return false: 0.0
********** f = equal VARIABLE_1 index VARIABLE_4 let VARIABLE_0 equal VARIABLE_1
VARIABLE_1 index VARIABLE_4 VARIABLE_0 = VARIABLE_1: 0.0
********** f = equal VARIABLE_1 at index VARIABLE_3 minus
VARIABLE_1 index VARIABLE_3 -: 0.0
********** f = index VARIABLE_4 let VARIABLE_0 equal
index VARIABLE_4 VARIABLE_0 =: 0.0
********** f = variable VARIABLE_3 equal the FUNCTION_CALL_6 of the VARIABLE_1 for VARIABLE_4
VARIABLE_3 = FUNCTION_CALL_6 VARIABLE_1 for VARIABLE_4: 0.0
********** f = then VARIABLE_1 equal false VARIABLE_2 close parentheses
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0
VARIABLE_0 / NUMBER VARIABLE_3 + + if VARIABLE_0: 0.0
********** f = smaller than FUNCTION_CALL_5
< FUNCTION_CALL_5: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0
< FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0
VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3 != VARIABLE_0: 0.0
********** f = equal false VARIABLE_2 close parentheses return VARIABLE_1 
= false VARIABLE_2 return VARIABLE_1: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = is different than
!=: 0.0
********** f = NUMBER VARIABLE_3 smaller than
NUMBER VARIABLE_3 <: 0.0
********** f = VARIABLE_0 index
VARIABLE_0 index: 0.0
********** f = VARIABLE_1 equal true for VARIABLE_3 equal NUMBER VARIABLE_3
VARIABLE_1 = true for VARIABLE_3 = NUMBER VARIABLE_3: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0
index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided
for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses return VARIABLE_1 
VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2 return VARIABLE_1: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0
VARIABLE_0 index VARIABLE_3 != VARIABLE_0: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5
VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 equal false VARIABLE_2 close
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_0 index VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0
VARIABLE_3 + + if VARIABLE_0: 0.0
********** f = index VARIABLE_3 is
index VARIABLE_3: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index
if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = VARIABLE_2 close parentheses
VARIABLE_2: 0.0
********** f = NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is
+ + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index
VARIABLE_0 / NUMBER VARIABLE_3 + + if VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = if VARIABLE_0 index VARIABLE_3
if VARIABLE_0 index VARIABLE_3: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5
!= VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
= NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = VARIABLE_1 equal true for
VARIABLE_1 = true for: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than
+ + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than
VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than
true for VARIABLE_3 = NUMBER VARIABLE_3 <: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false
VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + + if VARIABLE_0: 0.0
********** f = NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided
NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5
index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close
VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses
VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0
if VARIABLE_0 index VARIABLE_3 != VARIABLE_0: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = divided by NUMBER VARIABLE_3
/ NUMBER VARIABLE_3: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is
/ NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than
= NUMBER VARIABLE_3 <: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if
NUMBER VARIABLE_3 + + if: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3
FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses
FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5
VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_3 then VARIABLE_1
VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = parentheses return VARIABLE_1 
return VARIABLE_1: 0.0
********** f = true for VARIABLE_3 equal NUMBER VARIABLE_3
true for VARIABLE_3 = NUMBER VARIABLE_3: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than
VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_1 equal true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than
VARIABLE_1 = true for VARIABLE_3 = NUMBER VARIABLE_3 <: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
< FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = false VARIABLE_2 close parentheses
false VARIABLE_2: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3 smaller than
VARIABLE_3 = NUMBER VARIABLE_3 <: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0
index VARIABLE_3 != VARIABLE_0: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = equal true for VARIABLE_3 equal
= true for VARIABLE_3 =: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2
- VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = true for VARIABLE_3
true for VARIABLE_3: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is
if VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_1 equal true for VARIABLE_3 equal NUMBER
VARIABLE_1 = true for VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_2 close
VARIABLE_2: 0.0
********** f = then VARIABLE_1 equal false
VARIABLE_1 = false: 0.0
********** f = index FUNCTION_CALL_5
index FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = for VARIABLE_3 equal NUMBER
for VARIABLE_3 = NUMBER: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided
FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than
NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = equal true for VARIABLE_3 equal NUMBER VARIABLE_3
= true for VARIABLE_3 = NUMBER VARIABLE_3: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal false
VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal
VARIABLE_3 VARIABLE_1 =: 0.0
********** f = VARIABLE_2 close parentheses return VARIABLE_1 
VARIABLE_2 return VARIABLE_1: 0.0
********** f = index VARIABLE_3 is different than
index VARIABLE_3 !=: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = for VARIABLE_3 equal
for VARIABLE_3 =: 0.0
********** f = VARIABLE_1 equal false VARIABLE_2 close parentheses
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is
VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_1 equal true
VARIABLE_1 = true: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3
VARIABLE_3 = NUMBER VARIABLE_3: 0.0
********** f = then VARIABLE_1 equal false VARIABLE_2 close parentheses return VARIABLE_1 
VARIABLE_1 = false VARIABLE_2 return VARIABLE_1: 0.0
********** f = equal true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than
= true for VARIABLE_3 = NUMBER VARIABLE_3 <: 0.0
********** f = equal false
= false: 0.0
********** f = VARIABLE_1 equal false
VARIABLE_1 = false: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0
/ NUMBER VARIABLE_3 + + if VARIABLE_0: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2
VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = than VARIABLE_0 index
VARIABLE_0 index: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3
VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = minus VARIABLE_3
- VARIABLE_3: 0.0
********** f = VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if
VARIABLE_0 / NUMBER VARIABLE_3 + + if: 0.0
********** f = VARIABLE_3 smaller than
VARIABLE_3 <: 0.0
********** f = close parentheses return VARIABLE_1 
return VARIABLE_1: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index
NUMBER VARIABLE_3 + + if VARIABLE_0 index: 0.0
********** f = VARIABLE_0 divided by NUMBER VARIABLE_3
VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different
VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if
FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + + if: 0.0
********** f = true for VARIABLE_3 equal
true for VARIABLE_3 =: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3
VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5
VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses
VARIABLE_0 / NUMBER VARIABLE_3 + +: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5
if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close
VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close
- VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index
/ NUMBER VARIABLE_3 + + if VARIABLE_0 index: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = equal true for VARIABLE_3
= true for VARIABLE_3: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than
for VARIABLE_3 = NUMBER VARIABLE_3 <: 0.0
********** f = true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
true for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
true for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 equal false VARIABLE_2
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3
< FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 =: 0.0
********** f = than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false
VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses
VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3
+ + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index
index VARIABLE_3 != VARIABLE_0 index: 0.0
********** f = VARIABLE_3 plus plus open parentheses if
VARIABLE_3 + + if: 0.0
********** f = is different than VARIABLE_0 index
!= VARIABLE_0 index: 0.0
********** f = is different
!=: 0.0
********** f = VARIABLE_0 minus VARIABLE_3
VARIABLE_0 - VARIABLE_3: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = different than VARIABLE_0 index
!= VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index FUNCTION_CALL_5
VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = plus plus open parentheses if VARIABLE_0
+ + if VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = equal NUMBER VARIABLE_3
= NUMBER VARIABLE_3: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = true for VARIABLE_3 equal NUMBER
true for VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_1 equal true for VARIABLE_3 equal
VARIABLE_1 = true for VARIABLE_3 =: 0.0
********** f = VARIABLE_3 is different
VARIABLE_3 !=: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses
- VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = equal true for VARIABLE_3 equal NUMBER
= true for VARIABLE_3 = NUMBER: 0.0
********** f = equal false VARIABLE_2 close parentheses
= false VARIABLE_2: 0.0
********** f = VARIABLE_3 is different than
VARIABLE_3 !=: 0.0
********** f = by NUMBER VARIABLE_3
NUMBER VARIABLE_3: 0.0
********** f = is different than VARIABLE_0
!= VARIABLE_0: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses return VARIABLE_1 
- VARIABLE_3 VARIABLE_1 = false VARIABLE_2 return VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3
NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = different than VARIABLE_0
!= VARIABLE_0: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different
VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3
/ NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided
= NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different
NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0
VARIABLE_3 != VARIABLE_0: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided
VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses
/ NUMBER VARIABLE_3 + +: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1
- VARIABLE_3 VARIABLE_1: 0.0
********** f = VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses return VARIABLE_1 
VARIABLE_3 VARIABLE_1 = false VARIABLE_2 return VARIABLE_1: 0.0
********** f = then VARIABLE_1 equal false VARIABLE_2 close
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_3 plus plus open parentheses if VARIABLE_0 index
VARIABLE_3 + + if VARIABLE_0 index: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2
index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses if
< FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + + if: 0.0
********** f = for VARIABLE_3 equal NUMBER VARIABLE_3
for VARIABLE_3 = NUMBER VARIABLE_3: 0.0
********** f = if VARIABLE_0 index
if VARIABLE_0 index: 0.0
********** f = index VARIABLE_3 is different
index VARIABLE_3 !=: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses
NUMBER VARIABLE_3 + +: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0
NUMBER VARIABLE_3 + + if VARIABLE_0: 0.0
********** f = different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is
VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER
= NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER: 0.0
********** f = then VARIABLE_1 equal
VARIABLE_1 =: 0.0
********** f = plus plus open parentheses if
+ + if: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3
NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index
+ + if VARIABLE_0 index: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close parentheses
VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = minus VARIABLE_3 then
- VARIABLE_3: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3 plus plus open parentheses
< FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3 + +: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5
!= VARIABLE_0 index FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2
VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = index VARIABLE_3
index VARIABLE_3: -0.1823215567939546
VARIABLE_3: -1.791759469228055
********** f = if VARIABLE_0 index VARIABLE_3 is different
if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = if VARIABLE_0 index VARIABLE_3 is different than
if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0
+ + if VARIABLE_0 index VARIABLE_3 != VARIABLE_0: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index
VARIABLE_3 != VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index
VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index: 0.0
********** f = false VARIABLE_2 close parentheses return VARIABLE_1 
false VARIABLE_2 return VARIABLE_1: 0.0
********** f = by NUMBER VARIABLE_3 plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is
NUMBER VARIABLE_3 + + if VARIABLE_0 index VARIABLE_3: 0.0
********** f = NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 equal true for VARIABLE_3
VARIABLE_1 = true for VARIABLE_3: 0.0
********** f = then VARIABLE_1 equal false VARIABLE_2
VARIABLE_1 = false VARIABLE_2: 0.0
********** f = VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = than VARIABLE_0
VARIABLE_0: 0.0
********** f = VARIABLE_1 equal false VARIABLE_2 close parentheses return VARIABLE_1 
VARIABLE_1 = false VARIABLE_2 return VARIABLE_1: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different
+ + if VARIABLE_0 index VARIABLE_3 !=: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided by NUMBER VARIABLE_3
= NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 / NUMBER VARIABLE_3: 0.0
********** f = then VARIABLE_1
VARIABLE_1: 0.0
********** f = for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0 divided
VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = equal false VARIABLE_2 close
= false VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3 then VARIABLE_1 equal false VARIABLE_2 close
FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3 VARIABLE_1 = false VARIABLE_2: 0.0
********** f = is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
!= VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = VARIABLE_3 plus plus open parentheses
VARIABLE_3 + +: 0.0
********** f = VARIABLE_0 minus VARIABLE_3 then
VARIABLE_0 - VARIABLE_3: 0.0
********** f = VARIABLE_3 equal NUMBER
VARIABLE_3 = NUMBER: 0.0
********** f = index FUNCTION_CALL_5 VARIABLE_0 minus
index FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_3 smaller than FUNCTION_CALL_5 VARIABLE_0
VARIABLE_3 < FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = equal true for VARIABLE_3 equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
= true for VARIABLE_3 = NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = false VARIABLE_2 close
false VARIABLE_2: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal false
- VARIABLE_3 VARIABLE_1 = false: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0
VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = equal false VARIABLE_2
= false VARIABLE_2: 0.0
********** f = index VARIABLE_3 is different than VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 minus VARIABLE_3
index VARIABLE_3 != VARIABLE_0 index FUNCTION_CALL_5 VARIABLE_0 - VARIABLE_3: 0.0
********** f = plus plus open parentheses if VARIABLE_0 index VARIABLE_3 is different than VARIABLE_0 index
+ + if VARIABLE_0 index VARIABLE_3 != VARIABLE_0 index: 0.0
********** f = equal NUMBER VARIABLE_3 smaller than FUNCTION_CALL_5
= NUMBER VARIABLE_3 < FUNCTION_CALL_5: 0.0
********** f = divided by NUMBER VARIABLE_3 plus plus open parentheses if
/ NUMBER VARIABLE_3 + + if: 0.0
********** f = smaller than FUNCTION_CALL_5 VARIABLE_0 divided
< FUNCTION_CALL_5 VARIABLE_0 /: 0.0
********** f = false VARIABLE_2
false VARIABLE_2: 0.0
********** f = minus VARIABLE_3 then VARIABLE_1 equal
- VARIABLE_3 VARIABLE_1 =: 0.0
********** f = brackets VARIABLE_0 dot FUNCTION_CALL_3
( VARIABLE_0 . FUNCTION_CALL_3: 0.0
********** f = integer VARIABLE_1 equals NUMBER to open brackets VARIABLE_0 dot FUNCTION_CALL_3
VARIABLE_1 = NUMBER VARIABLE_1 < ( VARIABLE_0 . FUNCTION_CALL_3: 0.0
********** f = open brackets
(: 0.0
********** f = VARIABLE_1 close bracket return false end if end for return true 
VARIABLE_1 return false return true: 0.0
********** f = integer VARIABLE_1 equals NUMBER to open brackets VARIABLE_0 dot
VARIABLE_1 = NUMBER VARIABLE_1 < ( VARIABLE_0 .: 0.0
********** f = NUMBER close brackets over NUMBER
NUMBER ) / NUMBER: 0.0
********** f = open brackets VARIABLE_0
( VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if end for
FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = equals NUMBER to open
= NUMBER: 0.0
********** f = if VARIABLE_0 square bracket VARIABLE_1 close square bracket not equal to VARIABLE_0 open
VARIABLE_1 + + if VARIABLE_0 index VARIABLE_1 !=: 0.0
********** f = integer VARIABLE_1 equals NUMBER to open brackets
VARIABLE_1 = NUMBER VARIABLE_1 < (: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = square
index VARIABLE_1: -1.6094379124341003
index: -0.5108256237659907
index VARIABLE_2: -1.6094379124341003
********** f = close bracket return false
return false: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_3
VARIABLE_0 . FUNCTION_CALL_3: 0.0
********** f = brackets over
) /: 0.0
********** f = minus VARIABLE_1 close bracket return false end if
- VARIABLE_1 return false: 0.0
********** f = minus VARIABLE_1 close bracket return false end if end for return true 
- VARIABLE_1 return false return true: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 -: 0.0
********** f = brackets VARIABLE_0 dot
( VARIABLE_0 .: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if end
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = close bracket return false end
return false: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if end for return true 
FUNCTION_CALL_3 - VARIABLE_1 return false return true: 0.0
********** f = brackets VARIABLE_0
( VARIABLE_0: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3: 0.0
********** f = FUNCTION_CALL_3 minus NUMBER close brackets over NUMBER
FUNCTION_CALL_3 - NUMBER ) / NUMBER: 0.0
********** f = bracket not equal to
!=: -0.6931471805599453
VARIABLE_1 !=: -0.6931471805599453
********** f = bracket return false end if
return false: 0.0
********** f = VARIABLE_1 close bracket return
VARIABLE_1 return: 0.0
********** f = bracket return false end if end for return true 
return false return true: 0.0
********** f = minus VARIABLE_1 close bracket return
- VARIABLE_1 return: 0.0
********** f = bracket not equal
!=: -0.6931471805599453
VARIABLE_1 !=: -0.6931471805599453
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if
FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = VARIABLE_1 equals NUMBER to open
VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = bracket return false end if end for
return false: 0.0
********** f = minus VARIABLE_1 close bracket return false end if end
- VARIABLE_1 return false: 0.0
********** f = bracket VARIABLE_1
VARIABLE_1 +: -0.6931471805599453
VARIABLE_1: -0.6931471805599453
********** f = bracket return false
return false: 0.0
********** f = bracket not
VARIABLE_1 !=: -0.6931471805599453
!=: -0.6931471805599453
********** f = if VARIABLE_0 square
if: 0.0
********** f = brackets VARIABLE_0 dot FUNCTION_CALL_3 minus
( VARIABLE_0 . FUNCTION_CALL_3 -: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to open brackets
for VARIABLE_1 = NUMBER VARIABLE_1 < (: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_3 minus
VARIABLE_0 . FUNCTION_CALL_3 -: 0.0
********** f = square bracket
index VARIABLE_1: -1.791759469228055
index: -0.40546510810816444
index VARIABLE_2: -1.791759469228055
********** f = square bracket not
index VARIABLE_1 !=: 0.0
********** f = close bracket return false end if
return false: 0.0
********** f = square bracket not equal to
index VARIABLE_1 !=: 0.0
********** f = VARIABLE_1 close bracket return false end if end
VARIABLE_1 return false: 0.0
********** f = square bracket not equal
index VARIABLE_1 !=: 0.0
********** f = bracket VARIABLE_0 dot
VARIABLE_0 index VARIABLE_0 .: 0.0
********** f = close bracket return false end if end
return false: 0.0
********** f = square bracket VARIABLE_1
VARIABLE_1: -0.6931471805599453
VARIABLE_1 +: -0.6931471805599453
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = bracket return
return: 0.0
********** f = close bracket return false end if end for
return false: 0.0
********** f = bracket return false end
return false: 0.0
********** f = open brackets VARIABLE_0 dot FUNCTION_CALL_3
( VARIABLE_0 . FUNCTION_CALL_3: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1
FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return
FUNCTION_CALL_3 - VARIABLE_1 return: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to open
for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_1
VARIABLE_1: -0.6931471805599453
VARIABLE_1 +: -0.6931471805599453
********** f = close brackets over
) /: 0.0
********** f = close bracket return false end if end for return true 
return false return true: 0.0
********** f = minus VARIABLE_1 close bracket return false end if end for
- VARIABLE_1 return false: 0.0
********** f = integer VARIABLE_1 equals NUMBER to open brackets VARIABLE_0
VARIABLE_1 = NUMBER VARIABLE_1 < ( VARIABLE_0: 0.0
********** f = VARIABLE_1 close bracket return false
VARIABLE_1 return false: 0.0
********** f = close bracket return
return: 0.0
********** f = FUNCTION_CALL_3 minus
FUNCTION_CALL_3 -: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end
FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to open brackets VARIABLE_0
for VARIABLE_1 = NUMBER VARIABLE_1 < ( VARIABLE_0: 0.0
********** f = dot FUNCTION_CALL_3
. FUNCTION_CALL_3: 0.0
********** f = VARIABLE_1 close bracket return false end if
VARIABLE_1 return false: 0.0
********** f = dot FUNCTION_CALL_3 minus NUMBER close brackets over NUMBER
. FUNCTION_CALL_3 - NUMBER ) / NUMBER: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_3 minus NUMBER close brackets over NUMBER
VARIABLE_0 . FUNCTION_CALL_3 - NUMBER ) / NUMBER: 0.0
********** f = dot FUNCTION_CALL_3 minus
. FUNCTION_CALL_3 -: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false
FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = integer VARIABLE_1 equals NUMBER to open
VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = bracket return false end if end
return false: 0.0
********** f = brackets VARIABLE_0 dot FUNCTION_CALL_3 minus NUMBER close brackets over NUMBER
( VARIABLE_0 . FUNCTION_CALL_3 - NUMBER ) / NUMBER: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if end
FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = close square bracket not equal to VARIABLE_0
VARIABLE_0 index VARIABLE_1 !=: 0.0
********** f = VARIABLE_0 dot
VARIABLE_0 .: -0.6931471805599453
.: -0.6931471805599453
********** f = open brackets VARIABLE_0 dot FUNCTION_CALL_3 minus NUMBER close brackets over NUMBER
( VARIABLE_0 . FUNCTION_CALL_3 - NUMBER ) / NUMBER: 0.0
********** f = minus NUMBER close brackets over NUMBER
- NUMBER ) / NUMBER: 0.0
********** f = minus VARIABLE_1 close bracket return false
- VARIABLE_1 return false: 0.0
********** f = VARIABLE_1 close bracket return false end
VARIABLE_1 return false: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false end if end for
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close
FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = VARIABLE_1 close bracket return false end if end for
VARIABLE_1 return false: 0.0
********** f = open
+: -0.6931471805599453
+ +: -1.3862943611198906
+ NUMBER: -1.3862943611198906
********** f = minus VARIABLE_1 close bracket return false end
- VARIABLE_1 return false: 0.0
********** f = for integer VARIABLE_1 equals NUMBER to open brackets VARIABLE_0 dot
for VARIABLE_1 = NUMBER VARIABLE_1 < ( VARIABLE_0 .: 0.0
********** f = minus VARIABLE_1 close bracket
- VARIABLE_1: 0.0
********** f = open brackets VARIABLE_0 dot
( VARIABLE_0 .: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = if VARIABLE_0 square bracket
if: 0.0
********** f = bracket VARIABLE_0 dot FUNCTION_CALL_3 minus VARIABLE_1 close bracket return false
VARIABLE_0 index VARIABLE_0 . FUNCTION_CALL_3 - VARIABLE_1 return false: 0.0
********** f = VARIABLE_1 close bracket
VARIABLE_1: 0.0
********** f = FUNCTION_CALL_3 minus VARIABLE_1 close bracket
FUNCTION_CALL_3 - VARIABLE_1: 0.0
********** f = open brackets VARIABLE_0 dot FUNCTION_CALL_3 minus
( VARIABLE_0 . FUNCTION_CALL_3 -: 0.0
********** f = minus VARIABLE_1 close
- VARIABLE_1: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0
VARIABLE_2 = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_2 VARIABLE_0
VARIABLE_2 VARIABLE_0: 0.0
********** f = set
=: -0.2876820724517809
= NUMBER: -1.3862943611198906
********** f = VARIABLE_0 list at index
VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = set to
=: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 is set to
index VARIABLE_2 =: 0.0
********** f = index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index
VARIABLE_2 VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = is set to VARIABLE_0
= VARIABLE_0: 0.0
********** f = VARIABLE_0 list at index VARIABLE_3 is
VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0 list at index
VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index
index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 VARIABLE_0 list
VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0
index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 list at index VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to
VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = to VARIABLE_1 
= VARIABLE_1: 0.0
********** f = VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index
index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = is set
=: 0.0
********** f = VARIABLE_0 list
VARIABLE_0: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at
index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = at index VARIABLE_3 is
index VARIABLE_3: 0.0
********** f = set to VARIABLE_0
= VARIABLE_0: 0.0
********** f = set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_2 VARIABLE_0 at
VARIABLE_2 VARIABLE_0: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 at index
VARIABLE_0 index: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0
index VARIABLE_2 = VARIABLE_0: 0.0
********** f = is set to
=: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2
index VARIABLE_2: -0.15415067982725836
VARIABLE_2: -1.9459101490553135
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = at index VARIABLE_2 is set to
index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at
index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
= VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0 list at index
index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = at index VARIABLE_2 VARIABLE_0
index VARIABLE_2 VARIABLE_0: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = equals VARIABLE_0 at
VARIABLE_0: 0.0
********** f = is set to VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 is set to
VARIABLE_2 =: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 is
index VARIABLE_2: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
= VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 
VARIABLE_1: 0.0
********** f = index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_3 VARIABLE_0 list
index VARIABLE_3 VARIABLE_0: 0.0
********** f = set to VARIABLE_0 index VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = set to VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 VARIABLE_0
index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is set to VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 at index VARIABLE_2 VARIABLE_0 at index VARIABLE_2 is
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_3 VARIABLE_0 list at index VARIABLE_3 is
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = set a variable VARIABLE_1 to the
VARIABLE_1 =: 0.0
********** f = set a variable VARIABLE_1 to the value
VARIABLE_1 =: 0.0
********** f = in VARIABLE_0 at index VARIABLE_2 set the value VARIABLE_0 at index VARIABLE_2 to the
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = in VARIABLE_0 at index VARIABLE_2 set the value VARIABLE_0 at index VARIABLE_2 to
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = value in VARIABLE_0 at index VARIABLE_2 set the value VARIABLE_0 at index VARIABLE_2 to
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = value in VARIABLE_0 at index VARIABLE_2 set the value VARIABLE_0 at index VARIABLE_2 to the
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = in VARIABLE_0 at index VARIABLE_2 set the value VARIABLE_0 at index VARIABLE_2 to the value
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = in VARIABLE_0 at index VARIABLE_3 set the value in VARIABLE_0 at index VARIABLE_3 to VARIABLE_1
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index VARIABLE_3 equal to
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 let the VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = the VARIABLE_0 index VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index VARIABLE_3 equal to
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = let the VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 return the VARIABLE_0 
VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 let
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_3 equal to
VARIABLE_3 =: 0.0
********** f = equal to VARIABLE_1 return the VARIABLE_0 
= VARIABLE_1 return VARIABLE_0: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0
VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = let the VARIABLE_0 index
VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_2 let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2 let the VARIABLE_0
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 let the VARIABLE_0 index
VARIABLE_2 VARIABLE_0 index: 0.0
********** f = the VARIABLE_0 index VARIABLE_3 equal to
VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_0 index VARIABLE_3 equal to VARIABLE_1 return the VARIABLE_0 
VARIABLE_0 index VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = VARIABLE_3 equal to VARIABLE_1 return the VARIABLE_0 
VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = VARIABLE_2 let the VARIABLE_0 index VARIABLE_2
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 let the VARIABLE_0 index VARIABLE_2
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 let the VARIABLE_0 index
index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 let the VARIABLE_0
index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 let the VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 let the
VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
= VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = the VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index
VARIABLE_1 = VARIABLE_0 index: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2 let the VARIABLE_0 index
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let the
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2 let the VARIABLE_0 index VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2 let
VARIABLE_1 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 let the
index VARIABLE_2: 0.0
********** f = let the VARIABLE_0
VARIABLE_0: 0.0
********** f = the VARIABLE_0 index
VARIABLE_0 index: 0.0
********** f = VARIABLE_2 let the VARIABLE_0
VARIABLE_2 VARIABLE_0: 0.0
********** f = the VARIABLE_0 index VARIABLE_3 equal to VARIABLE_1 return the VARIABLE_0 
VARIABLE_0 index VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_3 equal to
index VARIABLE_3 =: 0.0
********** f = VARIABLE_2 let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 let
VARIABLE_2: 0.0
********** f = index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_3 equal to
VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2 let the
VARIABLE_1 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = let VARIABLE_1 equal the
VARIABLE_1 =: 0.0
********** f = index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 let
index VARIABLE_2: 0.0
********** f = let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 let the
VARIABLE_2: 0.0
********** f = let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_2 let the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = the VARIABLE_0 index VARIABLE_2 equal to the VARIABLE_0 index VARIABLE_3 let the VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 let the VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = let VARIABLE_1 equal the VARIABLE_0 index VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_3 equal to VARIABLE_1 return the VARIABLE_0 
index VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = equal to the VARIABLE_0 index VARIABLE_3 let
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = equal to VARIABLE_0
= VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_3 is equal to VARIABLE_0 index
index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index
VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = is equal to VARIABLE_0
= VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0 index
VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0
VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0
VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1
index VARIABLE_3 = VARIABLE_0 index VARIABLE_1: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index
index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is equal to
VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0
VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1
VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_3 is equal to
VARIABLE_3 =: 0.0
********** f = equal to VARIABLE_0 index VARIABLE_1
= VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to
VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2
= VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_1 return VARIABLE_0 
index VARIABLE_1 return VARIABLE_0: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0
VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 index
VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_3 is equal to
index VARIABLE_3 =: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0
= VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index
VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_3 is equal to VARIABLE_0
index VARIABLE_3 = VARIABLE_0: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0
VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0
= VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_1
= VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index
VARIABLE_1 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_1 is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0
VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
VARIABLE_3 = VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_1
index VARIABLE_1: 0.0
********** f = VARIABLE_0 index VARIABLE_1
VARIABLE_0 index VARIABLE_1: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 equal
index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal VARIABLE_0
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = equal to VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
= VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0
index VARIABLE_3 VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index
index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = is equal to VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
= VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 index
VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0
index VARIABLE_2 = VARIABLE_0: 0.0
********** f = index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 equal
VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = equal to VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1
VARIABLE_3 = VARIABLE_0 index VARIABLE_1: 0.0
********** f = is equal to VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_2 equal VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal VARIABLE_0
VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equal VARIABLE_0 index VARIABLE_3
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 VARIABLE_0 index VARIABLE_3
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1 return VARIABLE_0 
index VARIABLE_3 = VARIABLE_0 index VARIABLE_1 return VARIABLE_0: 0.0
********** f = index VARIABLE_3 VARIABLE_0 index VARIABLE_3 is equal to VARIABLE_0 index VARIABLE_1
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_1: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals VARIABLE_1 return VARIABLE_0 
VARIABLE_0 index VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2
= VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals VARIABLE_1
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 square bracket VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0 square bracket
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = close square bracket equals VARIABLE_1
= VARIABLE_1: 0.0
********** f = VARIABLE_3 close square
VARIABLE_3: 0.0
********** f = VARIABLE_3 close square bracket
VARIABLE_3: 0.0
********** f = integer VARIABLE_1 equals
VARIABLE_1 =: 0.0
********** f = square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 close square bracket
VARIABLE_2: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = close square bracket equals VARIABLE_0 square bracket
= VARIABLE_0 index: 0.0
********** f = square bracket equals VARIABLE_1
= VARIABLE_1: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals VARIABLE_1
VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals
VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = integer VARIABLE_1
VARIABLE_1: 0.0
********** f = bracket equals VARIABLE_1 return VARIABLE_0 
= VARIABLE_1 return VARIABLE_0: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0 square bracket
VARIABLE_1 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = bracket equals VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
VARIABLE_2 = VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals VARIABLE_1
VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = bracket equals VARIABLE_0
= VARIABLE_0: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket
VARIABLE_3 VARIABLE_0 index: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close
VARIABLE_0 index VARIABLE_3: 0.0
********** f = square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = square bracket equals VARIABLE_0 square bracket
= VARIABLE_0 index: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals
VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 close square bracket equals
VARIABLE_2 =: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket VARIABLE_0 square bracket
VARIABLE_0 index: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0
VARIABLE_2 = VARIABLE_0: 0.0
********** f = close square bracket equals VARIABLE_0
= VARIABLE_0: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square
index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket
VARIABLE_2 VARIABLE_0 index: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket
VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = bracket equals VARIABLE_0 square bracket
= VARIABLE_0 index: 0.0
********** f = square bracket VARIABLE_3
index VARIABLE_3: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2
= VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = bracket equals VARIABLE_1
= VARIABLE_1: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket equals VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket equals VARIABLE_1 return VARIABLE_0 
= VARIABLE_1 return VARIABLE_0: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0
VARIABLE_1 = VARIABLE_0: 0.0
********** f = VARIABLE_2 close square
VARIABLE_2: 0.0
********** f = VARIABLE_3 close square bracket equals VARIABLE_1
VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket equals
VARIABLE_3 VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = equals VARIABLE_0 square bracket
= VARIABLE_0 index: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket VARIABLE_2 close
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket equals VARIABLE_0
= VARIABLE_0: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = bracket equals
=: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0 square bracket
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0 square bracket VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = square bracket equals VARIABLE_0 square bracket VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket equals
=: 0.0
********** f = square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3
index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close square bracket
VARIABLE_0 index VARIABLE_3: 0.0
********** f = equals VARIABLE_1 return VARIABLE_0 
= VARIABLE_1 return VARIABLE_0: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_3 close square bracket equals
VARIABLE_3 =: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 square bracket
VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = square bracket equals
=: 0.0
********** f = VARIABLE_0 square bracket
VARIABLE_0 index: 0.0
********** f = bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_2 close square bracket equals VARIABLE_0 square bracket VARIABLE_3
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = integer VARIABLE_1 equals VARIABLE_0 square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = close square bracket equals VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index: 0.0
********** f = square bracket VARIABLE_2
index VARIABLE_2: -0.40546510810816444
VARIABLE_2: -1.0986122886681098
********** f = VARIABLE_3 close square bracket equals VARIABLE_1 return VARIABLE_0 
VARIABLE_3 = VARIABLE_1 return VARIABLE_0: 0.0
********** f = close square bracket equals VARIABLE_1 return VARIABLE_0 
= VARIABLE_1 return VARIABLE_0: 0.0
********** f = close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 square bracket VARIABLE_3 close square bracket VARIABLE_0 square bracket VARIABLE_3 close square
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3: 0.0
********** f = square bracket VARIABLE_2 close square bracket VARIABLE_0 square bracket
index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = let a new variable VARIABLE_1 equal to VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = position VARIABLE_2
index VARIABLE_2: 0.0
********** f = VARIABLE_2 equal to VARIABLE_0 position VARIABLE_3
VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = position VARIABLE_2 let
index VARIABLE_2: 0.0
********** f = VARIABLE_0 position VARIABLE_3
VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_2 equal to
VARIABLE_2 =: 0.0
********** f = let a new variable VARIABLE_1 equal to
VARIABLE_1 =: 0.0
********** f = VARIABLE_3 and let VARIABLE_0 position VARIABLE_3 equal to VARIABLE_1 
VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 equal to VARIABLE_0 position
VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = and let VARIABLE_0 position VARIABLE_3 equal to VARIABLE_1 
VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = position VARIABLE_3 and let VARIABLE_0 position VARIABLE_3 equal to VARIABLE_1 
index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = equal to VARIABLE_0 position VARIABLE_3 and let VARIABLE_0 position VARIABLE_3 equal to VARIABLE_1 
= VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = VARIABLE_0 position VARIABLE_3 and let VARIABLE_0 position VARIABLE_3 equal to VARIABLE_1 
VARIABLE_0 index VARIABLE_3 VARIABLE_0 index VARIABLE_3 = VARIABLE_1: 0.0
********** f = position VARIABLE_2 equal to
index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 position
VARIABLE_0 index: 0.0
********** f = let a new variable VARIABLE_1 equal to VARIABLE_0 position VARIABLE_2 let VARIABLE_0
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_2 equal to VARIABLE_0
VARIABLE_2 = VARIABLE_0: 0.0
********** f = position VARIABLE_3
index VARIABLE_3: 0.0
********** f = position VARIABLE_2 equal to VARIABLE_0 position
index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = equal to VARIABLE_0 position VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = let VARIABLE_0 position VARIABLE_3 equal to
VARIABLE_0 index VARIABLE_3 =: 0.0
********** f = position VARIABLE_2 equal to VARIABLE_0 position VARIABLE_3
index VARIABLE_2 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = position
index: 0.0
********** f = let a new variable VARIABLE_1 equal to VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position VARIABLE_2
VARIABLE_1 = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = equal to VARIABLE_0 position
= VARIABLE_0 index: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position VARIABLE_2 equal to VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position VARIABLE_2 equal to
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 position VARIABLE_2 let VARIABLE_0 position VARIABLE_2 equal to VARIABLE_0 position
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = position VARIABLE_2 equal to VARIABLE_0
index VARIABLE_2 = VARIABLE_0: 0.0
********** f = index VARIABLE_2 plus NUMBER
index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_0 index VARIABLE_2 plus NUMBER 
VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for
VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = integer VARIABLE_2 equals NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing else
VARIABLE_2 + NUMBER continue else: 0.0
********** f = NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer
NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.6931471805599453
********** f = else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0
else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = for integer VARIABLE_1 equals NUMBER VARIABLE_1
for VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER
VARIABLE_1 + + for VARIABLE_2 = NUMBER: 0.0
********** f = plus NUMBER then do nothing else FUNCTION_CALL_5
+ NUMBER continue else FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do
VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = integer VARIABLE_2 equals NUMBER VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = equals NUMBER VARIABLE_2
= NUMBER VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.40546510810816444
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -1.0986122886681098
********** f = VARIABLE_2 is smaller than VARIABLE_0 index
VARIABLE_2 < VARIABLE_0 index: 0.0
********** f = plus NUMBER then do nothing else
+ NUMBER continue else: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing else
< VARIABLE_0 index VARIABLE_2 + NUMBER continue else: 0.0
********** f = VARIABLE_1 plus plus open parentheses for integer VARIABLE_2
VARIABLE_1 + + for VARIABLE_2: 0.0
********** f = VARIABLE_1 plus plus open parentheses for integer
VARIABLE_1 + + for: 0.0
********** f = VARIABLE_2 plus plus if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0
VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2 < VARIABLE_0: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than
+ + for VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals
VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 =: 0.0
********** f = VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2
VARIABLE_2 < VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 plus NUMBER then do nothing else
index VARIABLE_2 + NUMBER continue else: 0.0
********** f = is smaller than VARIABLE_0 index
< VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5
index VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5: 0.0
********** f = integer VARIABLE_1 equals NUMBER VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = for integer VARIABLE_1 equals
for VARIABLE_1 =: 0.0
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER
VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 = NUMBER: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0 index
else FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 VARIABLE_2 plus plus
VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.40546510810816444
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -1.0986122886681098
********** f = FUNCTION_CALL_4 VARIABLE_0
FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = index VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0
index VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for
NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5
< VARIABLE_0 index VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5: 0.0
********** f = equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index
VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 =: 0.0
********** f = nothing else
continue else: 0.0
********** f = equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
= NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0
continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = VARIABLE_2 plus plus if VARIABLE_0 index VARIABLE_2
VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than
VARIABLE_1 + + for VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = for integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do
VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4
VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = is smaller than VARIABLE_0 index VARIABLE_2
< VARIABLE_0 index VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -1.0986122886681098
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.40546510810816444
********** f = VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2
VARIABLE_1 + + for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0 index
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = equals NUMBER VARIABLE_1
= NUMBER VARIABLE_1: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2
VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2: 0.0
********** f = equals NUMBER VARIABLE_2 smaller than
= NUMBER VARIABLE_2 <: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2 equals
+ + for VARIABLE_2 =: 0.0
********** f = for integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than
for VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
+ + for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 index VARIABLE_2 plus
VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = VARIABLE_2 is smaller than VARIABLE_0
VARIABLE_2 < VARIABLE_0: 0.0
********** f = equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do
< VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4
NUMBER VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0
+ NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_1 plus plus open parentheses for
VARIABLE_1 + + for: 0.0
********** f = integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -0.6931471805599453
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer
VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = plus plus if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index
+ if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index: -0.6931471805599453
+ + if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index: -0.6931471805599453
********** f = VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0
VARIABLE_0 index VARIABLE_2 < VARIABLE_0: 0.0
********** f = VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0 index
VARIABLE_0 VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_2 smaller than
VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0
else FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = for integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4
for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER 
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = is smaller than VARIABLE_0
< VARIABLE_0: 0.0
********** f = is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing
< VARIABLE_0 index VARIABLE_2 + NUMBER continue: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2
+ + for VARIABLE_2: 0.0
********** f = plus plus if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0
+ if VARIABLE_0 index VARIABLE_2 < VARIABLE_0: -0.6931471805599453
+ + if VARIABLE_0 index VARIABLE_2 < VARIABLE_0: -0.6931471805599453
********** f = NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2
VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do
index VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2 equals NUMBER
+ + for VARIABLE_2 = NUMBER: 0.0
********** f = plus plus if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2
+ if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_1 equals NUMBER VARIABLE_1 smaller than
VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = VARIABLE_2 plus plus if VARIABLE_0
VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 plus NUMBER
VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = index VARIABLE_2 is smaller than VARIABLE_0
index VARIABLE_2 < VARIABLE_0: 0.0
********** f = plus plus open parentheses for integer
+ + for: 0.0
********** f = integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = nothing
continue: 0.0
********** f = VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals
VARIABLE_1 + + for VARIABLE_2 =: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2
+ + for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = index VARIABLE_2 plus
index VARIABLE_2 +: 0.0
********** f = integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than
VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2
+ NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index: 0.0
********** f = plus plus open parentheses for
+ + for: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = VARIABLE_1 equals NUMBER VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1: 0.0
********** f = equals NUMBER VARIABLE_1 smaller than
= NUMBER VARIABLE_1 <: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index
FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing else
VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER continue else: 0.0
********** f = plus NUMBER then do
+ NUMBER: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2
continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if: 0.0
********** f = plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0
+ NUMBER continue else FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2
if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing
VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER continue: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5
VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2
else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2: 0.0
********** f = integer VARIABLE_1 equals NUMBER
VARIABLE_1 = NUMBER: 0.0
********** f = index VARIABLE_2 plus NUMBER 
index VARIABLE_2 + NUMBER: 0.0
********** f = NUMBER VARIABLE_2 smaller than
NUMBER VARIABLE_2 <: 0.0
********** f = plus plus if VARIABLE_0 index
+ + if VARIABLE_0 index: -0.6931471805599453
+ if VARIABLE_0 index: -0.6931471805599453
********** f = index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2
index VARIABLE_2 < VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = index VARIABLE_2 plus NUMBER then do
index VARIABLE_2 + NUMBER: 0.0
********** f = index VARIABLE_2 plus NUMBER then do nothing
index VARIABLE_2 + NUMBER continue: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER 
VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = plus plus if VARIABLE_0 index VARIABLE_2
+ if VARIABLE_0 index VARIABLE_2: -0.6931471805599453
+ + if VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0 index VARIABLE_2
VARIABLE_0 VARIABLE_2 + + if VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = integer VARIABLE_2 equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus
else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = for integer VARIABLE_1
for VARIABLE_1: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for
VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = VARIABLE_2 plus plus if
VARIABLE_2 + + if: 0.0
********** f = VARIABLE_2 plus plus
VARIABLE_2 + +: 0.0
********** f = integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER 
FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = plus NUMBER 
+ NUMBER: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER
VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = integer VARIABLE_2 equals
VARIABLE_2 =: 0.0
********** f = integer VARIABLE_2
VARIABLE_2: 0.0
********** f = equals NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
= NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index
if VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = if VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0
if VARIABLE_0 index VARIABLE_2 < VARIABLE_0: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4
VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = else FUNCTION_CALL_5
else FUNCTION_CALL_5: 0.0
********** f = equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
= NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2: 0.0
********** f = index VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index
index VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0
VARIABLE_2 + NUMBER continue else FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 < VARIABLE_0 index VARIABLE_2: 0.0
********** f = if VARIABLE_0 index VARIABLE_2
if VARIABLE_0 index VARIABLE_2: 0.0
********** f = plus NUMBER then do nothing
+ NUMBER continue: 0.0
********** f = for integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
for VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0
VARIABLE_0 index VARIABLE_2 VARIABLE_0: 0.0
********** f = for integer VARIABLE_1 equals NUMBER
for VARIABLE_1 = NUMBER: 0.0
********** f = equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4
= NUMBER VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + +: 0.0
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2
VARIABLE_0 VARIABLE_1 + + for VARIABLE_2: 0.0
********** f = index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER
index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0
VARIABLE_0 VARIABLE_2 + + if VARIABLE_0: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
continue else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 = NUMBER: 0.0
********** f = VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus
VARIABLE_2 VARIABLE_0 index VARIABLE_2 +: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index
else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 plus NUMBER 
VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if VARIABLE_0 index
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 =: 0.0
********** f = VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4: 0.0
********** f = integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_1 = NUMBER VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0 index
continue else FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 is smaller than VARIABLE_0 index
index VARIABLE_2 < VARIABLE_0 index: 0.0
********** f = VARIABLE_2 plus NUMBER 
VARIABLE_2 + NUMBER: 0.0
********** f = VARIABLE_2 plus NUMBER then do nothing
VARIABLE_2 + NUMBER continue: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1
VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus plus if
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 + + if: 0.0
********** f = VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer VARIABLE_2 equals NUMBER VARIABLE_2
VARIABLE_0 VARIABLE_1 + + for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = smaller than FUNCTION_CALL_4
< FUNCTION_CALL_4: 0.0
********** f = plus NUMBER then do nothing else FUNCTION_CALL_5 VARIABLE_0 index
+ NUMBER continue else FUNCTION_CALL_5 VARIABLE_0 index: 0.0
********** f = nothing else FUNCTION_CALL_5
continue else FUNCTION_CALL_5: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: -1.0986122886681098
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: -0.40546510810816444
********** f = VARIABLE_2 plus NUMBER then do
VARIABLE_2 + NUMBER: 0.0
********** f = else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2
else FUNCTION_CALL_5 VARIABLE_0 index VARIABLE_2 VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 equals NUMBER VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = VARIABLE_2 plus plus if VARIABLE_0 index
VARIABLE_2 + + if VARIABLE_0 index: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = nothing else FUNCTION_CALL_5 VARIABLE_0
continue else FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0
< FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = index VARIABLE_2 is smaller than VARIABLE_0 index VARIABLE_2 plus NUMBER then do nothing
index VARIABLE_2 < VARIABLE_0 index VARIABLE_2 + NUMBER continue: 0.0
********** f = integer VARIABLE_1 equals NUMBER VARIABLE_1 smaller than
VARIABLE_1 = NUMBER VARIABLE_1 <: 0.0
********** f = VARIABLE_2 smaller than
VARIABLE_2 <: 0.0
********** f = VARIABLE_0 VARIABLE_2 plus plus if
VARIABLE_0 VARIABLE_2 + + if: 0.0
********** f = VARIABLE_1 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 plus plus open parentheses for integer
VARIABLE_1 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_1 + + for: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus
. FUNCTION_CALL_5 -: 0.0
********** f = close square bracket greater
>: 0.0
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = NUMBER to VARIABLE_0 dot
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = end for return VARIABLE_0
VARIABLE_0 return VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 return VARIABLE_0: -0.6931471805599453
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = for VARIABLE_1 equals NUMBER to VARIABLE_0
for VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0: 0.0
********** f = end if end for end
in: -0.6931471805599453
in FUNCTION_CALL_4: -0.6931471805599453
********** f = end if end for end for
in FUNCTION_CALL_4: -0.6931471805599453
in: -0.6931471805599453
********** f = for VARIABLE_2 equals NUMBER
NUMBER for: 0.0
********** f = NUMBER to VARIABLE_0
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = FUNCTION_CALL_5 minus NUMBER
FUNCTION_CALL_5 -: 0.0
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
********** f = FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to
FUNCTION_CALL_5 - NUMBER for VARIABLE: 0.0
********** f = for end for return VARIABLE_0
VARIABLE_0 return VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 return VARIABLE_0: -0.6931471805599453
********** f = end for end for return
return: 0.0
********** f = equals NUMBER to VARIABLE_0
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_0 open square
VARIABLE_0: 0.0
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0
in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = NUMBER for VARIABLE_2 equals
for: 0.0
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
********** f = then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER VARIABLE_0
VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: -1.0986122886681098
********** f = VARIABLE_0 open square bracket VARIABLE_2 close square bracket
VARIABLE_0: 0.0
********** f = VARIABLE_0 end if
in FUNCTION_CALL_4: -0.6931471805599453
in: -0.6931471805599453
********** f = VARIABLE_0 end if end for end
in FUNCTION_CALL_4: -0.6931471805599453
in: -0.6931471805599453
********** f = dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to
. FUNCTION_CALL_5 - NUMBER for VARIABLE: 0.0
********** f = for return VARIABLE_0
VARIABLE_0 return VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 return VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 open square bracket
VARIABLE_0: 0.0
********** f = equals NUMBER to VARIABLE_0 dot
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
********** f = dot FUNCTION_CALL_5 minus NUMBER
. FUNCTION_CALL_5 -: 0.0
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = square bracket VARIABLE_2 plus
index VARIABLE_2: 0.0
********** f = for VARIABLE_2 equals NUMBER to
NUMBER for VARIABLE: 0.0
********** f = for VARIABLE_2 equals NUMBER to VARIABLE_0
NUMBER for VARIABLE: 0.0
********** f = bracket VARIABLE_2 plus
VARIABLE_2: 0.0
********** f = equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: -1.0986122886681098
********** f = close square
VARIABLE_0 index: -0.40546510810816444
VARIABLE_0 index VARIABLE_2: -1.0986122886681098
********** f = end for end for return VARIABLE_0
VARIABLE_0 return VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 return VARIABLE_0: -0.6931471805599453
********** f = NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for VARIABLE: -1.0986122886681098
********** f = if end for end for return
return: 0.0
********** f = NUMBER for VARIABLE_2 equals NUMBER
NUMBER for: 0.0
********** f = if end for end for return VARIABLE_0
VARIABLE_0 return VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0 return VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot
FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: -1.0986122886681098
********** f = VARIABLE_0 end if end for
in: -0.6931471805599453
in FUNCTION_CALL_4: -0.6931471805599453
********** f = VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0: 0.0
********** f = VARIABLE_2 close square bracket greater
>: 0.0
********** f = square bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER
index VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 minus
FUNCTION_CALL_5 -: 0.0
********** f = minus NUMBER for VARIABLE_2 equals NUMBER
- NUMBER for: 0.0
********** f = end if end for
in FUNCTION_CALL_4: -1.3862943611198906
in: -0.2876820724517809
********** f = VARIABLE_0 end if end for end for
in FUNCTION_CALL_4: -0.6931471805599453
in: -0.6931471805599453
********** f = dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER
. FUNCTION_CALL_5 - NUMBER for: 0.0
********** f = dot FUNCTION_CALL_5 minus
. FUNCTION_CALL_5 -: 0.0
********** f = bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER VARIABLE_0
VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
. FUNCTION_CALL_5 - NUMBER for VARIABLE: 0.0
********** f = bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER
VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = for VARIABLE_2 equals
for: 0.0
********** f = VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER
in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER for: -1.0986122886681098
********** f = close
VARIABLE_0: 0.0
********** f = square bracket VARIABLE_2 close square bracket greater
>: 0.0
********** f = square bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER VARIABLE_0
index VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = NUMBER for VARIABLE_2 equals NUMBER to
NUMBER for VARIABLE: 0.0
********** f = square bracket greater
>: 0.0
********** f = bracket VARIABLE_2 close square bracket greater
>: 0.0
********** f = close square bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER VARIABLE_0
VARIABLE_0 index VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = to VARIABLE_0
VARIABLE: -0.6931471805599453
VARIABLE_0: -0.6931471805599453
********** f = NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 end if end
in FUNCTION_CALL_4: -0.6931471805599453
in: -0.6931471805599453
********** f = FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER
FUNCTION_CALL_5 - NUMBER for: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_5
. FUNCTION_CALL_5: 0.0
********** f = minus NUMBER for VARIABLE_2 equals NUMBER to
- NUMBER for VARIABLE: 0.0
********** f = VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0: 0.0
********** f = then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER
VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = bracket greater
>: 0.0
********** f = for VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5
for VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5: 0.0
********** f = close square bracket
VARIABLE_0 index: -0.40546510810816444
VARIABLE_0 index VARIABLE_2: -1.0986122886681098
********** f = bracket VARIABLE_2
VARIABLE_2: 0.0
********** f = close square bracket then FUNCTION_CALL_6 VARIABLE_2 j plus NUMBER
VARIABLE_0 index VARIABLE_2 + NUMBER FUNCTION_CALL_6 VARIABLE_2 VARIABLE_2: 0.0
********** f = for VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER
for VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: 0.0
********** f = minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
- NUMBER for VARIABLE: 0.0
********** f = for VARIABLE_1 equals NUMBER to VARIABLE_0 dot
for VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 .: 0.0
********** f = for VARIABLE_1 equals NUMBER to VARIABLE_0 dot FUNCTION_CALL_5 minus
for VARIABLE in FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 -: 0.0
********** f = FUNCTION_CALL_5 minus NUMBER for VARIABLE_2 equals NUMBER to VARIABLE_0
FUNCTION_CALL_5 - NUMBER for VARIABLE: 0.0
********** f = open square bracket VARIABLE_2 close square bracket greater
>: 0.0
********** f = for end for return
return: 0.0
********** f = equal to VARIABLE_1 at index VARIABLE_0
VARIABLE_1 index VARIABLE_0: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7
FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7: 0.0
********** f = at index VARIABLE_0 onto VARIABLE_5
index VARIABLE_0 VARIABLE_5: 0.0
********** f = FUNCTION_CALL_10 of VARIABLE_4
FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = is the
=: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else
= VARIABLE_2 + NUMBER else: 0.0
********** f = NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto
NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = or the
VARIABLE_6 or: -1.0986122886681098
or: -1.0986122886681098
FUNCTION_CALL_11 VARIABLE_6 or: -1.0986122886681098
********** f = or the VARIABLE_2
FUNCTION_CALL_11 VARIABLE_6 or VARIABLE_2: -1.0986122886681098
or VARIABLE_2: -1.0986122886681098
VARIABLE_6 or VARIABLE_2: -1.0986122886681098
********** f = less than equal
and: 0.0
********** f = NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5
NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5: 0.0
********** f = is the FUNCTION_CALL_9 of the VARIABLE_4 if
= FUNCTION_CALL_9 VARIABLE_4 if: 0.0
********** f = onto
>=: 0.0
********** f = else FUNCTION_CALL_12
else FUNCTION_CALL_12: 0.0
********** f = is less than equal to
and: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop return VARIABLE_5 
VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER return VARIABLE_5: 0.0
********** f = VARIABLE_7
VARIABLE_7 /: -1.791759469228055
VARIABLE_7: -0.6931471805599453
- NUMBER VARIABLE_7: -1.791759469228055
NUMBER VARIABLE_7: -1.791759469228055
********** f = is the FUNCTION_CALL_9 of
= FUNCTION_CALL_9: 0.0
********** f = FUNCTION_CALL_9 of the
FUNCTION_CALL_9: 0.0
********** f = from index
sublist: 0.0
********** f = VARIABLE_0 onto
VARIABLE_0: 0.0
********** f = VARIABLE_3 at index VARIABLE_2 is less
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = of the VARIABLE_4
VARIABLE_4: -0.40546510810816444
FUNCTION_CALL_11 VARIABLE_4: -1.0986122886681098
********** f = VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = plus NUMBER end while loop
+ NUMBER: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = less than the FUNCTION_CALL_9
< FUNCTION_CALL_9: -0.6931471805599453
=: -0.6931471805599453
********** f = equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = VARIABLE_4 if VARIABLE_7
VARIABLE_4 if VARIABLE_7: 0.0
********** f = and VARIABLE_3 at index
VARIABLE_3 index: 0.0
********** f = the VARIABLE_4 if
VARIABLE_4 if: 0.0
********** f = at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = else VARIABLE_3 equals FUNCTION_CALL_10 of
else VARIABLE_3 = FUNCTION_CALL_10: 0.0
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto
+ NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0
FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = to VARIABLE_1 at index VARIABLE_0
VARIABLE_1 index VARIABLE_0: 0.0
********** f = and VARIABLE_3 at index VARIABLE_2 is less than equal to
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to index
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER VARIABLE_0
VARIABLE_7 / NUMBER: 0.0
********** f = VARIABLE_3 and VARIABLE_3 at index VARIABLE_2 is less than equal
VARIABLE_3 and VARIABLE_3 index VARIABLE_2: 0.0
********** f = is less than the FUNCTION_CALL_9
< FUNCTION_CALL_9: -0.6931471805599453
=: -0.6931471805599453
********** f = than
<: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_3
FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = then FUNCTION_CALL_12 VARIABLE_3 index
FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = and VARIABLE_3 at index VARIABLE_2 is less than equal
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = else FUNCTION_CALL_12 VARIABLE_1 at index
else FUNCTION_CALL_12 VARIABLE_1 index: 0.0
********** f = VARIABLE_4 if VARIABLE_7 is
VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = of VARIABLE_4 from
VARIABLE_4 sublist: 0.0
********** f = if VARIABLE_7 is
if VARIABLE_7 ==: 0.0
********** f = to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = equals FUNCTION_CALL_10 of VARIABLE_4
= FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7
VARIABLE_7 = FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7: 0.0
********** f = equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = NUMBER else FUNCTION_CALL_12 VARIABLE_1
NUMBER else FUNCTION_CALL_12 VARIABLE_1: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = at index VARIABLE_0
index VARIABLE_0: 0.0
********** f = then FUNCTION_CALL_12 VARIABLE_3
FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = and VARIABLE_3 at index VARIABLE_2 is
VARIABLE_3 index VARIABLE_2: 0.0
********** f = NUMBER end while loop return VARIABLE_5 
NUMBER return VARIABLE_5: 0.0
********** f = the FUNCTION_CALL_9 of
=: -1.0986122886681098
= FUNCTION_CALL_9: -1.0986122886681098
FUNCTION_CALL_9: -1.0986122886681098
********** f = the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7 is
= FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = the FUNCTION_CALL_9 of the VARIABLE_4 if
= FUNCTION_CALL_9 VARIABLE_4 if: 0.0
********** f = VARIABLE_3 at index
VARIABLE_3 index: 0.0
********** f = if VARIABLE_7
if VARIABLE_7: 0.0
********** f = greater than equal
<: 0.0
********** f = than the
<: -0.40546510810816444
=: -1.0986122886681098
********** f = VARIABLE_3 and VARIABLE_3 at index VARIABLE_2 is less than equal to
VARIABLE_3 and VARIABLE_3 index VARIABLE_2: 0.0
********** f = VARIABLE_2 equals VARIABLE_2
= VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_9 of the
=: -0.6931471805599453
= FUNCTION_CALL_9: -0.6931471805599453
********** f = of the VARIABLE_4 if
VARIABLE_4 if: 0.0
********** f = it
FUNCTION_CALL_9 FUNCTION_CALL_11 VARIABLE_6: -1.9459101490553135
FUNCTION_CALL_9: -1.252762968495368
FUNCTION_CALL_9 FUNCTION_CALL_11: -1.9459101490553135
VARIABLE_5 FUNCTION_CALL_9: -1.9459101490553135
VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0: -1.9459101490553135
FUNCTION_CALL_9 VARIABLE_0: -1.9459101490553135
********** f = VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = plus NUMBER else
+ NUMBER else: 0.0
********** f = is the FUNCTION_CALL_9 of the
= FUNCTION_CALL_9: 0.0
********** f = VARIABLE_1 equals FUNCTION_CALL_10 of VARIABLE_4 from index
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = equals FUNCTION_CALL_10 of
= FUNCTION_CALL_10: 0.0
********** f = at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = equals FUNCTION_CALL_10 of VARIABLE_4 from
= FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = VARIABLE_3 and VARIABLE_3 at index VARIABLE_2 is less
VARIABLE_3 and VARIABLE_3 index VARIABLE_2: 0.0
********** f = onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop return VARIABLE_5 
VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER return VARIABLE_5: 0.0
********** f = to VARIABLE_7
VARIABLE_7: -0.6931471805599453
VARIABLE_7 /: -0.6931471805599453
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = plus NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER
VARIABLE_7 / NUMBER +: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12 VARIABLE_1
+ NUMBER else FUNCTION_CALL_12 VARIABLE_1: 0.0
********** f = of the VARIABLE_3 or
VARIABLE_3 or: 0.0
********** f = VARIABLE_1 at index VARIABLE_0
VARIABLE_1 index VARIABLE_0: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0
+ NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = than equal to VARIABLE_1 at index VARIABLE_0
VARIABLE_1 index VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_9
FUNCTION_CALL_9: -1.0986122886681098
=: -1.0986122886681098
= FUNCTION_CALL_9: -1.0986122886681098
********** f = and VARIABLE_3 at index VARIABLE_2
VARIABLE_3 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_10 of VARIABLE_4 from
FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = VARIABLE_1 equals FUNCTION_CALL_10 of
VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_3 equals FUNCTION_CALL_10
VARIABLE_3 = FUNCTION_CALL_10: 0.0
********** f = equals FUNCTION_CALL_10 of VARIABLE_4 from index
= FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_3
VARIABLE_3: 0.0
********** f = of the VARIABLE_4 if VARIABLE_7 is
VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = VARIABLE_3 at index VARIABLE_2 is
VARIABLE_3 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5
FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_4
FUNCTION_CALL_9 VARIABLE_4: 0.0
********** f = of the VARIABLE_4 if VARIABLE_7
VARIABLE_4 if VARIABLE_7: 0.0
********** f = of the VARIABLE_3
VARIABLE_3: 0.0
********** f = VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = VARIABLE_3 index
VARIABLE_3 index: 0.0
********** f = else VARIABLE_3 equals FUNCTION_CALL_10
else VARIABLE_3 = FUNCTION_CALL_10: 0.0
********** f = than equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = VARIABLE_3 at index VARIABLE_2 is less than
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER
VARIABLE_7 / NUMBER: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7 is
FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = VARIABLE_3 or
VARIABLE_3 or: 0.0
********** f = FUNCTION_CALL_9 of
FUNCTION_CALL_9: 0.0
********** f = VARIABLE_7 is
VARIABLE_7: -0.6931471805599453
VARIABLE_7 ==: -0.6931471805599453
********** f = FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto
FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = FUNCTION_CALL_10 of
FUNCTION_CALL_10: -0.2876820724517809
FUNCTION_CALL_10 VARIABLE_4: -1.3862943611198906
********** f = is the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7
= FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7: 0.0
********** f = is less
and: -0.6931471805599453
FUNCTION_CALL_11: -0.6931471805599453
********** f = less than equal to
and: 0.0
********** f = from index NUMBER
sublist: -1.0986122886681098
sublist NUMBER :: -1.0986122886681098
sublist NUMBER: -1.0986122886681098
********** f = VARIABLE_0 is less
VARIABLE_0: -0.6931471805599453
NUMBER VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_7 is the
VARIABLE_7 =: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1 at index
FUNCTION_CALL_12 VARIABLE_1 index: 0.0
********** f = VARIABLE_0 is greater than equal
VARIABLE_0 <: 0.0
********** f = else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto
else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = than equal to VARIABLE_1 at index
VARIABLE_1 index: 0.0
********** f = the empty list
EMPTY_LIST: 0.0
********** f = VARIABLE_4 from
VARIABLE_4 sublist: 0.0
********** f = the VARIABLE_3
VARIABLE_3: 0.0
********** f = at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = VARIABLE_3 and
VARIABLE_3: 0.0
********** f = at index VARIABLE_0 then FUNCTION_CALL_12
index VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = VARIABLE_3 at index VARIABLE_2
VARIABLE_3 index VARIABLE_2: 0.0
********** f = VARIABLE_0 onto VARIABLE_5
VARIABLE_0 VARIABLE_5: 0.0
********** f = is less than the
=: -1.0986122886681098
<: -1.0986122886681098
< VARIABLE_0: -1.0986122886681098
********** f = empty list while
EMPTY_LIST while: 0.0
********** f = NUMBER else FUNCTION_CALL_12
NUMBER else FUNCTION_CALL_12: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5
VARIABLE_1 index VARIABLE_0 VARIABLE_5: 0.0
********** f = VARIABLE_7 VARIABLE_2 equals
VARIABLE_7 /: -0.6931471805599453
VARIABLE_7: -0.6931471805599453
********** f = than the FUNCTION_CALL_9 of
=: -0.6931471805599453
< FUNCTION_CALL_9: -0.6931471805599453
********** f = VARIABLE_1 at index VARIABLE_0 onto
VARIABLE_1 index VARIABLE_0: 0.0
********** f = or the VARIABLE_2 it
FUNCTION_CALL_9 FUNCTION_CALL_11 VARIABLE_6 or VARIABLE_2: 0.0
********** f = equal to VARIABLE_1 at index
VARIABLE_1 index: 0.0
********** f = VARIABLE_3 and VARIABLE_3 at index VARIABLE_2 is less than
VARIABLE_3 and VARIABLE_3 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_10 of VARIABLE_4 from index
FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = VARIABLE_5 VARIABLE_0 equals VARIABLE_0
VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of the VARIABLE_4 if
VARIABLE_7 = FUNCTION_CALL_9 VARIABLE_4 if: 0.0
********** f = VARIABLE_0 is greater
VARIABLE_0: 0.0
********** f = to VARIABLE_1 at index
VARIABLE_1 index: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0
= VARIABLE_2 + NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = to VARIABLE_7 VARIABLE_2 equals
VARIABLE_7: -0.6931471805599453
VARIABLE_7 /: -0.6931471805599453
********** f = VARIABLE_0 equals VARIABLE_0 plus
VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_3 index
FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = else VARIABLE_3 equals
else VARIABLE_3 =: 0.0
********** f = plus NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER VARIABLE_0
VARIABLE_7 / NUMBER +: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = to VARIABLE_1 at index VARIABLE_0 then
VARIABLE_1 index VARIABLE_0: 0.0
********** f = is less than the FUNCTION_CALL_9 of the
=: 0.0
********** f = at index VARIABLE_0 then
index VARIABLE_0: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_3 or
VARIABLE_3 or: 0.0
********** f = else VARIABLE_3
else VARIABLE_3: 0.0
********** f = from
sublist: 0.0
********** f = onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = of VARIABLE_4 from index
VARIABLE_4 sublist: 0.0
********** f = than equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = than equal
<: 0.0
********** f = is the FUNCTION_CALL_9
= FUNCTION_CALL_9: 0.0
********** f = NUMBER else
NUMBER else: 0.0
********** f = NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index
NUMBER else FUNCTION_CALL_12 VARIABLE_1 index: 0.0
********** f = is less than equal
and: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else FUNCTION_CALL_12
= VARIABLE_2 + NUMBER else FUNCTION_CALL_12: 0.0
********** f = NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER VARIABLE_0 equals
VARIABLE_7 / NUMBER: 0.0
********** f = the empty list while
EMPTY_LIST while: 0.0
********** f = than equal to VARIABLE_1 at index VARIABLE_0 then
VARIABLE_1 index VARIABLE_0: 0.0
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = than the FUNCTION_CALL_9
< FUNCTION_CALL_9: -0.6931471805599453
=: -0.6931471805599453
********** f = VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = FUNCTION_CALL_10
FUNCTION_CALL_10: -0.2876820724517809
FUNCTION_CALL_10 VARIABLE_4: -1.3862943611198906
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else FUNCTION_CALL_12 VARIABLE_1
= VARIABLE_2 + NUMBER else FUNCTION_CALL_12 VARIABLE_1: 0.0
********** f = less than the FUNCTION_CALL_9 of
< FUNCTION_CALL_9: -0.6931471805599453
=: -0.6931471805599453
********** f = VARIABLE_7 VARIABLE_2
VARIABLE_7 /: -0.6931471805599453
VARIABLE_7: -0.6931471805599453
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of the VARIABLE_4
VARIABLE_7 = FUNCTION_CALL_9 VARIABLE_4: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto
= VARIABLE_2 + NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = NUMBER end while loop
NUMBER: 0.0
********** f = is the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7 is
= FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0
NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = from index NUMBER to
sublist: -1.0986122886681098
sublist NUMBER :: -1.0986122886681098
sublist NUMBER: -1.0986122886681098
********** f = of VARIABLE_4
VARIABLE_4: 0.0
********** f = equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = else FUNCTION_CALL_12 VARIABLE_1
else FUNCTION_CALL_12 VARIABLE_1: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5
+ NUMBER else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5: 0.0
********** f = VARIABLE_3 at index VARIABLE_2 is less than equal
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of
VARIABLE_7 = FUNCTION_CALL_9: 0.0
********** f = than the FUNCTION_CALL_9 of the
=: 0.0
********** f = VARIABLE_3 equals FUNCTION_CALL_10 of
VARIABLE_3 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_0 then FUNCTION_CALL_12
VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = VARIABLE_0 is greater than
VARIABLE_0 <: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER
= VARIABLE_2 + NUMBER: 0.0
********** f = is less than the FUNCTION_CALL_9 of
< FUNCTION_CALL_9: -0.6931471805599453
=: -0.6931471805599453
********** f = else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0
else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0: 0.0
********** f = at index VARIABLE_0 onto
index VARIABLE_0: 0.0
********** f = equals FUNCTION_CALL_10
= FUNCTION_CALL_10: 0.0
********** f = to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = and VARIABLE_3 at index VARIABLE_2 is less
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = less
<=: -1.0986122886681098
and: -1.0986122886681098
FUNCTION_CALL_11: -1.0986122886681098
********** f = VARIABLE_4 from index
VARIABLE_4 sublist: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9
VARIABLE_7 = FUNCTION_CALL_9: 0.0
********** f = less than the FUNCTION_CALL_9 of the
=: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index
= VARIABLE_2 + NUMBER else FUNCTION_CALL_12 VARIABLE_1 index: 0.0
********** f = VARIABLE_1 equals FUNCTION_CALL_10 of VARIABLE_4 from
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of the
VARIABLE_7 = FUNCTION_CALL_9: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = from index NUMBER to index
sublist: 0.0
********** f = the VARIABLE_4
VARIABLE_4: -0.6931471805599453
FUNCTION_CALL_11 VARIABLE_4: -1.791759469228055
VARIABLE_2 VARIABLE_4: -1.791759469228055
VARIABLE_1: -1.791759469228055
********** f = less than the
=: -1.0986122886681098
<: -0.40546510810816444
********** f = VARIABLE_3 at index VARIABLE_2 is less than equal to
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = is the FUNCTION_CALL_9 of the VARIABLE_4
= FUNCTION_CALL_9 VARIABLE_4: 0.0
********** f = the VARIABLE_4 if VARIABLE_7
VARIABLE_4 if VARIABLE_7: 0.0
********** f = FUNCTION_CALL_9
FUNCTION_CALL_9: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12 VARIABLE_1 at index
+ NUMBER else FUNCTION_CALL_12 VARIABLE_1 index: 0.0
********** f = FUNCTION_CALL_12 VARIABLE_1
FUNCTION_CALL_12 VARIABLE_1: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop
VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER: 0.0
********** f = plus NUMBER to VARIABLE_7 VARIABLE_2 equals NUMBER VARIABLE_0 equals
VARIABLE_7 / NUMBER +: 0.0
********** f = plus NUMBER end while loop return VARIABLE_5 
+ NUMBER return VARIABLE_5: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = FUNCTION_CALL_9 of the VARIABLE_4 if
FUNCTION_CALL_9 VARIABLE_4 if: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus
VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0 +: 0.0
********** f = to VARIABLE_7 VARIABLE_2
VARIABLE_7 /: -0.6931471805599453
VARIABLE_7: -0.6931471805599453
********** f = return VARIABLE_5 
return VARIABLE_5: 0.0
********** f = FUNCTION_CALL_12
FUNCTION_CALL_12: 0.0
********** f = and VARIABLE_3 at index VARIABLE_2 is less than
and VARIABLE_3 index VARIABLE_2: 0.0
********** f = empty list
EMPTY_LIST: 0.0
********** f = VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to index
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = VARIABLE_2 equals VARIABLE_2 plus
= VARIABLE_2 +: 0.0
********** f = plus NUMBER else FUNCTION_CALL_12
+ NUMBER else FUNCTION_CALL_12: 0.0
********** f = VARIABLE_1 at index VARIABLE_0 then
VARIABLE_1 index VARIABLE_0: 0.0
********** f = than equal to VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3
VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = than equal to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12: 0.0
********** f = VARIABLE_7 is the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7 is
VARIABLE_7 = FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = return the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER
return VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = the VARIABLE_3 or
VARIABLE_3 or: 0.0
********** f = else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5
else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5: 0.0
********** f = VARIABLE_1 equals FUNCTION_CALL_10 of VARIABLE_4
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_4: 0.0
********** f = to VARIABLE_1 at index VARIABLE_0 then FUNCTION_CALL_12 VARIABLE_3 index
VARIABLE_1 index VARIABLE_0 FUNCTION_CALL_12 VARIABLE_3 index: 0.0
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index NUMBER to index
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = then FUNCTION_CALL_12
FUNCTION_CALL_12: 0.0
********** f = equal to VARIABLE_1 at index VARIABLE_0 then
VARIABLE_1 index VARIABLE_0: 0.0
********** f = VARIABLE_5 VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop return VARIABLE_5 
VARIABLE_5 VARIABLE_0 = VARIABLE_0 + NUMBER return VARIABLE_5: 0.0
********** f = the FUNCTION_CALL_9 of the VARIABLE_4
= FUNCTION_CALL_9 VARIABLE_4: 0.0
********** f = VARIABLE_1 equals FUNCTION_CALL_10
VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = onto VARIABLE_5
VARIABLE_5: 0.0
********** f = VARIABLE_0 equals VARIABLE_0 plus NUMBER end while loop return VARIABLE_5 
VARIABLE_0 = VARIABLE_0 + NUMBER return VARIABLE_5: 0.0
********** f = the VARIABLE_4 if VARIABLE_7 is
VARIABLE_4 if VARIABLE_7 ==: 0.0
********** f = the FUNCTION_CALL_9 of the VARIABLE_4 if VARIABLE_7
= FUNCTION_CALL_9 VARIABLE_4 if VARIABLE_7: 0.0
********** f = VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = else FUNCTION_CALL_12 VARIABLE_1 at index VARIABLE_0 onto VARIABLE_5 VARIABLE_0 equals VARIABLE_0
else FUNCTION_CALL_12 VARIABLE_1 index VARIABLE_0 VARIABLE_5 VARIABLE_0 = VARIABLE_0: 0.0
********** f = the VARIABLE_4 else VARIABLE_3 equals FUNCTION_CALL_10 of VARIABLE_4 from index
VARIABLE_4 else VARIABLE_3 = FUNCTION_CALL_10 VARIABLE_4 sublist: 0.0
********** f = if the FUNCTION_CALL_4 of VARIABLE_1 is
if FUNCTION_CALL_4 VARIABLE_1 ==: 0.0
********** f = NUMBER equal
NUMBER: 0.0
********** f = using
VARIABLE_1: 0.0
********** f = using the FUNCTION_CALL_5 source algorithm
VARIABLE_1: 0.0
********** f = using the FUNCTION_CALL_5 source
VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_4 of VARIABLE_1 is
FUNCTION_CALL_4 VARIABLE_1 ==: 0.0
********** f = FUNCTION_CALL_4 halves
FUNCTION_CALL_4: 0.0
********** f = divide VARIABLE_1 into NUMBER equal
VARIABLE_1 == NUMBER: 0.0
********** f = sorted halves and return
return: 0.0
********** f = the NUMBER sorted halves and return
return: 0.0
********** f = FUNCTION_CALL_4 halves recursively sort
FUNCTION_CALL_4: 0.0
********** f = and return
return: 0.0
********** f = divide VARIABLE_1 into NUMBER equal FUNCTION_CALL_4 halves recursively
FUNCTION_CALL_4 VARIABLE_1 == NUMBER: 0.0
********** f = list 
VARIABLE_0 VARIABLE_2: 0.0
********** f = using the
VARIABLE_1: 0.0
********** f = the FUNCTION_CALL_5 source algorithm FUNCTION_CALL_5 the NUMBER sorted halves and return this
return FUNCTION_CALL_5: 0.0
********** f = divide VARIABLE_1 into NUMBER equal FUNCTION_CALL_4 halves recursively sort
FUNCTION_CALL_4 VARIABLE_1 == NUMBER: 0.0
********** f = merged list 
FUNCTION_CALL_7 VARIABLE_0 VARIABLE_2: 0.0
********** f = halves recursively sort FUNCTION_CALL_6
FUNCTION_CALL_6: 0.0
********** f = halves and return
return: 0.0
********** f = sort FUNCTION_CALL_6
FUNCTION_CALL_6: 0.0
********** f = recursively sort FUNCTION_CALL_6
FUNCTION_CALL_6: 0.0
********** f = FUNCTION_CALL_5 the NUMBER sorted halves and return this
return FUNCTION_CALL_5: 0.0
********** f = using the FUNCTION_CALL_5
VARIABLE_1: 0.0
********** f = divide VARIABLE_1 into NUMBER equal FUNCTION_CALL_4
FUNCTION_CALL_4 VARIABLE_1 == NUMBER: 0.0
********** f = divide VARIABLE_1 into NUMBER equal FUNCTION_CALL_4 halves
FUNCTION_CALL_4 VARIABLE_1 == NUMBER: 0.0
********** f = algorithm FUNCTION_CALL_5 the NUMBER sorted halves and return this
return FUNCTION_CALL_5: 0.0
********** f = source algorithm FUNCTION_CALL_5 the NUMBER sorted halves and return this
return FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_4 halves recursively
FUNCTION_CALL_4: 0.0
********** f = merged
FUNCTION_CALL_7: 0.0
********** f = list
VARIABLE_2: -1.0986122886681098
FUNCTION_CALL_10: -1.0986122886681098
VARIABLE_0 FUNCTION_CALL_10: -1.0986122886681098
********** f = FUNCTION_CALL_5 source algorithm FUNCTION_CALL_5 the NUMBER sorted halves and return this
return FUNCTION_CALL_5: 0.0
********** f = divide VARIABLE_1 into
VARIABLE_1 ==: 0.0
********** f = NUMBER sorted halves and return
return: 0.0
********** f = VARIABLE_1 else
else: 0.0
********** f = this in VARIABLE_2
VARIABLE_4 VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = be equal to the FUNCTION_CALL_10
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = and call that
.: 0.0
********** f = VARIABLE_4 of
index: 0.0
********** f = element of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = store this in VARIABLE_2
VARIABLE_2: -0.6931471805599453
VARIABLE_4 VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_8
VARIABLE_6: -1.9459101490553135
VARIABLE_6 =: -1.9459101490553135
VARIABLE_8: -1.252762968495368
VARIABLE_8 + =: -1.9459101490553135
VARIABLE_8 +: -1.9459101490553135
VARIABLE_8 + = NUMBER: -1.9459101490553135
********** f = this in a variable named
=: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = th of VARIABLE_1
index: 0.0
********** f = VARIABLE_4 and store
VARIABLE_4: 0.0
********** f = of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = recursively sort of second off the VARIABLE_4 and store this
FUNCTION_CALL_13: 0.0
********** f = recursively sort
FUNCTION_CALL_11: -0.40546510810816444
FUNCTION_CALL_11 VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_4 and
VARIABLE_4: 0.0
********** f = of the VARIABLE_4 and
VARIABLE_4: 0.0
********** f = of second off the VARIABLE_4 and store
FUNCTION_CALL_13: 0.0
********** f = the VARIABLE_4 and store this in a variable
=: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = to the FUNCTION_CALL_10 of the
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = VARIABLE_2 and
VARIABLE_4 VARIABLE_2: -1.3862943611198906
VARIABLE_2: -0.2876820724517809
********** f = sort of second off
FUNCTION_CALL_13: 0.0
********** f = element of VARIABLE_2
VARIABLE_2: 0.0
********** f = VARIABLE_8 th
VARIABLE_6: -0.6931471805599453
VARIABLE_8: -0.6931471805599453
********** f = be the VARIABLE_7
VARIABLE_7: 0.0
********** f = be equal to the FUNCTION_CALL_10 of the
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = VARIABLE_7 th of
index VARIABLE_7: 0.0
********** f = set both equal to
= FUNCTION_CALL_4 VARIABLE_5: -0.6931471805599453
= FUNCTION_CALL_4: -0.6931471805599453
********** f = equal to the FUNCTION_CALL_10 of
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = th element is
VARIABLE_6: 0.0
********** f = VARIABLE_4 and store this in
VARIABLE_4: 0.0
********** f = of the VARIABLE_4 and store this
VARIABLE_4: 0.0
********** f = next recursively sort
= FUNCTION_CALL_11: 0.0
********** f = increment VARIABLE_6
+ =: -0.6931471805599453
+: -0.6931471805599453
********** f = and set that
.: 0.0
********** f = FUNCTION_CALL_10 of the
FUNCTION_CALL_10: -0.40546510810816444
FUNCTION_CALL_10 VARIABLE_4: -1.0986122886681098
********** f = to be
=: -0.6931471805599453
= FUNCTION_CALL_11: -0.6931471805599453
********** f = VARIABLE_6 th
VARIABLE_8: -0.6931471805599453
index VARIABLE_8: -0.6931471805599453
********** f = recursively sort of second off the VARIABLE_4
FUNCTION_CALL_13: 0.0
********** f = of second off the VARIABLE_4 and store this
FUNCTION_CALL_13: 0.0
********** f = and increment VARIABLE_6
+ =: -0.6931471805599453
+: -0.6931471805599453
********** f = VARIABLE_8 th element of results to be the VARIABLE_6 th element of VARIABLE_2 and increment
VARIABLE_2 index VARIABLE_6 VARIABLE_6 + =: 0.0
********** f = the VARIABLE_7 th
VARIABLE_7: 0.0
********** f = and store this in a variable named
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = recursively sort of second off the VARIABLE_4 and store this in
FUNCTION_CALL_13: 0.0
********** f = second off the VARIABLE_4
FUNCTION_CALL_13: 0.0
********** f = second off the
FUNCTION_CALL_13: 0.0
********** f = and then recursively sort
NUMBER: -0.40546510810816444
= NUMBER: -1.0986122886681098
********** f = the FUNCTION_CALL_10 of
FUNCTION_CALL_10: -0.40546510810816444
FUNCTION_CALL_10 VARIABLE_4: -1.0986122886681098
********** f = the VARIABLE_4 and
VARIABLE_4: 0.0
********** f = a VARIABLE_4 of FUNCTION_CALL_10
index: 0.0
********** f = th element of
index: 0.0
********** f = to be the
=: 0.0
********** f = sort of second off the VARIABLE_4
FUNCTION_CALL_13: 0.0
********** f = second off the VARIABLE_4 and
FUNCTION_CALL_13: 0.0
********** f = the FUNCTION_CALL_10
FUNCTION_CALL_10: -0.40546510810816444
FUNCTION_CALL_10 VARIABLE_4: -1.0986122886681098
********** f = set both
=: 0.0
********** f = is VARIABLE_2
VARIABLE_2: 0.0
********** f = of results
index VARIABLE_6: -1.0986122886681098
index: -1.0986122886681098
VARIABLE_3 index: -1.0986122886681098
********** f = store this in a variable named
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = the VARIABLE_7
VARIABLE_7: 0.0
********** f = to be equal to the
=: -0.6931471805599453
= FUNCTION_CALL_11: -0.6931471805599453
********** f = second off
FUNCTION_CALL_13: 0.0
********** f = recursively
FUNCTION_CALL_11: -0.40546510810816444
FUNCTION_CALL_11 VARIABLE_0: -1.0986122886681098
********** f = both equal to
FUNCTION_CALL_4 VARIABLE_5: -0.6931471805599453
FUNCTION_CALL_4: -0.6931471805599453
********** f = th element of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = of results to
VARIABLE_3 index: -0.6931471805599453
index: -0.6931471805599453
********** f = VARIABLE_6 end the loop
in: 0.0
********** f = of results to be
VARIABLE_3 index: -0.6931471805599453
index: -0.6931471805599453
********** f = and increment
+ =: -1.0986122886681098
+: -0.40546510810816444
********** f = named
NUMBER VARIABLE_3: -0.6931471805599453
VARIABLE_3: -0.6931471805599453
********** f = VARIABLE_6 and VARIABLE_7 and
VARIABLE_7: 0.0
********** f = second off the VARIABLE_4 and store this
FUNCTION_CALL_13: 0.0
********** f = equal to the FUNCTION_CALL_10
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = then recursively sort of
NUMBER: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = VARIABLE_7 th of VARIABLE_1
index VARIABLE_7: 0.0
********** f = the VARIABLE_8 th element of results
index VARIABLE_6 VARIABLE_6: 0.0
********** f = results to be the VARIABLE_7
VARIABLE_7: 0.0
********** f = to the FUNCTION_CALL_10 of
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = VARIABLE_8 th element
VARIABLE_6: 0.0
********** f = VARIABLE_6 end
in: -0.6931471805599453
VARIABLE_6: -0.6931471805599453
********** f = of second off
FUNCTION_CALL_13: 0.0
********** f = and VARIABLE_7 and
VARIABLE_7: 0.0
********** f = define a VARIABLE_4 of FUNCTION_CALL_10
index: 0.0
********** f = the FUNCTION_CALL_10 of the
FUNCTION_CALL_10 VARIABLE_4: -1.0986122886681098
FUNCTION_CALL_10: -0.40546510810816444
********** f = the VARIABLE_4 and store this
VARIABLE_4: 0.0
********** f = define a VARIABLE_4 of
index: 0.0
********** f = of results to be the
VARIABLE_3 index: -0.6931471805599453
index: -0.6931471805599453
********** f = VARIABLE_7 and
VARIABLE_7: -0.6931471805599453
NUMBER VARIABLE_7: -1.3862943611198906
- NUMBER VARIABLE_7: -1.3862943611198906
********** f = VARIABLE_7 th
VARIABLE_7: 0.0
********** f = defined variables VARIABLE_6 and VARIABLE_7
VARIABLE_7: 0.0
********** f = of second off the
FUNCTION_CALL_13: 0.0
********** f = the VARIABLE_8 th
VARIABLE_6: 0.0
********** f = to be equal
= FUNCTION_CALL_11: -0.6931471805599453
=: -0.6931471805599453
********** f = and set both
=: 0.0
********** f = and store this in VARIABLE_2
VARIABLE_2: -0.6931471805599453
VARIABLE_4 VARIABLE_2: -0.6931471805599453
********** f = equal to the FUNCTION_CALL_10 of the
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = the VARIABLE_6 th
index VARIABLE_8: -0.6931471805599453
VARIABLE_8: -0.6931471805599453
********** f = is less than the VARIABLE_7 th of VARIABLE_1
< VARIABLE_0 index VARIABLE_7: 0.0
********** f = of VARIABLE_2
VARIABLE_2: 0.0
********** f = and return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = this in VARIABLE_2 and
VARIABLE_2: -0.6931471805599453
VARIABLE_4 VARIABLE_2: -0.6931471805599453
********** f = and then recursively
NUMBER: -0.40546510810816444
= NUMBER: -1.0986122886681098
********** f = th element of VARIABLE_2
VARIABLE_2: 0.0
********** f = sort of second off the VARIABLE_4 and store this
FUNCTION_CALL_13: 0.0
********** f = recursively sort of second off the VARIABLE_4 and store
FUNCTION_CALL_13: 0.0
********** f = call that
.: 0.0
********** f = then recursively sort
NUMBER: -0.40546510810816444
= NUMBER: -1.0986122886681098
********** f = VARIABLE_6 end the
in: 0.0
********** f = in VARIABLE_2 and
VARIABLE_4 VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = sort of second off the VARIABLE_4 and store
FUNCTION_CALL_13: 0.0
********** f = the VARIABLE_4 and store this in
VARIABLE_4: 0.0
********** f = and set both equal to
= FUNCTION_CALL_4 VARIABLE_5: -0.6931471805599453
= FUNCTION_CALL_4: -0.6931471805599453
********** f = sort of second off the VARIABLE_4 and store this in
FUNCTION_CALL_13: 0.0
********** f = VARIABLE_6 otherwise
else: -0.6931471805599453
else VARIABLE_3: -0.6931471805599453
********** f = be equal to the FUNCTION_CALL_10 of
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = of second off the VARIABLE_4
FUNCTION_CALL_13: 0.0
********** f = VARIABLE_6 and VARIABLE_7
VARIABLE_7: 0.0
********** f = the VARIABLE_7 th of VARIABLE_1
index VARIABLE_7: 0.0
********** f = recursively sort of second off the VARIABLE_4 and
FUNCTION_CALL_13: 0.0
********** f = defined variables VARIABLE_6 and VARIABLE_7 and
VARIABLE_7: 0.0
********** f = and set
=: 0.0
********** f = the VARIABLE_4 and store this in a variable named
=: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = to be the VARIABLE_6
=: 0.0
********** f = store this in VARIABLE_2 and
VARIABLE_4 VARIABLE_2: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = results
VARIABLE_6: 0.0
********** f = to be the VARIABLE_6 th
=: 0.0
********** f = th element
FUNCTION_CALL_15: -0.6931471805599453
VARIABLE_6: -0.6931471805599453
********** f = of second off the VARIABLE_4 and
FUNCTION_CALL_13: 0.0
********** f = set the
=: 0.0
********** f = VARIABLE_6 th element of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = the VARIABLE_8
VARIABLE_6: 0.0
********** f = VARIABLE_4 and store this in a variable named
=: -0.6931471805599453
= NUMBER: -0.6931471805599453
********** f = VARIABLE_4 and store this in a variable
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = to be the VARIABLE_6 th element
=: 0.0
********** f = VARIABLE_6 th element of VARIABLE_2
VARIABLE_2: 0.0
********** f = of the VARIABLE_4 and store
VARIABLE_4: 0.0
********** f = the VARIABLE_7 th of
index VARIABLE_7: 0.0
********** f = VARIABLE_1 then
NUMBER: 0.0
********** f = the VARIABLE_6 th element of VARIABLE_2
VARIABLE_2: 0.0
********** f = to be the VARIABLE_7
VARIABLE_7: 0.0
********** f = of the VARIABLE_4 and store this in
VARIABLE_4: 0.0
********** f = VARIABLE_4 and store this
VARIABLE_4: 0.0
********** f = element
VARIABLE_6: 0.0
********** f = a VARIABLE_4 of
index: 0.0
********** f = th element of results
index VARIABLE_6: 0.0
********** f = to be equal to
= FUNCTION_CALL_11: -0.6931471805599453
=: -0.6931471805599453
********** f = in a variable named
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = of FUNCTION_CALL_10
index: 0.0
********** f = VARIABLE_8 th element of results
index VARIABLE_6 VARIABLE_6: 0.0
********** f = FUNCTION_CALL_12 of the
FUNCTION_CALL_12: 0.0
********** f = next recursively
= FUNCTION_CALL_11: 0.0
********** f = and then recursively sort of
= NUMBER: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = variables VARIABLE_6 and VARIABLE_7
VARIABLE_7: 0.0
********** f = recursively sort of second off the
FUNCTION_CALL_13: 0.0
********** f = VARIABLE_5 and set
VARIABLE_5: 0.0
********** f = of second off the VARIABLE_4 and store this in
FUNCTION_CALL_13: 0.0
********** f = and VARIABLE_7
VARIABLE_7: 0.0
********** f = variables VARIABLE_6 and VARIABLE_7 and
VARIABLE_7: 0.0
********** f = and then
NUMBER: -0.40546510810816444
= NUMBER: -1.0986122886681098
********** f = define a variable
=: 0.0
********** f = to the FUNCTION_CALL_10
FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10 VARIABLE_4: -0.6931471805599453
********** f = set both equal
=: 0.0
********** f = and set both equal
=: 0.0
********** f = second off the VARIABLE_4 and store
FUNCTION_CALL_13: 0.0
********** f = be the VARIABLE_6 th element of VARIABLE_2
VARIABLE_2: 0.0
********** f = the VARIABLE_6 th element of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = be the VARIABLE_6 th element of VARIABLE_2 and
VARIABLE_2: 0.0
********** f = sort of second off the VARIABLE_4 and
FUNCTION_CALL_13: 0.0
********** f = and store this in VARIABLE_2 and
VARIABLE_2: -0.6931471805599453
VARIABLE_4 VARIABLE_2: -0.6931471805599453
********** f = set that
.: 0.0
********** f = th of
index: 0.0
********** f = the loop and return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = VARIABLE_6
index VARIABLE_8: -2.0794415416798357
VARIABLE_8: -1.3862943611198906
VARIABLE_6: -2.0794415416798357
VARIABLE_8 =: -2.0794415416798357
VARIABLE_8 = NUMBER VARIABLE_6: -2.0794415416798357
VARIABLE_8 = NUMBER: -2.0794415416798357
VARIABLE_8 = NUMBER VARIABLE_6 =: -2.0794415416798357
********** f = element of results
index VARIABLE_6: 0.0
********** f = to be the VARIABLE_6 th element of
=: 0.0
********** f = a variable named
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = then recursively
= NUMBER: -1.0986122886681098
NUMBER: -0.40546510810816444
********** f = NUMBER define a VARIABLE_4
NUMBER: 0.0
********** f = second off the VARIABLE_4 and store this in
FUNCTION_CALL_13: 0.0
********** f = FUNCTION_CALL_12 of
FUNCTION_CALL_12: 0.0
********** f = element is
VARIABLE_6: 0.0
********** f = is less than the VARIABLE_7 th of
< VARIABLE_0 index VARIABLE_7: 0.0
********** f = the VARIABLE_8 th element
VARIABLE_6: 0.0
********** f = element of
index: 0.0
********** f = next
=: 0.0
********** f = VARIABLE_4 of FUNCTION_CALL_10
index: 0.0
********** f = NUMBER define a
NUMBER: 0.0
********** f = loop and return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = recursively sort of second off
FUNCTION_CALL_13: 0.0
********** f = the VARIABLE_4 and store
VARIABLE_4: 0.0
********** f = the VARIABLE_6
index VARIABLE_8: -0.6931471805599453
VARIABLE_8: -0.6931471805599453
********** f = NUMBER define
NUMBER: 0.0
********** f = th
FUNCTION_CALL_15: 0.0
********** f = sort of second off the
FUNCTION_CALL_13: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the VARIABLE_2 is less than or equal to NUMBER
VARIABLE_2 <= NUMBER: 0.0
********** f = recursively sort the
FUNCTION_CALL_11 VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_11: -0.6931471805599453
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the VARIABLE_5
VARIABLE_5: 0.0
********** f = which is empty
EMPTY_LIST: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the first
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_1: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = list and then FUNCTION_CALL_11 the
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = more the list and return that 
return: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = than or equal to NUMBER if it is return the
<= NUMBER return: -0.6931471805599453
<= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = and then recursively sort the
NUMBER: 0.0
********** f = is less than or equal to NUMBER if it is return the
<= NUMBER return VARIABLE_2: -0.6931471805599453
<= NUMBER return: -0.6931471805599453
********** f = the FUNCTION_CALL_7 of
index: 0.0
********** f = list and then
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = if the VARIABLE_5 is greater than the VARIABLE_4 put it in the VARIABLE_1
if VARIABLE_5 > VARIABLE_3 VARIABLE_1: 0.0
********** f = than or equal to NUMBER if it
<= NUMBER: 0.0
********** f = the VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 is less than or equal to NUMBER if
VARIABLE_2 <= NUMBER: 0.0
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = is less than or equal to NUMBER
<= NUMBER: 0.0
********** f = let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and then
VARIABLE_4 =: -0.6931471805599453
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
********** f = FUNCTION_CALL_11 the less than less then the
VARIABLE_1: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = less than less then the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the more the list and return that 
return: 0.0
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = list and return that 
return: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = less than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = to NUMBER if it
NUMBER: 0.0
********** f = the VARIABLE_2 is less than or equal to NUMBER if it is return the
VARIABLE_2 <= NUMBER return: -0.6931471805599453
VARIABLE_2 <= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = in the VARIABLE_2 if the VARIABLE_5
VARIABLE_2 if VARIABLE_5: 0.0
********** f = the VARIABLE_0 end the for loop
in: 0.0
********** f = less than or equal to NUMBER if
<= NUMBER: 0.0
********** f = than less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = it is return the
return VARIABLE_2: -0.6931471805599453
return: -0.6931471805599453
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than the
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = NUMBER if it is return the
NUMBER return VARIABLE_2: -0.6931471805599453
NUMBER return: -0.6931471805599453
********** f = VARIABLE_2 is less than or equal to NUMBER if it is
VARIABLE_2 <= NUMBER: 0.0
********** f = equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal the first
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = a VARIABLE_0 which is empty
VARIABLE_0 = EMPTY_LIST: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = it in the VARIABLE_0
FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
VARIABLE_5 FUNCTION_CALL_9: -1.3862943611198906
FUNCTION_CALL_9: -1.3862943611198906
********** f = VARIABLE_2 if the VARIABLE_5 is greater than
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = of the
index: 0.0
********** f = to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = it in
FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
FUNCTION_CALL_9: -1.3862943611198906
VARIABLE_5 FUNCTION_CALL_9: -1.3862943611198906
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = first VARIABLE_5 in the VARIABLE_2 and then create
VARIABLE: 0.0
********** f = the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = VARIABLE_2 if the
VARIABLE_2 if: 0.0
********** f = VARIABLE_2 and then create
VARIABLE: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the VARIABLE_2 let the VARIABLE_4 equal the
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = the VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_0 end the
in: 0.0
********** f = and then create
VARIABLE: 0.0
********** f = less than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = is greater than the VARIABLE_4 put it in the VARIABLE_1
> VARIABLE_3 VARIABLE_1: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_5 > VARIABLE_3: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = let the VARIABLE_4 equal the
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
VARIABLE_4 =: -0.6931471805599453
********** f = the more that
. FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
. FUNCTION_CALL_8: -0.6931471805599453
********** f = the VARIABLE_5 is greater than the
VARIABLE_5 > VARIABLE_3: 0.0
********** f = is greater than the VARIABLE_4 put it
> VARIABLE_3: 0.0
********** f = if it is return the
return VARIABLE_2: -0.6931471805599453
return: -0.6931471805599453
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = less than less then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = check if the FUNCTION_CALL_7
if FUNCTION_CALL_7: 0.0
********** f = less then the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = than less then the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = then the more the list and return
return: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = in the VARIABLE_1
VARIABLE_1: 0.0
********** f = in the VARIABLE_0 end the
in: 0.0
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = let the VARIABLE_4 equal the first
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
VARIABLE_4 =: -0.6931471805599453
********** f = the VARIABLE_0 and
VARIABLE_0: 0.0
********** f = if the VARIABLE_5 is greater than the VARIABLE_4 put it in
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = VARIABLE_2 is less than or equal to NUMBER if it is return
VARIABLE_2 <= NUMBER return VARIABLE_2: -0.6931471805599453
VARIABLE_2 <= NUMBER return: -0.6931471805599453
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less
FUNCTION_CALL_10: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = end the for loop there
in: 0.0
********** f = VARIABLE_5 is greater
VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 is less than or
VARIABLE_2 <=: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
VARIABLE_4 =: -0.6931471805599453
********** f = put it in the VARIABLE_1
VARIABLE_1: 0.0
********** f = is return the
return: -0.6931471805599453
return VARIABLE_2: -0.6931471805599453
********** f = list and then FUNCTION_CALL_11 the less than less then the VARIABLE_4
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = the less than less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = which is also
. FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
. FUNCTION_CALL_8: -0.6931471805599453
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 if
VARIABLE_2 if: 0.0
********** f = which is
.: 0.0
********** f = to NUMBER if it is
NUMBER: 0.0
********** f = than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = less then the VARIABLE_4 then the more the list and return that 
VARIABLE_1 return: 0.0
********** f = than or equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal
<= NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = for each VARIABLE_5 in
for: 0.0
********** f = let the VARIABLE_4 equal the first VARIABLE_5
VARIABLE_4 =: -0.6931471805599453
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = let the VARIABLE_4 equal the first VARIABLE_5 in
VARIABLE_4 =: -0.6931471805599453
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = the less than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = let the VARIABLE_4 equal
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
VARIABLE_4 =: -0.6931471805599453
********** f = the VARIABLE_1
VARIABLE_1: 0.0
********** f = the more
FUNCTION_CALL_8: -0.6931471805599453
FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
********** f = is greater than the VARIABLE_4
> VARIABLE_3: 0.0
********** f = else put
else: -0.6931471805599453
VARIABLE_5 else: -0.6931471805599453
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = less than or equal to NUMBER if it
<= NUMBER: 0.0
********** f = is empty
EMPTY_LIST: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = list and then FUNCTION_CALL_11 the less than
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = then the VARIABLE_4 then the more the list and return that 
VARIABLE_1 return: 0.0
********** f = VARIABLE_0 end the for loop
in: 0.0
********** f = less than or equal to NUMBER if it is return the
<= NUMBER return: -0.6931471805599453
<= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = which
.: 0.0
********** f = return that
return: 0.0
********** f = the less than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = to NUMBER if it is return the
NUMBER return: -0.6931471805599453
NUMBER return VARIABLE_2: -0.6931471805599453
********** f = it in the VARIABLE_1
VARIABLE_1: 0.0
********** f = the more the list and return that
return: 0.0
********** f = less than or equal to NUMBER if it is return
<= NUMBER return VARIABLE_2: -0.6931471805599453
<= NUMBER return: -0.6931471805599453
********** f = VARIABLE_0 which
VARIABLE_0: 0.0
********** f = less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = end the for loop there and
in: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = the less than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_2 if VARIABLE_5 > VARIABLE_3 VARIABLE_1: 0.0
********** f = the less than less then the
VARIABLE_1: 0.0
********** f = VARIABLE_5 is greater than
VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 is less than or equal to NUMBER if it is
VARIABLE_2 <= NUMBER: 0.0
********** f = in the VARIABLE_2 if
VARIABLE_2 if: 0.0
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = less than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = it in the
VARIABLE_5 FUNCTION_CALL_9: -1.3862943611198906
VARIABLE_5 FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
FUNCTION_CALL_9: -1.3862943611198906
FUNCTION_CALL_9 VARIABLE_0: -1.3862943611198906
********** f = list and
FUNCTION_CALL_10: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
********** f = than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = the less than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = the for loop there and then
NUMBER: 0.0
********** f = the VARIABLE_2 is less than or equal to
VARIABLE_2 <=: 0.0
********** f = VARIABLE_2 if the VARIABLE_5
VARIABLE_2 if VARIABLE_5: 0.0
********** f = list and return that
return: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = more that
. FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
. FUNCTION_CALL_8: -0.6931471805599453
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = greater than the VARIABLE_4
>: 0.0
********** f = than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the first
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = there and then recursively
NUMBER: 0.0
********** f = then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = than or equal to NUMBER if it is return
<= NUMBER return VARIABLE_2: -0.6931471805599453
<= NUMBER return: -0.6931471805599453
********** f = list and then FUNCTION_CALL_11 the less
FUNCTION_CALL_10: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
********** f = list and return
return: 0.0
********** f = less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if
VARIABLE_2 if: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = NUMBER if it
NUMBER: 0.0
********** f = or equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the
<= NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = equal to NUMBER if it is return
NUMBER return VARIABLE_2: -0.6931471805599453
NUMBER return: -0.6931471805599453
********** f = the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = loop there and then
NUMBER: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the
VARIABLE_2 if: 0.0
********** f = the less than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = than or equal to NUMBER if it is
<= NUMBER: 0.0
********** f = loop there and then recursively sort the
NUMBER: 0.0
********** f = is less than or equal to NUMBER if it
<= NUMBER: 0.0
********** f = the VARIABLE_2 is less
VARIABLE_2: 0.0
********** f = a VARIABLE_0 which is
VARIABLE_0 =: 0.0
********** f = let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
VARIABLE_4 =: -0.6931471805599453
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5
VARIABLE_2 if VARIABLE_5: 0.0
********** f = the VARIABLE_2 is less than or equal to NUMBER if it
VARIABLE_2 <= NUMBER: 0.0
********** f = or equal to NUMBER if it is
<= NUMBER: 0.0
********** f = more the list and return
return: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and then
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_2 if
VARIABLE_2 if: 0.0
********** f = the for loop there and then recursively sort
NUMBER: 0.0
********** f = then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = and recursively sort the
FUNCTION_CALL_11: -0.6931471805599453
FUNCTION_CALL_11 VARIABLE_0: -0.6931471805599453
********** f = is greater than the VARIABLE_4 put
> VARIABLE_3: 0.0
********** f = the VARIABLE_0 end the for loop there and
in: 0.0
********** f = the VARIABLE_0 end the for loop there
in: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
FUNCTION_CALL_10: -0.6931471805599453
********** f = then the more the list and return that 
return: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = more
FUNCTION_CALL_8: -0.6931471805599453
FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = VARIABLE_2 if the VARIABLE_5 is greater
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = if the VARIABLE_5 is greater than
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = the more the list and return
return: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = it is return
return VARIABLE_2: -0.6931471805599453
return: -0.6931471805599453
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = to NUMBER if it is return
NUMBER return VARIABLE_2: -0.6931471805599453
NUMBER return: -0.6931471805599453
********** f = check if
if FUNCTION_CALL_7: 0.0
********** f = in the VARIABLE_2
VARIABLE_2: 0.0
********** f = the less than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = then the VARIABLE_4
VARIABLE_1: 0.0
********** f = is also
FUNCTION_CALL_8: -0.6931471805599453
FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
********** f = than less then the VARIABLE_4 then the more the list and return that 
VARIABLE_1 return: 0.0
********** f = check if the
if FUNCTION_CALL_7: 0.0
********** f = than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = there and then recursively sort the
NUMBER: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = sort the more that
. FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
. FUNCTION_CALL_8: -0.6931471805599453
********** f = or equal to NUMBER if
<= NUMBER: 0.0
********** f = sort the VARIABLE_0 and
VARIABLE_0: 0.0
********** f = then the
VARIABLE_1: 0.0
********** f = is less than or equal to NUMBER if it is
<= NUMBER: 0.0
********** f = and then FUNCTION_CALL_11 the less than less then the
VARIABLE_1: 0.0
********** f = the list and return that 
return: 0.0
********** f = the VARIABLE_5 is greater than the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_5 > VARIABLE_3 VARIABLE_1: 0.0
********** f = sort the VARIABLE_0
VARIABLE_0: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_2 is less than
VARIABLE_2: 0.0
********** f = for each VARIABLE_5
for: 0.0
********** f = loop there and then recursively
NUMBER: 0.0
********** f = and return that
return: 0.0
********** f = equal to NUMBER if it is return the
NUMBER return VARIABLE_2: -0.6931471805599453
NUMBER return: -0.6931471805599453
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the
VARIABLE_1: 0.0
********** f = the first VARIABLE_5 in the VARIABLE_2 and then create
VARIABLE: 0.0
********** f = for loop there and then recursively sort
NUMBER: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = VARIABLE_4 then the more the list and return that
return: 0.0
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_2 if VARIABLE_5 > VARIABLE_3 VARIABLE_1: 0.0
********** f = less than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = and recursively
FUNCTION_CALL_11: -0.6931471805599453
FUNCTION_CALL_11 VARIABLE_0: -0.6931471805599453
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = check
FUNCTION_CALL_7: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = empty for each VARIABLE_5
EMPTY_LIST for: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = NUMBER if it is
NUMBER: 0.0
********** f = if the VARIABLE_5 is greater than the VARIABLE_4 put
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 and then create
VARIABLE: 0.0
********** f = the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = less than or equal to NUMBER
<= NUMBER: 0.0
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and then
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = VARIABLE_0 end the for loop there and
in: 0.0
********** f = VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_5 > VARIABLE_3: 0.0
********** f = and then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = greater than the VARIABLE_4 put
>: 0.0
********** f = the VARIABLE_4 then the more the list and return that 
VARIABLE_1 return: 0.0
********** f = there and then recursively sort
NUMBER: 0.0
********** f = a VARIABLE_1
VARIABLE_1 =: 0.0
********** f = the less than less then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = or equal to NUMBER if it is return the
<= NUMBER return: -0.6931471805599453
<= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = is greater than the VARIABLE_4 put it in
> VARIABLE_3: 0.0
********** f = for each VARIABLE_5 in the
for: 0.0
********** f = list and then FUNCTION_CALL_11
FUNCTION_CALL_10: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10: -0.6931471805599453
********** f = is return
return VARIABLE_2: -0.6931471805599453
return: -0.6931471805599453
********** f = greater than the VARIABLE_4 put it in
>: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than the
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = a VARIABLE_0
VARIABLE_0 =: 0.0
********** f = or equal to NUMBER if it
<= NUMBER: 0.0
********** f = VARIABLE_2 is less than or equal to NUMBER if
VARIABLE_2 <= NUMBER: 0.0
********** f = empty for each VARIABLE_5 in the
EMPTY_LIST for: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = VARIABLE_4 then the more the list and return
return: 0.0
********** f = VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_5 > VARIABLE_3: 0.0
********** f = sort the more
FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
FUNCTION_CALL_8: -0.6931471805599453
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = the list and return that
return: 0.0
********** f = for loop there and then
NUMBER: 0.0
********** f = NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = VARIABLE_0 end the for
in: 0.0
********** f = there and then
NUMBER: 0.0
********** f = empty for each
EMPTY_LIST for: 0.0
********** f = the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = also
FUNCTION_CALL_8 VARIABLE_5: -0.6931471805599453
FUNCTION_CALL_8: -0.6931471805599453
********** f = the VARIABLE_0 end the for
in: 0.0
********** f = VARIABLE_4 put it in the VARIABLE_1
VARIABLE_1: 0.0
********** f = than the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_0 which is
VARIABLE_0: 0.0
********** f = the VARIABLE_2 is
VARIABLE_2: 0.0
********** f = less than less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = for loop there and then recursively
NUMBER: 0.0
********** f = than less then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = if it is return
return VARIABLE_2: -0.6931471805599453
return: -0.6931471805599453
********** f = if the VARIABLE_5 is greater than the
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = in the VARIABLE_2 and then create
VARIABLE: 0.0
********** f = if the VARIABLE_5 is greater than the VARIABLE_4
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = in the VARIABLE_0 end the for
in: 0.0
********** f = recursively sort the VARIABLE_0
VARIABLE_0: 0.0
********** f = in the VARIABLE_2 if the
VARIABLE_2 if: 0.0
********** f = in the VARIABLE_0 end the for loop there and
in: 0.0
********** f = NUMBER if it is return
NUMBER return: -0.6931471805599453
NUMBER return VARIABLE_2: -0.6931471805599453
********** f = if the VARIABLE_5 is greater
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_2 if the
VARIABLE_2 if: 0.0
********** f = then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = in the VARIABLE_0 end
in: 0.0
********** f = VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the VARIABLE_2 and then
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = loop there and then recursively sort
NUMBER: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5
VARIABLE_2 if VARIABLE_5: 0.0
********** f = less than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = more the list and return that
return: 0.0
********** f = then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = less then the VARIABLE_4 then the more the list and return
VARIABLE_1 return: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = VARIABLE_2 is less than or equal to NUMBER
VARIABLE_2 <= NUMBER: 0.0
********** f = VARIABLE_5 is greater than the VARIABLE_4 put it
VARIABLE_5 > VARIABLE_3: 0.0
********** f = and recursively sort
FUNCTION_CALL_11 VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_11: -0.6931471805599453
********** f = VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_5 > VARIABLE_3: 0.0
********** f = the VARIABLE_5 is greater than
VARIABLE_5 > VARIABLE_3: 0.0
********** f = let the VARIABLE_4 equal the first VARIABLE_5 in the
VARIABLE_4 =: -0.6931471805599453
VARIABLE_2 VARIABLE_4 =: -0.6931471805599453
********** f = than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = than or equal to NUMBER if
<= NUMBER: 0.0
********** f = VARIABLE_2 is less than or equal to NUMBER if it is return the
VARIABLE_2 <= NUMBER return: -0.6931471805599453
VARIABLE_2 <= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_2 is less than or equal to NUMBER if it
VARIABLE_2 <= NUMBER: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = greater than the
>: 0.0
********** f = VARIABLE_4 then the more the list and return that 
return: 0.0
********** f = equal to NUMBER if it is
NUMBER: 0.0
********** f = recursively sort the VARIABLE_0 and
VARIABLE_0: 0.0
********** f = less then the VARIABLE_4
VARIABLE_1: 0.0
********** f = less then the
VARIABLE_1: 0.0
********** f = or equal to NUMBER if it is return
<= NUMBER return: -0.6931471805599453
<= NUMBER return VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_5 is greater than the
VARIABLE_5 > VARIABLE_3: 0.0
********** f = and return that 
return: 0.0
********** f = the for loop there and then recursively
NUMBER: 0.0
********** f = VARIABLE_5 in the VARIABLE_2
VARIABLE_2: 0.0
********** f = then recursively sort the
NUMBER: 0.0
********** f = in the VARIABLE_0 end the for loop there
in: 0.0
********** f = VARIABLE_0 end the
in: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = is less than or equal to NUMBER if it is return
<= NUMBER return VARIABLE_2: -0.6931471805599453
<= NUMBER return: -0.6931471805599453
********** f = equal to NUMBER if
NUMBER: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = greater than the VARIABLE_4 put it
>: 0.0
********** f = to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = VARIABLE_0 end the for loop there
in: 0.0
********** f = less than less then the VARIABLE_4 then the more the list
VARIABLE_1: 0.0
********** f = for loop there and then recursively sort the
NUMBER: 0.0
********** f = if the VARIABLE_5
if VARIABLE_5: 0.0
********** f = list and then FUNCTION_CALL_11 the less than less then the
FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
VARIABLE_0 FUNCTION_CALL_10 VARIABLE_1: -0.6931471805599453
********** f = return the VARIABLE_2 let the VARIABLE_4 equal
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = equal to NUMBER if it
NUMBER: 0.0
********** f = or equal to NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal
<= NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the VARIABLE_2 is less than or equal to NUMBER if it is return
VARIABLE_2 <= NUMBER return VARIABLE_2: -0.6931471805599453
VARIABLE_2 <= NUMBER return: -0.6931471805599453
********** f = less than less then the VARIABLE_4 then the more the list and return that 
VARIABLE_1 return: 0.0
********** f = less than less then the
VARIABLE_1: 0.0
********** f = empty
EMPTY_LIST: 0.0
********** f = the list and return
return: 0.0
********** f = is less than or equal to NUMBER if
<= NUMBER: 0.0
********** f = NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = VARIABLE_5 is greater than the VARIABLE_4 put it in the VARIABLE_1
VARIABLE_5 > VARIABLE_3 VARIABLE_1: 0.0
********** f = in the VARIABLE_0 end the for loop
in: 0.0
********** f = less then the VARIABLE_4 then the
VARIABLE_1: 0.0
********** f = is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = empty for each VARIABLE_5 in
EMPTY_LIST for: 0.0
********** f = the VARIABLE_5 is greater than the VARIABLE_4
VARIABLE_5 > VARIABLE_3: 0.0
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = then the more the list and return that
return: 0.0
********** f = it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = the VARIABLE_2 if the VARIABLE_5 is greater than the
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then
VARIABLE_1: 0.0
********** f = is greater than the
> VARIABLE_3: 0.0
********** f = than less then the VARIABLE_4 then the more
VARIABLE_1: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 and then create
VARIABLE: 0.0
********** f = the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5 in the
VARIABLE_2 VARIABLE_4 = VARIABLE_2: -0.6931471805599453
VARIABLE_4 = VARIABLE_2: -0.6931471805599453
********** f = is greater than
> VARIABLE_3: -1.6094379124341003
>: -0.2231435513142097
********** f = the FUNCTION_CALL_7 of the
index: 0.0
********** f = the VARIABLE_5 is greater
VARIABLE_5 > VARIABLE_3: 0.0
********** f = than less then the
VARIABLE_1: 0.0
********** f = the for loop there and then recursively sort the
NUMBER: 0.0
********** f = if the VARIABLE_5 is greater than the VARIABLE_4 put it
if VARIABLE_5 > VARIABLE_3: 0.0
********** f = then create
VARIABLE: 0.0
********** f = return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = in the VARIABLE_2 if the VARIABLE_5 is greater than
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = is greater
> VARIABLE_3: -1.791759469228055
>: -0.1823215567939546
********** f = the VARIABLE_2 is less than or equal
VARIABLE_2 <=: 0.0
********** f = if the FUNCTION_CALL_7
if: 0.0
********** f = VARIABLE_5 in the VARIABLE_2 if the VARIABLE_5 is greater than the VARIABLE_4 put it in
VARIABLE_2 if VARIABLE_5 > VARIABLE_3: 0.0
********** f = then the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = then FUNCTION_CALL_11 the less than less then the VARIABLE_4 then the more the list and
VARIABLE_1: 0.0
********** f = less than or equal to NUMBER if it is
<= NUMBER: 0.0
********** f = NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = the less than less then the VARIABLE_4 then the more the list and return that
VARIABLE_1 return: 0.0
********** f = NUMBER if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
NUMBER return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = a VARIABLE_0 which
VARIABLE_0 =: 0.0
********** f = less then the VARIABLE_4 then the more the
VARIABLE_1: 0.0
********** f = if it is return the VARIABLE_2 let the VARIABLE_4 equal the first VARIABLE_5
return VARIABLE_2 VARIABLE_4 = VARIABLE_2: 0.0
********** f = end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
********** f = let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
********** f = VARIABLE_8 if VARIABLE_2 is less
VARIABLE_8 if VARIABLE_2: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = VARIABLE_0 indices beginning to
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
********** f = VARIABLE_0 integer div NUMBER let VARIABLE_4
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_7 plus VARIABLE_8
VARIABLE_7 + VARIABLE_8: 0.0
********** f = an empty list
NUMBER VARIABLE_6 = EMPTY_LIST: -2.0794415416798357
VARIABLE_6 = EMPTY_LIST: -2.0794415416798357
= NUMBER VARIABLE_6 = EMPTY_LIST: -2.0794415416798357
= EMPTY_LIST: -2.0794415416798357
EMPTY_LIST: -0.6931471805599453
********** f = end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
********** f = div NUMBER let VARIABLE_4
/ NUMBER VARIABLE_4 =: 0.0
********** f = equal FUNCTION_CALL_11 of VARIABLE_0 indices beginning
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
********** f = let VARIABLE_4 equal FUNCTION_CALL_11 of
=: 0.0
********** f = NUMBER and VARIABLE_6
NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -1.6094379124341003
NUMBER VARIABLE_8 =: -1.6094379124341003
NUMBER VARIABLE_8: -1.6094379124341003
NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -1.6094379124341003
NUMBER VARIABLE_8 = NUMBER: -1.6094379124341003
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10
else VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_4 equal FUNCTION_CALL_11 of VARIABLE_0 indices beginning
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
********** f = end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be an empty list
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: -1.0986122886681098
********** f = at index VARIABLE_8 if VARIABLE_2 is
index VARIABLE_8 if VARIABLE_2: 0.0
********** f = plus VARIABLE_8
+ VARIABLE_8: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = end while return VARIABLE_6
= NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = the end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
********** f = indices
: - NUMBER: -1.0986122886681098
: -: -1.0986122886681098
:: -1.0986122886681098
********** f = equal the FUNCTION_CALL_10 of
FUNCTION_CALL_10: 0.0
********** f = let variable VARIABLE_1 equal the
VARIABLE_1 =: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8: 0.0
********** f = of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = let VARIABLE_2
VARIABLE_2 =: -0.6931471805599453
VARIABLE_2: -0.6931471805599453
********** f = let VARIABLE_7 and VARIABLE_8 equals
NUMBER VARIABLE_7 =: -1.0986122886681098
VARIABLE_7 =: -1.0986122886681098
- NUMBER VARIABLE_7 =: -1.0986122886681098
********** f = while VARIABLE_7 plus VARIABLE_8 is
while VARIABLE_7 + VARIABLE_8: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
< FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and increment VARIABLE_7
index VARIABLE_7 + VARIABLE_8 = VARIABLE_2 VARIABLE_7 +: -0.6931471805599453
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2 VARIABLE_7 +: -0.6931471805599453
********** f = be an empty list
EMPTY_LIST: -0.8472978603872037
= EMPTY_LIST: -1.9459101490553135
VARIABLE_6 = EMPTY_LIST: -1.9459101490553135
NUMBER VARIABLE_6 = EMPTY_LIST: -1.9459101490553135
= NUMBER VARIABLE_6 = EMPTY_LIST: -1.9459101490553135
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = VARIABLE_6 be an empty list while VARIABLE_7 plus
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: 0.0
********** f = VARIABLE_4 equal FUNCTION_CALL_11 of VARIABLE_0 indices beginning to
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_0 indices beginning
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = of the VARIABLE_0 let VARIABLE_2 equal
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = while return VARIABLE_6 end if 
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER
else VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = an empty list while
EMPTY_LIST while: -1.6094379124341003
= EMPTY_LIST while: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
********** f = div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
/ NUMBER VARIABLE_4 =: 0.0
********** f = the VARIABLE_0 integer div NUMBER
VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = end while return VARIABLE_6 end
= NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = way and VARIABLE_5 equal
VARIABLE_5: -0.6931471805599453
VARIABLE_1 VARIABLE_5: -0.6931471805599453
********** f = FUNCTION_CALL_11 of VARIABLE_0
VARIABLE_0 sublist NUMBER: -1.0986122886681098
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
********** f = FUNCTION_CALL_11 of VARIABLE_0 indices
VARIABLE_0 sublist NUMBER: -1.0986122886681098
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_5 equal FUNCTION_CALL_11
VARIABLE_1 VARIABLE_5: -0.6931471805599453
VARIABLE_5: -0.6931471805599453
********** f = div NUMBER let
/ NUMBER VARIABLE_4 =: 0.0
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end while
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
********** f = VARIABLE_8 if VARIABLE_2 is less than or equal to
VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = at index VARIABLE_7 plus
VARIABLE_6 index VARIABLE_7 +: -0.6931471805599453
index VARIABLE_7 +: -0.6931471805599453
********** f = FUNCTION_CALL_10 of the VARIABLE_0 is
FUNCTION_CALL_10 VARIABLE_0 ==: 0.0
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
********** f = an empty list while VARIABLE_7 plus VARIABLE_8
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
********** f = end let VARIABLE_7 and VARIABLE_8 equals
- NUMBER VARIABLE_7 =: -1.0986122886681098
VARIABLE_7 =: -1.0986122886681098
NUMBER VARIABLE_7 =: -1.0986122886681098
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = the end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = set VARIABLE_6
= NUMBER: -0.6931471805599453
=: -0.6931471805599453
********** f = while return VARIABLE_6 end
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_6 be
VARIABLE_8 = NUMBER: -1.6094379124341003
VARIABLE_8 = NUMBER VARIABLE_6: -1.6094379124341003
VARIABLE_8 = NUMBER VARIABLE_6 =: -1.6094379124341003
VARIABLE_8: -1.6094379124341003
VARIABLE_8 =: -1.6094379124341003
********** f = FUNCTION_CALL_10 of the VARIABLE_0
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = of VARIABLE_0 indices
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
VARIABLE_0 sublist NUMBER: -1.0986122886681098
********** f = VARIABLE_2 and increment VARIABLE_7 otherwise set VARIABLE_6 at index
VARIABLE_2 VARIABLE_7 + = NUMBER else VARIABLE_6 index: 0.0
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3: -0.6931471805599453
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3: -0.6931471805599453
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 is
FUNCTION_CALL_10 VARIABLE_0 ==: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = otherwise set VARIABLE_6 at index VARIABLE_7
= NUMBER else VARIABLE_6 index VARIABLE_7: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6
VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8 =: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER: -2.70805020110221
NUMBER VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
- NUMBER VARIABLE_7 = NUMBER VARIABLE_8: -2.70805020110221
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -2.70805020110221
********** f = plus VARIABLE_8 is
+ VARIABLE_8: 0.0
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = of the VARIABLE_0 is
VARIABLE_0 ==: 0.0
********** f = NUMBER and VARIABLE_6 be
NUMBER VARIABLE_8 = NUMBER VARIABLE_6: -1.6094379124341003
NUMBER VARIABLE_8 =: -1.6094379124341003
NUMBER VARIABLE_8 = NUMBER: -1.6094379124341003
NUMBER VARIABLE_8: -1.6094379124341003
NUMBER VARIABLE_8 = NUMBER VARIABLE_6 =: -1.6094379124341003
********** f = let VARIABLE_2 equal
VARIABLE_2 =: 0.0
********** f = VARIABLE_8 end if end while return VARIABLE_6 end
VARIABLE_8 + = NUMBER return VARIABLE_6: 0.0
********** f = integer div NUMBER let VARIABLE_4
/ NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_8 if
VARIABLE_8 if: 0.0
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
********** f = beginning
sublist NUMBER : VARIABLE_1: -1.791759469228055
sublist NUMBER :: -1.791759469228055
: VARIABLE_1: -1.791759469228055
:: -1.791759469228055
NUMBER :: -1.791759469228055
NUMBER : VARIABLE_1: -1.791759469228055
********** f = while return
NUMBER return: -1.3862943611198906
= NUMBER return: -1.3862943611198906
return: -1.3862943611198906
+ = NUMBER return: -1.3862943611198906
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
********** f = an empty list while VARIABLE_7 plus
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
********** f = let VARIABLE_7 and VARIABLE_8 equals NUMBER
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = VARIABLE_0 indices VARIABLE_1 to
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : -: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 :: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : - NUMBER: -1.0986122886681098
********** f = VARIABLE_8 end if end while
VARIABLE_8: -1.3862943611198906
VARIABLE_8 + =: -1.3862943611198906
VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_8 +: -1.3862943611198906
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3: -0.6931471805599453
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3: -0.6931471805599453
********** f = be an empty list while VARIABLE_7 plus VARIABLE_8 is
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
********** f = an empty list while VARIABLE_7
EMPTY_LIST while VARIABLE_7: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
********** f = div NUMBER
/ NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_0 indices VARIABLE_1
VARIABLE_0 sublist VARIABLE_1 : - NUMBER: -1.791759469228055
VARIABLE_0 sublist VARIABLE_1 : -: -1.791759469228055
FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 :: -1.791759469228055
VARIABLE_0 sublist VARIABLE_1 :: -1.791759469228055
FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : -: -1.791759469228055
FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : - NUMBER: -1.791759469228055
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = if end while return VARIABLE_6 end if
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_8 end
VARIABLE_8: -1.3862943611198906
VARIABLE_8 + =: -1.3862943611198906
VARIABLE_8 +: -1.3862943611198906
VARIABLE_8 + = NUMBER: -1.3862943611198906
********** f = indices beginning
: VARIABLE_1: -1.791759469228055
sublist NUMBER : VARIABLE_1: -1.791759469228055
sublist NUMBER :: -1.791759469228055
:: -1.791759469228055
NUMBER :: -1.791759469228055
NUMBER : VARIABLE_1: -1.791759469228055
********** f = equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = let VARIABLE_2 equal VARIABLE_4
VARIABLE_2 = VARIABLE_4: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_6 end if
VARIABLE_6: 0.0
********** f = way and VARIABLE_5 equal FUNCTION_CALL_11
VARIABLE_1 VARIABLE_5: -0.6931471805599453
VARIABLE_5: -0.6931471805599453
********** f = let VARIABLE_3 equal VARIABLE_5 at index
VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = indices VARIABLE_1
VARIABLE_1 :: -1.791759469228055
VARIABLE_1 : - NUMBER: -1.791759469228055
sublist VARIABLE_1 : -: -1.791759469228055
VARIABLE_1 : -: -1.791759469228055
sublist VARIABLE_1 : - NUMBER: -1.791759469228055
sublist VARIABLE_1 :: -1.791759469228055
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = if end while return VARIABLE_6 end if 
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer
else VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = VARIABLE_0 indices
VARIABLE_0: -1.0986122886681098
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0 sublist NUMBER: -1.0986122886681098
********** f = at index VARIABLE_7
index VARIABLE_7: -0.6931471805599453
VARIABLE_6 index VARIABLE_7: -0.6931471805599453
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = end if end while return VARIABLE_6
NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
********** f = and increment VARIABLE_7 otherwise set
VARIABLE_7 + = NUMBER else: -0.6931471805599453
VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = end while return VARIABLE_6 end if
return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
********** f = while VARIABLE_7 plus
while VARIABLE_7 +: 0.0
********** f = less than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = and VARIABLE_5 equal FUNCTION_CALL_11
VARIABLE_5: -0.6931471805599453
VARIABLE_1 VARIABLE_5: -0.6931471805599453
********** f = if the FUNCTION_CALL_10
if FUNCTION_CALL_10: 0.0
********** f = FUNCTION_CALL_11 of
==: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be an empty list
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: -1.0986122886681098
********** f = end while return VARIABLE_6 end if 
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_2 and increment VARIABLE_7 otherwise set
VARIABLE_2 VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
VARIABLE_2 VARIABLE_7 + = NUMBER else: -0.6931471805599453
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end while
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
********** f = VARIABLE_4 equal FUNCTION_CALL_11 of VARIABLE_0
VARIABLE_0: -1.0986122886681098
VARIABLE_0 sublist NUMBER: -1.0986122886681098
VARIABLE_0 sublist: -1.0986122886681098
********** f = and VARIABLE_6
VARIABLE_8 =: -1.6094379124341003
VARIABLE_8 = NUMBER VARIABLE_6: -1.6094379124341003
VARIABLE_8: -1.6094379124341003
VARIABLE_8 = NUMBER: -1.6094379124341003
VARIABLE_8 = NUMBER VARIABLE_6 =: -1.6094379124341003
********** f = the end let VARIABLE_7 and VARIABLE_8 equals NUMBER and
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = less than or equal to VARIABLE_3
<= VARIABLE_3: -0.6931471805599453
<= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = beginning to
sublist NUMBER :: -1.791759469228055
NUMBER :: -1.791759469228055
sublist NUMBER : VARIABLE_1: -1.791759469228055
: VARIABLE_1: -1.791759469228055
:: -1.791759469228055
NUMBER : VARIABLE_1: -1.791759469228055
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
********** f = FUNCTION_CALL_11 of VARIABLE_0 indices beginning to
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = and VARIABLE_6 be
VARIABLE_8 = NUMBER VARIABLE_6: -1.6094379124341003
VARIABLE_8: -1.6094379124341003
VARIABLE_8 = NUMBER: -1.6094379124341003
VARIABLE_8 = NUMBER VARIABLE_6 =: -1.6094379124341003
VARIABLE_8 =: -1.6094379124341003
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of
else VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = if VARIABLE_2 is less than
if VARIABLE_2: 0.0
********** f = or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = and increment VARIABLE_7 otherwise set VARIABLE_6
VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
VARIABLE_7 + = NUMBER else: -0.6931471805599453
********** f = equal FUNCTION_CALL_11 of VARIABLE_0 indices
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0 sublist NUMBER: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_0 let VARIABLE_2 equal
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = while return VARIABLE_6 end if
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = let VARIABLE_7 and VARIABLE_8 equals NUMBER and
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = integer div NUMBER let
/ NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10
VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_2 and increment VARIABLE_7
VARIABLE_2 VARIABLE_7 +: 0.0
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
********** f = return VARIABLE_6 end if 
= NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = if the FUNCTION_CALL_10 of the VARIABLE_0 is NUMBER
if FUNCTION_CALL_10 VARIABLE_0 == NUMBER: 0.0
********** f = the VARIABLE_0 let VARIABLE_2
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = equal VARIABLE_4 at index VARIABLE_7
VARIABLE_4 index VARIABLE_7: 0.0
********** f = is less than or equal to VARIABLE_3
<= VARIABLE_3: -0.6931471805599453
<= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let
else VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
********** f = be an empty list while VARIABLE_7 plus VARIABLE_8
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end while
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
********** f = end if end while return VARIABLE_6 end if
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end while
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
********** f = VARIABLE_7 and VARIABLE_8
- NUMBER VARIABLE_7: -1.0986122886681098
NUMBER VARIABLE_7: -1.0986122886681098
VARIABLE_7: -1.0986122886681098
********** f = be an empty list while
= NUMBER VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while: -1.6094379124341003
= EMPTY_LIST while: -1.6094379124341003
EMPTY_LIST while: -1.6094379124341003
********** f = return VARIABLE_6
NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -2.0794415416798357
index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -2.0794415416798357
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -2.0794415416798357
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = let VARIABLE_4 equal
=: 0.0
********** f = end if end while return
+ = NUMBER return: -1.3862943611198906
return: -1.3862943611198906
NUMBER return: -1.3862943611198906
= NUMBER return: -1.3862943611198906
********** f = the end let VARIABLE_7 and VARIABLE_8 equals NUMBER
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = increment VARIABLE_7 otherwise set VARIABLE_6 at index VARIABLE_7
VARIABLE_7 + = NUMBER else VARIABLE_6 index VARIABLE_7: 0.0
********** f = equal FUNCTION_CALL_11 of VARIABLE_0
VARIABLE_0 sublist NUMBER: -1.0986122886681098
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = if VARIABLE_2 is less than or equal to VARIABLE_3
if VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
if VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2 is less than
index VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_8 end if end while return VARIABLE_6 end if 
VARIABLE_8 + = NUMBER return VARIABLE_6: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = if end while return
NUMBER return: -1.3862943611198906
+ = NUMBER return: -1.3862943611198906
= NUMBER return: -1.3862943611198906
return: -1.3862943611198906
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
********** f = of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = if end while return VARIABLE_6 end
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
********** f = the VARIABLE_0 integer div NUMBER let
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = otherwise let variable VARIABLE_1
else VARIABLE_1 =: 0.0
********** f = and VARIABLE_5 equal
VARIABLE_1 VARIABLE_5: -0.6931471805599453
VARIABLE_5: -0.6931471805599453
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8: 0.0
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = end let VARIABLE_7 and VARIABLE_8 equals NUMBER
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = or equal to VARIABLE_3
<= VARIABLE_3 VARIABLE_6: -0.6931471805599453
<= VARIABLE_3: -0.6931471805599453
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + =: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 +: -1.3862943611198906
VARIABLE_7 + VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER: -1.3862943611198906
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal to VARIABLE_3
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = VARIABLE_6 be an empty list while VARIABLE_7
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: 0.0
********** f = an empty list while VARIABLE_7 plus VARIABLE_8 is
EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 + VARIABLE_8: -1.6094379124341003
********** f = let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index
VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
/ NUMBER VARIABLE_4 =: 0.0
********** f = set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: -0.6931471805599453
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: -0.6931471805599453
********** f = FUNCTION_CALL_10 of the VARIABLE_0 is NUMBER
FUNCTION_CALL_10 VARIABLE_0 == NUMBER: 0.0
********** f = VARIABLE_6 be an empty list while
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while: 0.0
********** f = the end let VARIABLE_7 and VARIABLE_8 equals
NUMBER VARIABLE_7 =: -1.0986122886681098
VARIABLE_7 =: -1.0986122886681098
- NUMBER VARIABLE_7 =: -1.0986122886681098
********** f = equal to VARIABLE_3
VARIABLE_3: -0.6931471805599453
VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_4 at index
VARIABLE_4 index: 0.0
********** f = if end while return VARIABLE_6
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8
VARIABLE_5 index VARIABLE_8: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = otherwise let variable VARIABLE_1 equal the
else VARIABLE_1 =: 0.0
********** f = end if end while return VARIABLE_6 end
return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = equal VARIABLE_4 at index
VARIABLE_4 index: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = indices beginning to
NUMBER : VARIABLE_1: -1.791759469228055
sublist NUMBER : VARIABLE_1: -1.791759469228055
:: -1.791759469228055
sublist NUMBER :: -1.791759469228055
: VARIABLE_1: -1.791759469228055
NUMBER :: -1.791759469228055
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = VARIABLE_0 integer div NUMBER
VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_5 at index
VARIABLE_5 index: 0.0
********** f = set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: -0.6931471805599453
index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: -0.6931471805599453
********** f = of the VARIABLE_0 integer
VARIABLE_0: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = if VARIABLE_2 is less than or
if VARIABLE_2 <=: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal
index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = let VARIABLE_4
=: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = VARIABLE_0 indices VARIABLE_1 to the
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : - NUMBER: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : -: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 :: -1.0986122886681098
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = VARIABLE_6 at index VARIABLE_7
index VARIABLE_7: -0.6931471805599453
VARIABLE_6 index VARIABLE_7: -0.6931471805599453
********** f = equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = be an empty list while VARIABLE_7
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
EMPTY_LIST while VARIABLE_7: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7: -1.6094379124341003
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: -1.6094379124341003
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = the end let VARIABLE_7 and VARIABLE_8 equals NUMBER and VARIABLE_6 be an empty list
VARIABLE_7 = NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: -1.0986122886681098
********** f = if VARIABLE_2 is less
if VARIABLE_2: 0.0
********** f = VARIABLE_8 if VARIABLE_2 is less than or
VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = return VARIABLE_6 end
return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
index VARIABLE_7 + VARIABLE_8 =: -0.6931471805599453
VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: -0.6931471805599453
********** f = be an empty list while VARIABLE_7 plus
NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
= NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
= EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
EMPTY_LIST while VARIABLE_7 +: -1.6094379124341003
********** f = VARIABLE_4 at index VARIABLE_7
VARIABLE_4 index VARIABLE_7: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = equal VARIABLE_5
VARIABLE_5: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = VARIABLE_8 if VARIABLE_2
VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_8 if VARIABLE_2 is less than or equal
VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = than or equal to VARIABLE_3
<= VARIABLE_3: -0.6931471805599453
<= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_6 at index
VARIABLE_6 index: -0.6931471805599453
index: -0.6931471805599453
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = VARIABLE_0 let VARIABLE_2
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = VARIABLE_8 if VARIABLE_2 is less than or equal to VARIABLE_3
VARIABLE_8 if VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
VARIABLE_8 if VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal to
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_8 to
VARIABLE_8 =: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
< FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = of VARIABLE_0 indices beginning to
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_7 plus
VARIABLE_7 +: 0.0
********** f = increment VARIABLE_7
VARIABLE_7 +: 0.0
********** f = the VARIABLE_0 integer
VARIABLE_0: 0.0
********** f = of the VARIABLE_0 integer div NUMBER let VARIABLE_4
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = end while return
return: -1.3862943611198906
+ = NUMBER return: -1.3862943611198906
NUMBER return: -1.3862943611198906
= NUMBER return: -1.3862943611198906
********** f = while VARIABLE_7 plus VARIABLE_8
while VARIABLE_7 + VARIABLE_8: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2 is less than or
index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8
VARIABLE_6 index VARIABLE_7 + VARIABLE_8: -0.6931471805599453
index VARIABLE_7 + VARIABLE_8: -0.6931471805599453
********** f = of the VARIABLE_0 let VARIABLE_2
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = VARIABLE_8 end if
VARIABLE_8 + =: -1.3862943611198906
VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_8: -1.3862943611198906
VARIABLE_8 +: -1.3862943611198906
********** f = than the FUNCTION_CALL_10 of
< FUNCTION_CALL_10: 0.0
********** f = return VARIABLE_6 end if
= NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
********** f = equal FUNCTION_CALL_11 of
==: 0.0
********** f = VARIABLE_4 equal FUNCTION_CALL_11 of VARIABLE_0 indices
VARIABLE_0 sublist: -1.0986122886681098
VARIABLE_0: -1.0986122886681098
VARIABLE_0 sublist NUMBER: -1.0986122886681098
********** f = integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
/ NUMBER VARIABLE_4 =: 0.0
********** f = of the VARIABLE_0 integer div NUMBER let
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_8 end if end while return VARIABLE_6 end if
VARIABLE_8 + = NUMBER return VARIABLE_6: 0.0
********** f = increment VARIABLE_7 otherwise set
VARIABLE_7 + = NUMBER else: -0.6931471805599453
VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = NUMBER and VARIABLE_6 be an empty list while
NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while: 0.0
********** f = VARIABLE_8 end if end
VARIABLE_8 + = NUMBER: -1.3862943611198906
VARIABLE_8 + =: -1.3862943611198906
VARIABLE_8 +: -1.3862943611198906
VARIABLE_8: -1.3862943611198906
********** f = VARIABLE_8 if VARIABLE_2 is less than
VARIABLE_8 if VARIABLE_2: 0.0
********** f = if the FUNCTION_CALL_10 of
if FUNCTION_CALL_10: 0.0
********** f = if the FUNCTION_CALL_10 of the
if FUNCTION_CALL_10: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = VARIABLE_7 let VARIABLE_3
VARIABLE_7 VARIABLE_3 =: 0.0
********** f = VARIABLE_5 equal
VARIABLE_5: -0.6931471805599453
VARIABLE_1 VARIABLE_5: -0.6931471805599453
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = if the FUNCTION_CALL_10 of the VARIABLE_0 is
if FUNCTION_CALL_10 VARIABLE_0 ==: 0.0
********** f = at index VARIABLE_8
index VARIABLE_8: 0.0
********** f = NUMBER and VARIABLE_6 be an empty list while VARIABLE_7
NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: 0.0
********** f = if VARIABLE_2 is less than or equal
if VARIABLE_2 <=: 0.0
********** f = end if end while return VARIABLE_6 end if 
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal to VARIABLE_3
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
********** f = of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2 is less than or equal to
index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index
< FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = the VARIABLE_0 let VARIABLE_2 equal
VARIABLE_0 VARIABLE_2 =: 0.0
********** f = VARIABLE_8 to VARIABLE_3 and
VARIABLE_8 = VARIABLE_3: 0.0
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = end let VARIABLE_7 and VARIABLE_8 equals NUMBER and
NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
VARIABLE_7 = NUMBER: -1.0986122886681098
- NUMBER VARIABLE_7 = NUMBER: -1.0986122886681098
********** f = VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = at index VARIABLE_8 if
index VARIABLE_8 if: 0.0
********** f = VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
/ NUMBER VARIABLE_4 =: 0.0
********** f = and VARIABLE_6 be an empty list while VARIABLE_7
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if
VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = let VARIABLE_4 equal FUNCTION_CALL_11
=: 0.0
********** f = less than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = VARIABLE_2 is less than or equal to VARIABLE_3
VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
********** f = VARIABLE_0 indices VARIABLE_1 to the end
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : -: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 :: -1.0986122886681098
= FUNCTION_CALL_11 VARIABLE_0 sublist VARIABLE_1 : - NUMBER: -1.0986122886681098
********** f = NUMBER return the
NUMBER return: 0.0
********** f = VARIABLE_2 and increment VARIABLE_7 otherwise set VARIABLE_6 at index VARIABLE_7
VARIABLE_2 VARIABLE_7 + = NUMBER else VARIABLE_6 index VARIABLE_7: 0.0
********** f = of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = to the end
= FUNCTION_CALL_11: -0.6931471805599453
=: -0.6931471805599453
********** f = FUNCTION_CALL_11 of VARIABLE_0 indices beginning
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal to
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4
else VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = div NUMBER let VARIABLE_4 equal
/ NUMBER VARIABLE_4 =: 0.0
********** f = equal VARIABLE_5 at index
VARIABLE_5 index: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = and VARIABLE_6 be an empty list while
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while: 0.0
********** f = otherwise set
= NUMBER else: -0.6931471805599453
= NUMBER else VARIABLE_6: -0.6931471805599453
********** f = otherwise set VARIABLE_6 at index
= NUMBER else VARIABLE_6 index: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2 is less than or equal
index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_6 be an empty list
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: 0.0
********** f = way and VARIABLE_5
VARIABLE_1 VARIABLE_5: -0.6931471805599453
VARIABLE_5: -0.6931471805599453
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = equal the FUNCTION_CALL_10 of the
FUNCTION_CALL_10: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2
index VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_2 and increment VARIABLE_7 otherwise set VARIABLE_6
VARIABLE_2 VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
VARIABLE_2 VARIABLE_7 + = NUMBER else: -0.6931471805599453
********** f = than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = and VARIABLE_5
VARIABLE_5: -0.6931471805599453
VARIABLE_1 VARIABLE_5: -0.6931471805599453
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3
index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = otherwise let variable VARIABLE_1 equal
else VARIABLE_1 =: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of
VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_6 end if 
VARIABLE_6: 0.0
********** f = VARIABLE_8 end if end while return
VARIABLE_8 + = NUMBER return: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4
FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 = VARIABLE_4: 0.0
********** f = let VARIABLE_2 equal VARIABLE_4 at index
VARIABLE_2 = VARIABLE_4 index: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal
VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = equal VARIABLE_4
VARIABLE_4: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2 equal
< FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = while VARIABLE_7
while VARIABLE_7: 0.0
********** f = VARIABLE_7 plus VARIABLE_8 to VARIABLE_3 and increment
VARIABLE_7 + VARIABLE_8 = VARIABLE_3: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = VARIABLE_8 is
VARIABLE_8: 0.0
********** f = let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = plus VARIABLE_8 to VARIABLE_3 and increment VARIABLE_8 end if end while return
+ VARIABLE_8 = VARIABLE_3 VARIABLE_8 + = NUMBER return: 0.0
********** f = NUMBER and VARIABLE_6 be an empty list
NUMBER VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: 0.0
********** f = let VARIABLE_3 equal
VARIABLE_3 =: 0.0
********** f = VARIABLE_0 integer div NUMBER let
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = of the VARIABLE_0 integer div NUMBER
VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = while return VARIABLE_6
= NUMBER return VARIABLE_6: -1.3862943611198906
NUMBER return VARIABLE_6: -1.3862943611198906
+ = NUMBER return VARIABLE_6: -1.3862943611198906
return VARIABLE_6: -1.3862943611198906
********** f = equal the FUNCTION_CALL_10
FUNCTION_CALL_10: 0.0
********** f = VARIABLE_8 if VARIABLE_2 is
VARIABLE_8 if VARIABLE_2: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = otherwise set VARIABLE_6
= NUMBER else VARIABLE_6: -0.6931471805599453
= NUMBER else: -0.6931471805599453
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0
else VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = VARIABLE_7 plus VARIABLE_8 is
VARIABLE_7 + VARIABLE_8: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5
VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5: 0.0
********** f = if VARIABLE_2 is less than or equal to
if VARIABLE_2 <=: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = of the VARIABLE_0 is NUMBER
VARIABLE_0 == NUMBER: 0.0
********** f = than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2 and
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to VARIABLE_2
VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 = VARIABLE_2: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the
VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0
< FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = VARIABLE_8 end if end while return VARIABLE_6
VARIABLE_8 + = NUMBER return VARIABLE_6: 0.0
********** f = than the FUNCTION_CALL_10 of the VARIABLE_0 let VARIABLE_2
< FUNCTION_CALL_10 VARIABLE_0 VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 is NUMBER
VARIABLE_0 == NUMBER: 0.0
********** f = than the FUNCTION_CALL_10 of the
< FUNCTION_CALL_10: 0.0
********** f = of VARIABLE_0 indices beginning
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = to VARIABLE_3 and
= VARIABLE_3: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5
VARIABLE_3 = VARIABLE_5: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8: 0.0
********** f = than the FUNCTION_CALL_10
< FUNCTION_CALL_10: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal to
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = and increment VARIABLE_7 otherwise set VARIABLE_6 at index VARIABLE_7
VARIABLE_7 + = NUMBER else VARIABLE_6 index VARIABLE_7: 0.0
********** f = and VARIABLE_6 be an empty list while VARIABLE_7 plus
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST while VARIABLE_7 +: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = and increment VARIABLE_7 otherwise set VARIABLE_6 at index
VARIABLE_7 + = NUMBER else VARIABLE_6 index: 0.0
********** f = integer div NUMBER let VARIABLE_4 equal
/ NUMBER VARIABLE_4 =: 0.0
********** f = VARIABLE_5 at index VARIABLE_8 if VARIABLE_2
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = increment VARIABLE_7 otherwise set VARIABLE_6
VARIABLE_7 + = NUMBER else: -0.6931471805599453
VARIABLE_7 + = NUMBER else VARIABLE_6: -0.6931471805599453
********** f = let variable VARIABLE_1 equal
VARIABLE_1 =: 0.0
********** f = the VARIABLE_0 integer div NUMBER let VARIABLE_4
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = equal FUNCTION_CALL_11 of VARIABLE_0 indices beginning to
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 sublist NUMBER : VARIABLE_1: -0.6931471805599453
********** f = at index VARIABLE_8 if VARIABLE_2 is less
index VARIABLE_8 if VARIABLE_2: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than or equal
VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2 <=: 0.0
********** f = or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = VARIABLE_5 at index VARIABLE_8 if
VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8
VARIABLE_3 = VARIABLE_5 index VARIABLE_8: 0.0
********** f = VARIABLE_5 at index VARIABLE_8
VARIABLE_5 index VARIABLE_8: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 is NUMBER
FUNCTION_CALL_10 VARIABLE_0 == NUMBER: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = plus VARIABLE_8 to VARIABLE_3 and increment
+ VARIABLE_8 = VARIABLE_3: 0.0
********** f = let VARIABLE_3
VARIABLE_3 =: 0.0
********** f = VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index
VARIABLE_4 index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index: 0.0
********** f = equal the FUNCTION_CALL_10 of the VARIABLE_0
FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = at index VARIABLE_8 if VARIABLE_2 is less than or equal to VARIABLE_3
index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3 VARIABLE_6: -0.6931471805599453
index VARIABLE_8 if VARIABLE_2 <= VARIABLE_3: -0.6931471805599453
********** f = let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_2 = VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = the FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = at index VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less than
index VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = FUNCTION_CALL_10 of the VARIABLE_0 integer div NUMBER
FUNCTION_CALL_10 VARIABLE_0 / NUMBER VARIABLE_4: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal VARIABLE_5 at index VARIABLE_8 if
VARIABLE_7 VARIABLE_3 = VARIABLE_5 index VARIABLE_8 if: 0.0
********** f = equal VARIABLE_5 at index VARIABLE_8 if VARIABLE_2 is less
VARIABLE_5 index VARIABLE_8 if VARIABLE_2: 0.0
********** f = let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the VARIABLE_0
VARIABLE_1 = FUNCTION_CALL_10 VARIABLE_0: 0.0
********** f = increment VARIABLE_7 otherwise set VARIABLE_6 at index
VARIABLE_7 + = NUMBER else VARIABLE_6 index: 0.0
********** f = equal VARIABLE_4 at index VARIABLE_7 let VARIABLE_3 equal
VARIABLE_4 index VARIABLE_7 VARIABLE_3 =: 0.0
********** f = integer div NUMBER
/ NUMBER VARIABLE_4: 0.0
********** f = the VARIABLE_0 let VARIABLE_2 equal VARIABLE_4 at index VARIABLE_7
VARIABLE_0 VARIABLE_2 = VARIABLE_4 index VARIABLE_7: 0.0
********** f = and increment VARIABLE_7
VARIABLE_7 +: 0.0
********** f = otherwise let variable VARIABLE_1 equal the FUNCTION_CALL_10 of the
else VARIABLE_1 = FUNCTION_CALL_10: 0.0
********** f = VARIABLE_7 let VARIABLE_3 equal
VARIABLE_7 VARIABLE_3 =: 0.0
********** f = and VARIABLE_6 be an empty list
VARIABLE_8 = NUMBER VARIABLE_6 = EMPTY_LIST: 0.0
********** f = is less than or equal to VARIABLE_3 set VARIABLE_6 at index VARIABLE_7 plus VARIABLE_8 to
<= VARIABLE_3 VARIABLE_6 index VARIABLE_7 + VARIABLE_8 =: 0.0
********** f = VARIABLE_8 to VARIABLE_3
VARIABLE_8 = VARIABLE_3: 0.0
********** f = the VARIABLE_0 integer div NUMBER let VARIABLE_4 equal FUNCTION_CALL_11 of
VARIABLE_0 / NUMBER VARIABLE_4 =: 0.0
********** f = to FUNCTION_CALL_2
FUNCTION_CALL_2: -0.6931471805599453
: FUNCTION_CALL_2: -0.6931471805599453
********** f = if FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0 else
if FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0 else: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = to FUNCTION_CALL_2 VARIABLE_0
: FUNCTION_CALL_2 VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0: -0.6931471805599453
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index
else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
: FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0
VARIABLE_0 == NUMBER return VARIABLE_0: 0.0
********** f = equal to NUMBER return
NUMBER return: 0.0
********** f = return VARIABLE_0 else
return VARIABLE_0 else: 0.0
********** f = from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = NUMBER to FUNCTION_CALL_2 VARIABLE_0
NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = to FUNCTION_CALL_2 VARIABLE_0 divided
: FUNCTION_CALL_2 VARIABLE_0 /: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0 /: -0.6931471805599453
********** f = index NUMBER to
NUMBER: -0.6931471805599453
NUMBER :: -0.6931471805599453
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = index NUMBER
NUMBER :: -0.6931471805599453
NUMBER: -0.6931471805599453
********** f = VARIABLE_0 from index NUMBER to
VARIABLE_0 sublist NUMBER: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = index NUMBER to FUNCTION_CALL_2 VARIABLE_0
NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 from index NUMBER
VARIABLE_0 sublist NUMBER: -0.6931471805599453
VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from
VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = else FUNCTION_CALL_3
else FUNCTION_CALL_3: 0.0
********** f = if FUNCTION_CALL_2
if FUNCTION_CALL_2: 0.0
********** f = NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = if FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER
if FUNCTION_CALL_2 VARIABLE_0 == NUMBER: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index
FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 divided
FUNCTION_CALL_2 VARIABLE_0 /: -0.6931471805599453
: FUNCTION_CALL_2 VARIABLE_0 /: -0.6931471805599453
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
: FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = VARIABLE_0 divided by NUMBER 
VARIABLE_0 / NUMBER: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = if FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0
if FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0: 0.0
********** f = VARIABLE_0 from index NUMBER to FUNCTION_CALL_2
VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = NUMBER to FUNCTION_CALL_2
NUMBER : FUNCTION_CALL_2: 0.0
********** f = index NUMBER to FUNCTION_CALL_2
NUMBER : FUNCTION_CALL_2: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER
FUNCTION_CALL_2 VARIABLE_0 == NUMBER: 0.0
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3
VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
: FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0
else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = equal to NUMBER return VARIABLE_0 else
NUMBER return VARIABLE_0 else: 0.0
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0
VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
********** f = FUNCTION_CALL_3 VARIABLE_0 from
FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0
FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0: 0.0
********** f = from index NUMBER to FUNCTION_CALL_2
sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0
VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = equal to NUMBER return VARIABLE_0
NUMBER return VARIABLE_0: 0.0
********** f = return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index
return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = else FUNCTION_CALL_3 VARIABLE_0 from
else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = else FUNCTION_CALL_3 VARIABLE_0
else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER :: -0.6931471805599453
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER: -0.6931471805599453
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
: FUNCTION_CALL_2 VARIABLE_0 / NUMBER: -0.6931471805599453
********** f = FUNCTION_CALL_2 VARIABLE_0 is
FUNCTION_CALL_2 VARIABLE_0 ==: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3
FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2
VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2: 0.0
********** f = FUNCTION_CALL_3 VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0
FUNCTION_CALL_3 VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = if FUNCTION_CALL_2 VARIABLE_0 is
if FUNCTION_CALL_2 VARIABLE_0 ==: 0.0
********** f = divided by NUMBER 
/ NUMBER: 0.0
********** f = if FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return
if FUNCTION_CALL_2 VARIABLE_0 == NUMBER return: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index
NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER
VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 from index
VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0 sublist: 0.0
********** f = VARIABLE_0 from index
VARIABLE_0 sublist: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0
: FUNCTION_CALL_2 VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_2 VARIABLE_0: -0.6931471805599453
********** f = VARIABLE_0 is equal to NUMBER return VARIABLE_0 else
VARIABLE_0 == NUMBER return VARIABLE_0 else: 0.0
********** f = VARIABLE_0 is equal to NUMBER return
VARIABLE_0 == NUMBER return: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0
FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3 VARIABLE_0: 0.0
********** f = equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3
NUMBER return VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0 else
FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0 else: 0.0
********** f = FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return
FUNCTION_CALL_2 VARIABLE_0 == NUMBER return: 0.0
********** f = NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_0 from index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided by NUMBER 
VARIABLE_0 sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0 / NUMBER: 0.0
********** f = VARIABLE_0 from
VARIABLE_0 sublist: 0.0
********** f = index NUMBER to FUNCTION_CALL_2 VARIABLE_0 divided
NUMBER : FUNCTION_CALL_2 VARIABLE_0 /: 0.0
********** f = return VARIABLE_0 else FUNCTION_CALL_3
return VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = VARIABLE_0 else FUNCTION_CALL_3
VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = if FUNCTION_CALL_2 VARIABLE_0 is equal to NUMBER return VARIABLE_0 else FUNCTION_CALL_3
if FUNCTION_CALL_2 VARIABLE_0 == NUMBER return VARIABLE_0 else FUNCTION_CALL_3: 0.0
********** f = from index NUMBER to FUNCTION_CALL_2 VARIABLE_0
sublist NUMBER : FUNCTION_CALL_2 VARIABLE_0: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2 times
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2 times
VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = FUNCTION_CALL_5 of the
FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is
VARIABLE_0 index VARIABLE_2: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
- NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus
NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_5 of
FUNCTION_CALL_5: 0.0
********** f = inclusive VARIABLE_0 index
VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = index VARIABLE_2 times
index VARIABLE_2 *: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
- NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the
FUNCTION_CALL_4 NUMBER: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the
NUMBER FUNCTION_CALL_5: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2
NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the
FUNCTION_CALL_4 NUMBER: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_5 of the
FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = NUMBER to the FUNCTION_CALL_5
NUMBER FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
- NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of
NUMBER FUNCTION_CALL_5: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0
NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
- NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = minus NUMBER inclusive
- NUMBER: -0.40546510810816444
- NUMBER VARIABLE_0: -1.0986122886681098
********** f = the FUNCTION_CALL_5 of the VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_5
FUNCTION_CALL_5: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2 times
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 times
VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = set to VARIABLE_0 index VARIABLE_2 times
= VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index
- NUMBER VARIABLE_0 index: 0.0
********** f = minus NUMBER inclusive VARIABLE_0
- NUMBER VARIABLE_0: 0.0
********** f = NUMBER inclusive
NUMBER: -0.40546510810816444
NUMBER VARIABLE_0: -1.0986122886681098
********** f = is set to VARIABLE_0 index VARIABLE_2
= VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive
VARIABLE_0 - NUMBER: -0.40546510810816444
VARIABLE_0 - NUMBER VARIABLE_0: -1.0986122886681098
********** f = VARIABLE_0 index VARIABLE_2 is set to
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is
VARIABLE_0 index VARIABLE_2: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
- NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2 is set to
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0
- NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = to the FUNCTION_CALL_5
FUNCTION_CALL_5: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive
VARIABLE_0 - NUMBER: 0.0
********** f = for VARIABLE_2 in the
for VARIABLE: -0.6931471805599453
for VARIABLE in: -0.6931471805599453
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = inclusive VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2 times
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2: 0.0
********** f = NUMBER inclusive VARIABLE_0 index
NUMBER VARIABLE_0 index: 0.0
********** f = VARIABLE_2 times
VARIABLE_2 *: 0.0
********** f = the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = set to VARIABLE_0 index VARIABLE_2
= VARIABLE_0 index VARIABLE_2: 0.0
********** f = to the FUNCTION_CALL_5 of the
FUNCTION_CALL_5: 0.0
********** f = to the FUNCTION_CALL_5 of
FUNCTION_CALL_5: 0.0
********** f = is set to VARIABLE_0 index VARIABLE_2 times
= VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of the
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = NUMBER inclusive VARIABLE_0
NUMBER VARIABLE_0: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index: 0.0
********** f = of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0
VARIABLE_0 - NUMBER VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2 times
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = the VARIABLE_0 minus NUMBER inclusive
VARIABLE_0 - NUMBER: 0.0
********** f = VARIABLE_0 index VARIABLE_2 is set to VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = to the FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive VARIABLE_0 index VARIABLE_2 is set to
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 of the VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: 0.0
********** f = to the FUNCTION_CALL_5 of VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the
VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = set the value at index VARIABLE_2 in VARIABLE_0 to the value at index VARIABLE_2
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = value at index VARIABLE_2 in VARIABLE_0
index VARIABLE_2: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
********** f = the FUNCTION_CALL_5 of VARIABLE_0
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = VARIABLE_0 minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = value at index VARIABLE_2 in VARIABLE_0 multiplied by VARIABLE_1
index VARIABLE_2 * VARIABLE_1: 0.0
********** f = inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the value at index VARIABLE_2
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = in VARIABLE_0 multiplied by
*: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER
for VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = value at index VARIABLE_2 in VARIABLE_0 multiplied by VARIABLE_1 return VARIABLE_0 
index VARIABLE_2 * VARIABLE_1 return VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to the
VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = of VARIABLE_0 minus NUMBER inclusive
VARIABLE_0 - NUMBER: -0.6931471805599453
VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = multiplied by VARIABLE_1 return VARIABLE_0 
* VARIABLE_1 return VARIABLE_0: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = set the value at index VARIABLE_2 in VARIABLE_0 to the
index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = in VARIABLE_0 multiplied by VARIABLE_1
* VARIABLE_1: 0.0
********** f = VARIABLE_0 multiplied by VARIABLE_1
* VARIABLE_1: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4
for VARIABLE in FUNCTION_CALL_4: 0.0
********** f = set the value at index VARIABLE_2 in VARIABLE_0 to
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
********** f = the value at index VARIABLE_2
VARIABLE_0 index VARIABLE_2: -0.6931471805599453
index VARIABLE_2: -0.6931471805599453
********** f = the value at index VARIABLE_2 in
VARIABLE_0 index VARIABLE_2: -0.6931471805599453
index VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_2 in the FUNCTION_CALL_4
VARIABLE in FUNCTION_CALL_4: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = of VARIABLE_0 minus
VARIABLE_0 -: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to
VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER
VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to
for VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
index VARIABLE_2 = VARIABLE_0: -0.6931471805599453
********** f = to the FUNCTION_CALL_5 of VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the
- NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = the value at index VARIABLE_2 in VARIABLE_0
index VARIABLE_2: 0.0
********** f = the value at index VARIABLE_2 in VARIABLE_0 multiplied by VARIABLE_1
index VARIABLE_2 * VARIABLE_1: 0.0
********** f = of VARIABLE_0 minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = value at index VARIABLE_2
VARIABLE_0 index VARIABLE_2: -0.6931471805599453
index VARIABLE_2: -0.6931471805599453
********** f = value at index VARIABLE_2 in VARIABLE_0 multiplied by
index VARIABLE_2 *: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_0 minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 minus
FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = set the value at index VARIABLE_2 in VARIABLE_0 to the value at index VARIABLE_2 in
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus NUMBER inclusive
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
NUMBER FUNCTION_CALL_5 VARIABLE_0 - NUMBER: -0.6931471805599453
********** f = in VARIABLE_0 multiplied by VARIABLE_1 return VARIABLE_0 
* VARIABLE_1 return VARIABLE_0: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to
- NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = the value at index VARIABLE_2 in VARIABLE_0 multiplied by VARIABLE_1 return VARIABLE_0 
index VARIABLE_2 * VARIABLE_1 return VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = VARIABLE_0 multiplied by VARIABLE_1 return VARIABLE_0 
* VARIABLE_1 return VARIABLE_0: 0.0
********** f = value at index VARIABLE_2 in
index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of
for VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the
NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = of VARIABLE_0 minus NUMBER inclusive set the value at index VARIABLE_2 in VARIABLE_0 to the
VARIABLE_0 - NUMBER VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = of VARIABLE_0 minus NUMBER
VARIABLE_0 - NUMBER: -0.6931471805599453
VARIABLE_0 - NUMBER VARIABLE_0: -0.6931471805599453
********** f = for VARIABLE_2 in the FUNCTION_CALL_4 NUMBER to the
for VARIABLE in FUNCTION_CALL_4 NUMBER: 0.0
********** f = the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5 of VARIABLE_0 minus
FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5 VARIABLE_0 -: 0.0
********** f = the value at index VARIABLE_2 in VARIABLE_0 multiplied by
index VARIABLE_2 *: 0.0
********** f = in the FUNCTION_CALL_4 NUMBER to the FUNCTION_CALL_5
VARIABLE in FUNCTION_CALL_4 NUMBER FUNCTION_CALL_5: 0.0
********** f = to the empty list
EMPTY_LIST: 0.0
********** f = multiply VARIABLE_3 by VARIABLE_1
VARIABLE_3 * VARIABLE_1: 0.0
********** f = loop and return VARIABLE_2 
return VARIABLE_2: -0.6931471805599453
VARIABLE_2 return VARIABLE_2: -0.6931471805599453
********** f = multiply VARIABLE_3 by VARIABLE_1 and
VARIABLE_3 * VARIABLE_1: 0.0
********** f = the loop and return VARIABLE_2 
return VARIABLE_2: 0.0
********** f = called
VARIABLE: 0.0
********** f = to the variable VARIABLE_2
VARIABLE_2: 0.0
********** f = the variable VARIABLE_2
VARIABLE_2: 0.0
********** f = and return VARIABLE_2 
return VARIABLE_2: -0.40546510810816444
VARIABLE_2 return VARIABLE_2: -1.0986122886681098
********** f = equal to the empty list
EMPTY_LIST: 0.0
********** f = VARIABLE_2 and set
VARIABLE_2: 0.0
********** f = multiply VARIABLE_3 by
VARIABLE_3 *: 0.0
********** f = is empty and
EMPTY_LIST: 0.0
********** f = the for loop and return this VARIABLE_2 
return VARIABLE_2: 0.0
********** f = and for each VARIABLE_3 in the
for: 0.0
********** f = loop and return this VARIABLE_2 
return VARIABLE_2: 0.0
********** f = and for each VARIABLE_3
for: 0.0
********** f = is empty and for each
EMPTY_LIST for: 0.0
********** f = empty and
EMPTY_LIST: 0.0
********** f = a VARIABLE_2
VARIABLE_2 =: 0.0
********** f = is empty and for each VARIABLE_3 in the
EMPTY_LIST for: 0.0
********** f = is empty and for each VARIABLE_3 in
EMPTY_LIST for: 0.0
********** f = and FUNCTION_CALL_5 it
FUNCTION_CALL_5: 0.0
********** f = multiply the VARIABLE_3 by the VARIABLE_1
VARIABLE_3 * VARIABLE_1: 0.0
********** f = for loop and return this VARIABLE_2 
return VARIABLE_2: 0.0
********** f = empty and for each VARIABLE_3 in
EMPTY_LIST for: 0.0
********** f = and for each VARIABLE_3 in
for: 0.0
********** f = empty and for each VARIABLE_3
EMPTY_LIST for: 0.0
********** f = empty and for each VARIABLE_3 in the
EMPTY_LIST for: 0.0
********** f = and FUNCTION_CALL_5
FUNCTION_CALL_5: 0.0
********** f = and FUNCTION_CALL_5 it to
FUNCTION_CALL_5: 0.0
********** f = multiply the VARIABLE_3 by the VARIABLE_1 and FUNCTION_CALL_5
FUNCTION_CALL_5 VARIABLE_3 * VARIABLE_1: 0.0
********** f = multiply the VARIABLE_3 by the VARIABLE_1 and FUNCTION_CALL_5 it to
FUNCTION_CALL_5 VARIABLE_3 * VARIABLE_1: 0.0
********** f = multiply the VARIABLE_3 by the VARIABLE_1 and FUNCTION_CALL_5 it
FUNCTION_CALL_5 VARIABLE_3 * VARIABLE_1: 0.0
********** f = empty and for each
EMPTY_LIST for: 0.0
********** f = multiply the VARIABLE_3 by the VARIABLE_1 and
VARIABLE_3 * VARIABLE_1: 0.0
********** f = and return this VARIABLE_2 
return VARIABLE_2: 0.0
********** f = is empty and for each VARIABLE_3
EMPTY_LIST for: 0.0
********** f = FUNCTION_CALL_5 it
FUNCTION_CALL_5: 0.0
********** f = and for each
for: 0.0
********** f = FUNCTION_CALL_5 it to
FUNCTION_CALL_5: 0.0
********** f = equals VARIABLE_0 index VARIABLE_2 times by
= VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_0 VARIABLE_2 plus
VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_0 index VARIABLE_2 times by VARIABLE_1
VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = equals VARIABLE_0 index
= VARIABLE_0 index: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
< FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_2 equal to NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1 close
= VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = equal to NUMBER VARIABLE_2 smaller than
= NUMBER VARIABLE_2 <: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0
index VARIABLE_2 = VARIABLE_0: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = for integer VARIABLE_2 equal to
for VARIABLE_2 =: 0.0
********** f = index VARIABLE_2 times by VARIABLE_1
index VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than
VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1
VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1
= VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than
for VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 index VARIABLE_2
VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: 0.0
********** f = VARIABLE_2 times by VARIABLE_1 close
VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = equal to NUMBER VARIABLE_2
= NUMBER VARIABLE_2: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0 index
index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: 0.0
********** f = index VARIABLE_2 times by
index VARIABLE_2 *: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER VARIABLE_2
for VARIABLE_2 = NUMBER VARIABLE_2: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER
for VARIABLE_2 = NUMBER: 0.0
********** f = index VARIABLE_2 times by VARIABLE_1 close
index VARIABLE_2 * VARIABLE_1: 0.0
********** f = index VARIABLE_2 equals
index VARIABLE_2 =: 0.0
********** f = equals VARIABLE_0 index VARIABLE_2
= VARIABLE_0 index VARIABLE_2: 0.0
********** f = integer VARIABLE_2 equal to NUMBER
VARIABLE_2 = NUMBER: 0.0
********** f = for integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
for VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = VARIABLE_0 index VARIABLE_2 times by VARIABLE_1 close
VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by
VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than
VARIABLE_2 = NUMBER VARIABLE_2 <: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = integer VARIABLE_2 equal to
VARIABLE_2 =: 0.0
********** f = equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4
= NUMBER VARIABLE_2 < FUNCTION_CALL_4: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1 close
VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = for integer VARIABLE_2
for VARIABLE_2: -0.6931471805599453
for: -0.6931471805599453
********** f = equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = index VARIABLE_2 equals VARIABLE_0 index VARIABLE_2 times by VARIABLE_1 close
index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2: 0.0
********** f = VARIABLE_2 times by
VARIABLE_2 *: 0.0
********** f = FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 plus
FUNCTION_CALL_4 VARIABLE_0 VARIABLE_2 +: 0.0
********** f = equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
= NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = VARIABLE_2 times by VARIABLE_1
VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_0 index VARIABLE_2 equals VARIABLE_0 index
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = VARIABLE_0 index VARIABLE_2 times by
VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = integer VARIABLE_2 equal to NUMBER VARIABLE_2 smaller than FUNCTION_CALL_4 VARIABLE_0
VARIABLE_2 = NUMBER VARIABLE_2 < FUNCTION_CALL_4 VARIABLE_0: 0.0
********** f = times by VARIABLE_1 close
* VARIABLE_1: 0.0
********** f = VARIABLE_2 equals VARIABLE_0 index
VARIABLE_2 = VARIABLE_0 index: 0.0
********** f = bracket multiplied by
VARIABLE_2 *: -0.6931471805599453
*: -0.6931471805599453
********** f = open square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = square bracket multiplied by VARIABLE_1
index VARIABLE_2 * VARIABLE_1: 0.0
********** f = bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = VARIABLE_2 equals NUMBER to
VARIABLE: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER VARIABLE_0 open
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER VARIABLE_0
NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER VARIABLE_0 open square bracket VARIABLE_2
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
********** f = square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = bracket multiplied by VARIABLE_1
* VARIABLE_1: -0.6931471805599453
VARIABLE_2 * VARIABLE_1: -0.6931471805599453
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER VARIABLE_0 open square bracket
NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
********** f = square bracket multiplied by
index VARIABLE_2 *: 0.0
********** f = for return VARIABLE_0 
return VARIABLE_0: 0.0
********** f = square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = close square bracket multiplied by VARIABLE_1
VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
********** f = for integer VARIABLE_2 equals NUMBER
for: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = open square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = for integer VARIABLE_2 equals NUMBER to
for VARIABLE: 0.0
********** f = square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close
VARIABLE_0 index VARIABLE_2 = VARIABLE_0: 0.0
********** f = VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket multiplied by
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket multiplied by
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = open square bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index: -0.6931471805599453
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2: -0.6931471805599453
********** f = open square bracket VARIABLE_2
VARIABLE_2: 0.0
********** f = close square bracket multiplied by
VARIABLE_0 index VARIABLE_2 *: 0.0
********** f = close square bracket equals VARIABLE_0 open square bracket VARIABLE_2 close square bracket multiplied by VARIABLE_1
VARIABLE_0 index VARIABLE_2 = VARIABLE_0 index VARIABLE_2 * VARIABLE_1: 0.0
********** f = VARIABLE_0 dot FUNCTION_CALL_5 minus NUMBER VARIABLE_0 open square
NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
FUNCTION_CALL_4 NUMBER VARIABLE_0 . FUNCTION_CALL_5 - NUMBER: -0.6931471805599453
********** f = bracket VARIABLE_2 close square bracket equals VARIABLE_0 open square bracket VARIABLE_2
VARIABLE_0 index VARIABLE_2 =: 0.0
********** f = for integer VARIABLE_2 equals
for: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = less than VARIABLE_2 VARIABLE_0 position
< VARIABLE_2 VARIABLE_0 index: 0.0
********** f = less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position
NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index: 0.0
********** f = less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 is less than
VARIABLE_3 <: 0.0
********** f = VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3 is
VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position
VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = NUMBER while VARIABLE_3
NUMBER while VARIABLE_3: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while
VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = NUMBER while VARIABLE_3 is
NUMBER while VARIABLE_3: 0.0
********** f = less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = is equal to VARIABLE_0 position VARIABLE_3 multiplied by
= VARIABLE_0 index VARIABLE_3 *: 0.0
********** f = NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3
NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by
VARIABLE_3 = VARIABLE_0 index VARIABLE_3 *: 0.0
********** f = the variable VARIABLE_2 equal
VARIABLE_2 =: 0.0
********** f = less than VARIABLE_2 VARIABLE_0 position VARIABLE_3
< VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = position VARIABLE_3 multiplied by
index VARIABLE_3 *: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0
< VARIABLE_2 VARIABLE_0: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = VARIABLE_3 multiplied by VARIABLE_1 
VARIABLE_3 * VARIABLE_1: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_3 is less than VARIABLE_2
NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
index VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = is equal to VARIABLE_0 position VARIABLE_3
= VARIABLE_0 index VARIABLE_3: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 *: 0.0
********** f = position VARIABLE_3 is equal to VARIABLE_0 position
index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of
VARIABLE_2 = FUNCTION_CALL_5: 0.0
********** f = let VARIABLE_3 equals
VARIABLE_3 =: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of
VARIABLE_2 = FUNCTION_CALL_5: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = and let VARIABLE_3 equals NUMBER while
VARIABLE_3 = NUMBER while: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position
VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by
VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 *: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals
VARIABLE_0 VARIABLE_3 =: 0.0
********** f = NUMBER while VARIABLE_3 is less than
NUMBER while VARIABLE_3 <: 0.0
********** f = position VARIABLE_3 is equal to VARIABLE_0
index VARIABLE_3 = VARIABLE_0: 0.0
********** f = NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER
VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = less than VARIABLE_2
< VARIABLE_2: 0.0
********** f = position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by
index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 *: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position
VARIABLE_3 < VARIABLE_2 VARIABLE_0 index: 0.0
********** f = and let VARIABLE_3 equals
VARIABLE_3 =: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER
VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = is equal to VARIABLE_0 position VARIABLE_3 multiplied by VARIABLE_1 
= VARIABLE_0 index VARIABLE_3 * VARIABLE_1: 0.0
********** f = position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by VARIABLE_1 
index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1: 0.0
********** f = while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position
while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index: 0.0
********** f = is less than VARIABLE_2
< VARIABLE_2: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while
VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
while VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = while VARIABLE_3
while VARIABLE_3: 0.0
********** f = is equal to VARIABLE_0 position
= VARIABLE_0 index: 0.0
********** f = position VARIABLE_3 multiplied by VARIABLE_1 
index VARIABLE_3 * VARIABLE_1: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = variable VARIABLE_2 equal the
VARIABLE_2 =: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals
VARIABLE_0 VARIABLE_3 =: 0.0
********** f = VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = VARIABLE_3 multiplied by
VARIABLE_3 *: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index: 0.0
********** f = and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = let VARIABLE_3 equals NUMBER
VARIABLE_3 = NUMBER: 0.0
********** f = VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3
< VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = while VARIABLE_3 is less than VARIABLE_2
while VARIABLE_3 < VARIABLE_2: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = and let VARIABLE_3 equals NUMBER
VARIABLE_3 = NUMBER: 0.0
********** f = let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3
while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER: 0.0
********** f = the variable VARIABLE_2 equal the
VARIABLE_2 =: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 =: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0 position
< VARIABLE_2 VARIABLE_0 index: 0.0
********** f = let VARIABLE_3 equals NUMBER while
VARIABLE_3 = NUMBER while: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 position
VARIABLE_3 = VARIABLE_0 index: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = multiplied by VARIABLE_1 
* VARIABLE_1: 0.0
********** f = while VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0
while VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = less than VARIABLE_2 VARIABLE_0
< VARIABLE_2 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and
FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while: 0.0
********** f = the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2 VARIABLE_0
VARIABLE_3 < VARIABLE_2 VARIABLE_0: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 =: 0.0
********** f = VARIABLE_2 VARIABLE_0 position VARIABLE_3
VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0: 0.0
********** f = of VARIABLE_0 and
VARIABLE_0: 0.0
********** f = the variable VARIABLE_2 equal the FUNCTION_CALL_5
VARIABLE_2 = FUNCTION_CALL_5: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than
VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 <: 0.0
********** f = while VARIABLE_3 is less than
while VARIABLE_3 <: 0.0
********** f = VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by VARIABLE_1 
VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1: 0.0
********** f = while VARIABLE_3 is
while VARIABLE_3: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3
VARIABLE_3 < VARIABLE_2 VARIABLE_0 index VARIABLE_3: 0.0
********** f = is less than VARIABLE_2 VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3
< VARIABLE_2 VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 =: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5
VARIABLE_2 = FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 VARIABLE_0 position
VARIABLE_2 VARIABLE_0 index: 0.0
********** f = VARIABLE_0 position VARIABLE_3 is equal to VARIABLE_0 position VARIABLE_3 multiplied by VARIABLE_1 
VARIABLE_0 index VARIABLE_3 = VARIABLE_0 index VARIABLE_3 * VARIABLE_1: 0.0
********** f = VARIABLE_3 is less than VARIABLE_2
VARIABLE_3 < VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is less than VARIABLE_2
FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3 < VARIABLE_2: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals NUMBER while VARIABLE_3 is
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 = NUMBER while VARIABLE_3: 0.0
********** f = variable VARIABLE_2 equal the FUNCTION_CALL_5 of VARIABLE_0 and let VARIABLE_3 equals
VARIABLE_2 = FUNCTION_CALL_5 VARIABLE_0 VARIABLE_3 =: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_2 is set to empty list
VARIABLE_2 = EMPTY_LIST: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = set to empty list for each VARIABLE_3
= EMPTY_LIST for: 0.0
********** f = than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = set to empty list
= EMPTY_LIST: 0.0
********** f = VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_2 is set to empty list for each VARIABLE_3
VARIABLE_2 = EMPTY_LIST for: 0.0
********** f = VARIABLE_3 is greater than the VARIABLE_1
VARIABLE_3 > VARIABLE_1: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 on
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = empty list for each VARIABLE_3 in the
EMPTY_LIST for VARIABLE: 0.0
********** f = if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = greater than the VARIABLE_1
> VARIABLE_1: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3
if VARIABLE_3: 0.0
********** f = set to empty list for each VARIABLE_3 in the
= EMPTY_LIST for VARIABLE: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = is set to empty list for each VARIABLE_3 in
= EMPTY_LIST for VARIABLE: 0.0
********** f = than the VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_2 is set to empty list for each
VARIABLE_2 = EMPTY_LIST for: 0.0
********** f = if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = if VARIABLE_3 is greater than
if VARIABLE_3 >: 0.0
********** f = is set to empty list for each VARIABLE_3 in the
= EMPTY_LIST for VARIABLE: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is
VARIABLE_0 if VARIABLE_3: 0.0
********** f = if VARIABLE_3 is greater than the VARIABLE_1
if VARIABLE_3 > VARIABLE_1: 0.0
********** f = if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2 end for
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_1: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3 is
if VARIABLE_3: 0.0
********** f = is set to empty list for each
= EMPTY_LIST for: 0.0
********** f = greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is
VARIABLE_0 if VARIABLE_3: 0.0
********** f = empty list for each VARIABLE_3 in
EMPTY_LIST for VARIABLE: 0.0
********** f = set to empty list for each VARIABLE_3 in
= EMPTY_LIST for VARIABLE: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is greater than
VARIABLE_3 >: 0.0
********** f = VARIABLE_0 if
VARIABLE_0 if: 0.0
********** f = if VARIABLE_3 is greater
if VARIABLE_3 >: 0.0
********** f = is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = the VARIABLE_0 if VARIABLE_3
VARIABLE_0 if VARIABLE_3: 0.0
********** f = for and return VARIABLE_2 
return VARIABLE_2: 0.0
********** f = is set to empty list for each VARIABLE_3
= EMPTY_LIST for: 0.0
********** f = the VARIABLE_0 if
VARIABLE_0 if: 0.0
********** f = VARIABLE_2 is set to empty list for each VARIABLE_3 in
VARIABLE_2 = EMPTY_LIST for VARIABLE: 0.0
********** f = the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 on to
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = empty list for each VARIABLE_3
EMPTY_LIST for: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3
VARIABLE_0 if VARIABLE_3: 0.0
********** f = is set to empty list
= EMPTY_LIST: 0.0
********** f = set to empty list for each
= EMPTY_LIST for: 0.0
********** f = is greater than the VARIABLE_1
> VARIABLE_1: 0.0
********** f = empty list for each
EMPTY_LIST for: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 is greater
VARIABLE_3 >: -0.2876820724517809
>: -1.3862943611198906
********** f = greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to VARIABLE_2
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_2: 0.0
********** f = VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_2 is set to empty list for each VARIABLE_3 in the
VARIABLE_2 = EMPTY_LIST for VARIABLE: 0.0
********** f = the VARIABLE_0 if VARIABLE_3 is greater than the VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_1: 0.0
********** f = greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 on to
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = a new empty list VARIABLE_0 for each integer VARIABLE_3 in
VARIABLE_0 = EMPTY_LIST for: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = for each integer VARIABLE_3 in
for: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = a new empty list VARIABLE_0 for each integer VARIABLE_3
VARIABLE_0 = EMPTY_LIST for: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = for each integer
for: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 if VARIABLE_3
VARIABLE_1 if VARIABLE_3: 0.0
********** f = initialize a new empty list VARIABLE_0 for each integer VARIABLE_3
VARIABLE_0 = EMPTY_LIST for VARIABLE: 0.0
********** f = greater than VARIABLE_2 FUNCTION_CALL_5
> VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_5
VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = than VARIABLE_2
VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = in VARIABLE_1 if
VARIABLE_1 if: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end for
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_2
if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2
VARIABLE_1 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = a new empty list VARIABLE_0 for each integer
VARIABLE_0 = EMPTY_LIST for: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is
VARIABLE_1 if VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if
VARIABLE_1 if: 0.0
********** f = a new empty list
= EMPTY_LIST: 0.0
********** f = a new
=: 0.0
********** f = for each integer VARIABLE_3
for: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end for
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2
VARIABLE_1 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_1 if
VARIABLE_1 if: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = new empty list
EMPTY_LIST: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is
VARIABLE_1 if VARIABLE_3: 0.0
********** f = greater than VARIABLE_2
> VARIABLE_2: 0.0
********** f = VARIABLE_3 to VARIABLE_0
VARIABLE_3 VARIABLE_0: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than
VARIABLE_1 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3
VARIABLE_1 if VARIABLE_3: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end for loop
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = initialize a new empty list VARIABLE_0 for each integer
VARIABLE_0 = EMPTY_LIST for VARIABLE: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end for loop
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = is greater than VARIABLE_2
> VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0 end for
in VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = is greater than VARIABLE_2 FUNCTION_CALL_5
> VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 to
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 to
VARIABLE_3: 0.0
********** f = than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = a new empty list VARIABLE_0
VARIABLE_0 = EMPTY_LIST: 0.0
********** f = than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_1 if VARIABLE_3 is
VARIABLE_1 if VARIABLE_3: 0.0
********** f = in VARIABLE_1 if VARIABLE_3
VARIABLE_1 if VARIABLE_3: 0.0
********** f = than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 in VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = initialize a new empty list VARIABLE_0 for each integer VARIABLE_3 in
VARIABLE_0 = EMPTY_LIST for VARIABLE: 0.0
********** f = greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2
VARIABLE_1 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_0
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 VARIABLE_0: 0.0
********** f = VARIABLE_1 if VARIABLE_3 is greater than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_1 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_2
VARIABLE_3 > VARIABLE_2: 0.0
********** f = empty list and
EMPTY_LIST: 0.0
********** f = to the front of VARIABLE_3
VARIABLE_3: 0.0
********** f = a variable named VARIABLE_3 and set this equal
VARIABLE_3 =: 0.0
********** f = end if end the
in: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of VARIABLE_3
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3: 0.0
********** f = named VARIABLE_3 and set this equal
VARIABLE_3: 0.0
********** f = the empty list and
EMPTY_LIST: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = empty list and then for each
EMPTY_LIST for: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = and set this equal to the empty list and
EMPTY_LIST: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = this equal to the empty list
EMPTY_LIST: 0.0
********** f = the empty list and then
EMPTY_LIST: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of VARIABLE_3
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = end the loop and return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = equal to the empty list and then for each
EMPTY_LIST for: 0.0
********** f = set this equal to the empty list
EMPTY_LIST: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = a variable named VARIABLE_3 and set this equal to
VARIABLE_3 =: 0.0
********** f = named VARIABLE_3 and
VARIABLE_3: 0.0
********** f = a variable named VARIABLE_3 and set this equal to the empty list
VARIABLE_3 = EMPTY_LIST: 0.0
********** f = this equal to the empty list and
EMPTY_LIST: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = end if end the loop
in: 0.0
********** f = a variable named VARIABLE_3 and set this
VARIABLE_3 =: 0.0
********** f = a variable named VARIABLE_3 and set this equal to the empty list and
VARIABLE_3 = EMPTY_LIST: 0.0
********** f = named VARIABLE_3 and set this equal to
VARIABLE_3: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of VARIABLE_3
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3: 0.0
********** f = than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of VARIABLE_3
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2 VARIABLE_3: 0.0
********** f = then for each
for: 0.0
********** f = front of VARIABLE_3
VARIABLE_3: 0.0
********** f = the front of VARIABLE_3
VARIABLE_3: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = equal to the empty list and
EMPTY_LIST: 0.0
********** f = and set this equal to the empty list
EMPTY_LIST: 0.0
********** f = VARIABLE_2 of VARIABLE_0 if that VARIABLE_2
VARIABLE_0 if VARIABLE_2: 0.0
********** f = of VARIABLE_0 if that
VARIABLE_0 if: 0.0
********** f = a variable named VARIABLE_3 and set this equal to the empty list and then
VARIABLE_3 = EMPTY_LIST: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = and set this equal to the empty list and then for each
EMPTY_LIST for: 0.0
********** f = a variable named VARIABLE_3 and set
VARIABLE_3 =: 0.0
********** f = named VARIABLE_3 and set this equal to the
VARIABLE_3: 0.0
********** f = to the empty list and then
EMPTY_LIST: 0.0
********** f = set this equal to the empty list and
EMPTY_LIST: 0.0
********** f = named VARIABLE_3 and set
VARIABLE_3: 0.0
********** f = VARIABLE_2 of VARIABLE_0 if that VARIABLE_2 is greater than
VARIABLE_0 if VARIABLE_2 >: 0.0
********** f = to the empty list and
EMPTY_LIST: 0.0
********** f = named VARIABLE_3 and set this
VARIABLE_3: 0.0
********** f = this equal to the empty list and then
EMPTY_LIST: 0.0
********** f = equal to the empty list and then
EMPTY_LIST: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = to the empty list and then for each
EMPTY_LIST for: 0.0
********** f = and then for each
for: 0.0
********** f = empty list and then
EMPTY_LIST: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = if end the loop and return VARIABLE_3 
return VARIABLE_3: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = this equal to the empty list and then for each
EMPTY_LIST for: 0.0
********** f = set this equal to the empty list and then for each
EMPTY_LIST for: 0.0
********** f = a variable named VARIABLE_3 and set this equal to the
VARIABLE_3 =: 0.0
********** f = VARIABLE_2 of VARIABLE_0 if that VARIABLE_2 is greater
VARIABLE_0 if VARIABLE_2 >: 0.0
********** f = is greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front of
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = set this equal to the empty list and then
EMPTY_LIST: 0.0
********** f = greater than the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to the front
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = VARIABLE_2 of VARIABLE_0 if that VARIABLE_2 is
VARIABLE_0 if VARIABLE_2: 0.0
********** f = the empty list and then for each
EMPTY_LIST for: 0.0
********** f = a variable named VARIABLE_3 and
VARIABLE_3 =: 0.0
********** f = of VARIABLE_0 if
VARIABLE_0 if: 0.0
********** f = the VARIABLE_1 then FUNCTION_CALL_5 the VARIABLE_2 on to
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_2: 0.0
********** f = and set this equal to the empty list and then
EMPTY_LIST: 0.0
********** f = let VARIABLE_2 be an
VARIABLE_2: 0.0
********** f = be an empty list for each VARIABLE_3 in
EMPTY_LIST for VARIABLE: 0.0
********** f = end if end the for loop and
in: 0.0
********** f = an empty list for each VARIABLE_3 in
EMPTY_LIST for VARIABLE: 0.0
********** f = if the VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_2 end if end the for
in: 0.0
********** f = to VARIABLE_2 end if
=: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_5
VARIABLE_1 FUNCTION_CALL_5: -0.40546510810816444
FUNCTION_CALL_5: -1.0986122886681098
********** f = if end
in: 0.0
********** f = if the VARIABLE_3 is
if: 0.0
********** f = if end the for loop and
in: 0.0
********** f = VARIABLE_0 if the VARIABLE_3 is
VARIABLE_0 if: 0.0
********** f = is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = be an empty list for each VARIABLE_3
EMPTY_LIST for: 0.0
********** f = VARIABLE_2 be an
VARIABLE_2: 0.0
********** f = if end the for loop
in: 0.0
********** f = end the for loop and
in: 0.0
********** f = VARIABLE_2 end if end the for loop
in: 0.0
********** f = to VARIABLE_2 end
=: 0.0
********** f = the VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = let VARIABLE_2 be
VARIABLE_2: 0.0
********** f = greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = end if end the for
in: 0.0
********** f = VARIABLE_2 end if end the
in: 0.0
********** f = if end the for
in: 0.0
********** f = VARIABLE_2 end if end
in: 0.0
********** f = the VARIABLE_1 FUNCTION_CALL_5
VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = if the VARIABLE_3
if: 0.0
********** f = the for loop and return VARIABLE_2 
VARIABLE_2 return VARIABLE_2: 0.0
********** f = the VARIABLE_3 is greater
>: 0.0
********** f = for loop and return VARIABLE_2 
VARIABLE_2 return VARIABLE_2: 0.0
********** f = end if end the for loop
in: 0.0
********** f = VARIABLE_0 if the VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_2 end if end the for loop and
in: 0.0
********** f = an empty list for each VARIABLE_3
EMPTY_LIST for: 0.0
********** f = be an empty list for each
EMPTY_LIST for: 0.0
********** f = if end the
in: 0.0
********** f = VARIABLE_0 if the
VARIABLE_0 if: 0.0
********** f = VARIABLE_3 is greater than the VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if the VARIABLE_3
VARIABLE_0 if: 0.0
********** f = an empty list for each
EMPTY_LIST for: 0.0
********** f = VARIABLE_2 be
VARIABLE_2: 0.0
********** f = VARIABLE_1 end if
in: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is
VARIABLE_0 if VARIABLE_3: -0.6931471805599453
in VARIABLE_0 if VARIABLE_3: -0.6931471805599453
********** f = an empty list for each item VARIABLE_3
EMPTY_LIST for VARIABLE: 0.0
********** f = to VARIABLE_1 end if end for
in: 0.0
********** f = bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 end if end
in: 0.0
********** f = be an empty list for each item
EMPTY_LIST for VARIABLE: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if end for
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is bigger than
>: 0.0
********** f = bigger than VARIABLE_2
> VARIABLE_2: 0.0
********** f = VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = if end for return VARIABLE_1 
VARIABLE_1 return VARIABLE_1: 0.0
********** f = let VARIABLE_1
VARIABLE_1 =: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_3 to VARIABLE_1
VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3
VARIABLE_0 if VARIABLE_3: -0.6931471805599453
in VARIABLE_0 if VARIABLE_3: -0.6931471805599453
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = let VARIABLE_1 be an empty list for each item
VARIABLE_1 = EMPTY_LIST for VARIABLE: 0.0
********** f = is bigger than VARIABLE_2 FUNCTION_CALL_5
> VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = in VARIABLE_0 if VARIABLE_3
VARIABLE_0 if VARIABLE_3: -0.6931471805599453
in VARIABLE_0 if VARIABLE_3: -0.6931471805599453
********** f = if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = for each item
for VARIABLE: 0.0
********** f = if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is bigger than VARIABLE_2
> VARIABLE_2: 0.0
********** f = be an empty list for each item VARIABLE_3
EMPTY_LIST for VARIABLE: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = an empty list for each item
EMPTY_LIST for VARIABLE: 0.0
********** f = in VARIABLE_0 if
VARIABLE_0 if: -0.6931471805599453
in VARIABLE_0 if: -0.6931471805599453
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = be an empty list for each item VARIABLE_3 in
EMPTY_LIST for VARIABLE: 0.0
********** f = to VARIABLE_1 end if
in: 0.0
********** f = VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 be
VARIABLE_1: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if
VARIABLE_0 if: -0.6931471805599453
in VARIABLE_0 if: -0.6931471805599453
********** f = VARIABLE_3 is bigger
VARIABLE_3 >: 0.0
********** f = let VARIABLE_1 be
VARIABLE_1 =: 0.0
********** f = if VARIABLE_3 is bigger than VARIABLE_2
if VARIABLE_3 > VARIABLE_2: 0.0
********** f = bigger than VARIABLE_2 FUNCTION_CALL_5
> VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = let VARIABLE_1 be an empty list for each
VARIABLE_1 = EMPTY_LIST for: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = let VARIABLE_1 be an empty list for each item VARIABLE_3
VARIABLE_1 = EMPTY_LIST for VARIABLE: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = let VARIABLE_1 be an empty list
VARIABLE_1 = EMPTY_LIST: 0.0
********** f = to VARIABLE_1 end
in: 0.0
********** f = an empty list for each item VARIABLE_3 in
EMPTY_LIST for VARIABLE: 0.0
********** f = for each item VARIABLE_3 in
for VARIABLE: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = let VARIABLE_1 be an empty list for each item VARIABLE_3 in
VARIABLE_1 = EMPTY_LIST for VARIABLE: 0.0
********** f = to VARIABLE_1 end if end
in: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = is bigger
>: 0.0
********** f = if VARIABLE_3 is bigger than
if VARIABLE_3 >: 0.0
********** f = VARIABLE_1 end if end for
in: 0.0
********** f = if VARIABLE_3 is bigger
if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 is bigger than VARIABLE_2
VARIABLE_3 > VARIABLE_2: 0.0
********** f = item VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1 end if end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 is bigger than
VARIABLE_3 >: 0.0
********** f = is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = for each item VARIABLE_3
for VARIABLE: 0.0
********** f = VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is
VARIABLE_0 if VARIABLE_3: -0.6931471805599453
in VARIABLE_0 if VARIABLE_3: -0.6931471805599453
********** f = end for return VARIABLE_1 
VARIABLE_1 return VARIABLE_1: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is bigger than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is bigger than VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3 to VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = greater than VARIABLE_2 VARIABLE_1
> VARIABLE_2: 0.0
********** f = if VARIABLE_3 greater than VARIABLE_2
if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end for
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than
VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 greater than
VARIABLE_3 >: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
FUNCTION_CALL_5 VARIABLE_3: -0.6931471805599453
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: -0.6931471805599453
********** f = VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end for
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end
VARIABLE in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = than VARIABLE_2 VARIABLE_1
VARIABLE_2: 0.0
********** f = if VARIABLE_3 greater than
if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 greater than VARIABLE_2 VARIABLE_1
VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 greater than VARIABLE_2
VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3 end if end for
in VARIABLE_0 if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_3 greater
VARIABLE_3 >: 0.0
********** f = greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
> VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = if VARIABLE_3 greater
if VARIABLE_3 >: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2
VARIABLE_0 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_2: 0.0
********** f = than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_2 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1 FUNCTION_CALL_5
if VARIABLE_3 > VARIABLE_2 FUNCTION_CALL_5: 0.0
********** f = if VARIABLE_3 greater than VARIABLE_2 VARIABLE_1
if VARIABLE_3 > VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is greater
in VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = an empty list called
EMPTY_LIST: 0.0
********** f = is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = than VARIABLE_1 FUNCTION_CALL_5
VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1
VARIABLE_0 if VARIABLE_3 > VARIABLE_1: 0.0
********** f = VARIABLE_2 
VARIABLE_2: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is greater
in VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is greater than
in VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_1
VARIABLE_3 > VARIABLE_1: 0.0
********** f = called VARIABLE_2
VARIABLE_2: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_1
if VARIABLE_3 > VARIABLE_1: 0.0
********** f = greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
> VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is greater than
in VARIABLE_0 if VARIABLE_3 >: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = than VARIABLE_1
VARIABLE_1: 0.0
********** f = VARIABLE_3 in VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
in VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = VARIABLE_0 if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3
VARIABLE_0 if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5 VARIABLE_3: 0.0
********** f = is greater than VARIABLE_1 FUNCTION_CALL_5
> VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = greater than VARIABLE_1 FUNCTION_CALL_5
> VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = is greater than VARIABLE_1
> VARIABLE_1: 0.0
********** f = greater than VARIABLE_1
> VARIABLE_1: 0.0
********** f = if VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5
if VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5: 0.0
********** f = VARIABLE_3 is greater than VARIABLE_1 FUNCTION_CALL_5
VARIABLE_3 > VARIABLE_1 FUNCTION_CALL_5: 0.0
