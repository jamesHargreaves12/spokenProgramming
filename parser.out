Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> <empty>
Rule 3     statement -> expression END_STMT
Rule 4     statement -> ID ASSIGN expression END_STMT
Rule 5     statement -> RETURN expression END_STMT
Rule 6     expression -> expression MULTIPLY expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> value
Rule 11    value -> INT
Rule 12    value -> FLOAT
Rule 13    value -> ID

Terminals, with rules where they appear

ASSIGN               : 4
DIVIDE               : 7
END_STMT             : 3 4 5
FLOAT                : 12
ID                   : 4 13
INT                  : 11
MINUS                : 9
MULTIPLY             : 6
NEWLINE              : 
PLUS                 : 8
RETURN               : 5
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 6 6 7 7 8 8 9 9
statement            : 1
statements           : 1 0
value                : 10

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> .

    ID              reduce using rule 2 (statements -> .)
    RETURN          reduce using rule 2 (statements -> .)
    INT             reduce using rule 2 (statements -> .)
    FLOAT           reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)

    statements                     shift and go to state 1

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . expression END_STMT
    (4) statement -> . ID ASSIGN expression END_STMT
    (5) statement -> . RETURN expression END_STMT
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    ID              shift and go to state 4
    RETURN          shift and go to state 5
    INT             shift and go to state 7
    FLOAT           shift and go to state 8

    statement                      shift and go to state 2
    expression                     shift and go to state 3
    value                          shift and go to state 6

state 2

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    FLOAT           reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 3

    (3) statement -> expression . END_STMT
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

    END_STMT        shift and go to state 9
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13


state 4

    (4) statement -> ID . ASSIGN expression END_STMT
    (13) value -> ID .

    ASSIGN          shift and go to state 14
    END_STMT        reduce using rule 13 (value -> ID .)
    MULTIPLY        reduce using rule 13 (value -> ID .)
    DIVIDE          reduce using rule 13 (value -> ID .)
    PLUS            reduce using rule 13 (value -> ID .)
    MINUS           reduce using rule 13 (value -> ID .)


state 5

    (5) statement -> RETURN . expression END_STMT
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 15
    value                          shift and go to state 6

state 6

    (10) expression -> value .

    END_STMT        reduce using rule 10 (expression -> value .)
    MULTIPLY        reduce using rule 10 (expression -> value .)
    DIVIDE          reduce using rule 10 (expression -> value .)
    PLUS            reduce using rule 10 (expression -> value .)
    MINUS           reduce using rule 10 (expression -> value .)


state 7

    (11) value -> INT .

    END_STMT        reduce using rule 11 (value -> INT .)
    MULTIPLY        reduce using rule 11 (value -> INT .)
    DIVIDE          reduce using rule 11 (value -> INT .)
    PLUS            reduce using rule 11 (value -> INT .)
    MINUS           reduce using rule 11 (value -> INT .)


state 8

    (12) value -> FLOAT .

    END_STMT        reduce using rule 12 (value -> FLOAT .)
    MULTIPLY        reduce using rule 12 (value -> FLOAT .)
    DIVIDE          reduce using rule 12 (value -> FLOAT .)
    PLUS            reduce using rule 12 (value -> FLOAT .)
    MINUS           reduce using rule 12 (value -> FLOAT .)


state 9

    (3) statement -> expression END_STMT .

    ID              reduce using rule 3 (statement -> expression END_STMT .)
    RETURN          reduce using rule 3 (statement -> expression END_STMT .)
    INT             reduce using rule 3 (statement -> expression END_STMT .)
    FLOAT           reduce using rule 3 (statement -> expression END_STMT .)
    $end            reduce using rule 3 (statement -> expression END_STMT .)


state 10

    (6) expression -> expression MULTIPLY . expression
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 17
    value                          shift and go to state 6

state 11

    (7) expression -> expression DIVIDE . expression
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 18
    value                          shift and go to state 6

state 12

    (8) expression -> expression PLUS . expression
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 19
    value                          shift and go to state 6

state 13

    (9) expression -> expression MINUS . expression
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 20
    value                          shift and go to state 6

state 14

    (4) statement -> ID ASSIGN . expression END_STMT
    (6) expression -> . expression MULTIPLY expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . value
    (11) value -> . INT
    (12) value -> . FLOAT
    (13) value -> . ID

    INT             shift and go to state 7
    FLOAT           shift and go to state 8
    ID              shift and go to state 16

    expression                     shift and go to state 21
    value                          shift and go to state 6

state 15

    (5) statement -> RETURN expression . END_STMT
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

    END_STMT        shift and go to state 22
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13


state 16

    (13) value -> ID .

    END_STMT        reduce using rule 13 (value -> ID .)
    MULTIPLY        reduce using rule 13 (value -> ID .)
    DIVIDE          reduce using rule 13 (value -> ID .)
    PLUS            reduce using rule 13 (value -> ID .)
    MINUS           reduce using rule 13 (value -> ID .)


state 17

    (6) expression -> expression MULTIPLY expression .
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    END_STMT        reduce using rule 6 (expression -> expression MULTIPLY expression .)
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13

  ! MULTIPLY        [ reduce using rule 6 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ reduce using rule 6 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression MULTIPLY expression .) ]


state 18

    (7) expression -> expression DIVIDE expression .
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    END_STMT        reduce using rule 7 (expression -> expression DIVIDE expression .)
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13

  ! MULTIPLY        [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression DIVIDE expression .) ]


state 19

    (8) expression -> expression PLUS expression .
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    END_STMT        reduce using rule 8 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13

  ! MULTIPLY        [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression PLUS expression .) ]


state 20

    (9) expression -> expression MINUS expression .
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    END_STMT        reduce using rule 9 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13

  ! MULTIPLY        [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression MINUS expression .) ]


state 21

    (4) statement -> ID ASSIGN expression . END_STMT
    (6) expression -> expression . MULTIPLY expression
    (7) expression -> expression . DIVIDE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression

    END_STMT        shift and go to state 23
    MULTIPLY        shift and go to state 10
    DIVIDE          shift and go to state 11
    PLUS            shift and go to state 12
    MINUS           shift and go to state 13


state 22

    (5) statement -> RETURN expression END_STMT .

    ID              reduce using rule 5 (statement -> RETURN expression END_STMT .)
    RETURN          reduce using rule 5 (statement -> RETURN expression END_STMT .)
    INT             reduce using rule 5 (statement -> RETURN expression END_STMT .)
    FLOAT           reduce using rule 5 (statement -> RETURN expression END_STMT .)
    $end            reduce using rule 5 (statement -> RETURN expression END_STMT .)


state 23

    (4) statement -> ID ASSIGN expression END_STMT .

    ID              reduce using rule 4 (statement -> ID ASSIGN expression END_STMT .)
    RETURN          reduce using rule 4 (statement -> ID ASSIGN expression END_STMT .)
    INT             reduce using rule 4 (statement -> ID ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 4 (statement -> ID ASSIGN expression END_STMT .)
    $end            reduce using rule 4 (statement -> ID ASSIGN expression END_STMT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 17 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 17 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 18 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 20 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
