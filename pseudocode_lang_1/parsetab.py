
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AND AND_ASSIGN ASSIGN CLOSE_BRACKET CLOSE_CURL CLOSE_SQUARE COLON COMMA CONTINUE DIVIDE DIVIDE_ASSIGN DOT ELSE ELSE_IF END_STMT EQUAL_EQUAL FALSE FLOAT FOR GTEQ ID IF IN INT LESS_THAN LTEQ MINUS MINUS_ASSIGN MINUS_MINUS MORE_THAN MULTIPLY MULT_ASSIGN NOT_EQUAL OPEN_BRACKET OPEN_CURL OPEN_SQUARE OR PERCENT PLUS PLUS_PLUS RETURN STRING_CONST TRUE WHILE\n    statements : statements statement\n    statements :\n    \n    statement : expression END_STMT\n              | return_state END_STMT\n              | if_state\n              | if_else_state\n              | while_state\n              | for_state\n              | CONTINUE END_STMT\n    \n    statement : expression ASSIGN expression END_STMT\n              | expression ADD_ASSIGN expression END_STMT\n              | expression MINUS_ASSIGN expression END_STMT\n              | expression DIVIDE_ASSIGN expression END_STMT\n              | expression MULT_ASSIGN expression END_STMT\n              | expression AND_ASSIGN expression END_STMT\n    \n    return_state : RETURN expression\n    \n    for_state : FOR ID IN expression block\n    \n    for_state : FOR statement statement statement block\n    \n    while_state : WHILE expression block\n    \n    if_state : IF expression block\n    \n    if_else_state : IF expression block else_state\n    \n    else_state : ELSE_IF expression block else_state\n    \n    else_state : ELSE block\n    \n    else_state : ELSE_IF expression block\n    \n    block : OPEN_CURL statements CLOSE_CURL\n    \n    function_call : ID OPEN_BRACKET arg_list CLOSE_BRACKET\n    \n    function_call : ID OPEN_BRACKET CLOSE_BRACKET\n    arg_list : expression COMMA arg_list\n    \n    arg_list : expression\n    \n    expression  : expression MULTIPLY expression\n                | expression DIVIDE expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | expression GTEQ expression\n                | expression LTEQ expression\n                | expression LESS_THAN expression\n                | expression MORE_THAN expression\n                | expression EQUAL_EQUAL expression\n                | expression NOT_EQUAL expression\n                | expression AND expression\n                | expression OR expression\n                | expression PERCENT expression\n    \n    expression : value\n\n    \n    expression : expression DOT function_call\n    \n    expression : expression OPEN_SQUARE expression CLOSE_SQUARE\n    \n    expression : PLUS_PLUS expression\n                | MINUS_MINUS expression\n                | expression PLUS_PLUS\n                | expression MINUS_MINUS\n                | MINUS expression\n    \n    expression : expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE\n    \n    value : OPEN_BRACKET expression CLOSE_BRACKET\n    \n    value  : INT\n           | FLOAT\n           | ID\n           | function_call\n           | STRING_CONST\n           | TRUE\n           | FALSE\n           | empty_list\n    \n    empty_list : OPEN_SQUARE CLOSE_SQUARE\n    \n    store : ID\n    '
    
_lr_action_items = {'CONTINUE':([0,1,2,5,6,7,8,19,28,52,53,62,87,88,89,91,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-2,9,-1,-5,-6,-7,-8,9,-3,-4,-9,9,-20,-2,-19,9,-10,-11,-12,-13,-14,-15,-21,9,-23,-25,-17,-18,-24,-22,]),'PLUS_PLUS':([0,1,2,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,119,120,121,],[-2,14,-1,50,-5,-6,-7,-8,14,-43,-56,14,14,14,14,14,14,-55,14,-53,-54,-57,-58,-59,-60,-3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-48,-49,-4,-9,50,-61,50,50,50,50,50,-55,14,14,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-44,50,-20,-2,-19,14,14,-27,50,-52,-10,-11,-12,-13,-14,-15,-45,14,-21,14,14,50,-26,14,50,50,-23,-25,-17,-18,-51,-24,-22,]),'MINUS_MINUS':([0,1,2,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,119,120,121,],[-2,15,-1,51,-5,-6,-7,-8,15,-43,-56,15,15,15,15,15,15,-55,15,-53,-54,-57,-58,-59,-60,-3,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-48,-49,-4,-9,51,-61,51,51,51,51,51,-55,15,15,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-44,51,-20,-2,-19,15,15,-27,51,-52,-10,-11,-12,-13,-14,-15,-45,15,-21,15,15,51,-26,15,51,51,-23,-25,-17,-18,-51,-24,-22,]),'MINUS':([0,1,2,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,119,120,121,],[-2,10,-1,38,-5,-6,-7,-8,10,-43,-56,10,10,10,10,10,10,-55,10,-53,-54,-57,-58,-59,-60,-3,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-48,-49,-4,-9,38,-61,38,38,38,38,38,-55,10,10,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-44,38,-20,-2,-19,10,10,-27,38,-52,-10,-11,-12,-13,-14,-15,-45,10,-21,10,10,38,-26,10,38,38,-23,-25,-17,-18,-51,-24,-22,]),'RETURN':([0,1,2,5,6,7,8,19,28,52,53,62,87,88,89,91,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-2,16,-1,-5,-6,-7,-8,16,-3,-4,-9,16,-20,-2,-19,16,-10,-11,-12,-13,-14,-15,-21,16,-23,-25,-17,-18,-24,-22,]),'IF':([0,1,2,5,6,7,8,19,28,52,53,62,87,88,89,91,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-2,17,-1,-5,-6,-7,-8,17,-3,-4,-9,17,-20,-2,-19,17,-10,-11,-12,-13,-14,-15,-21,17,-23,-25,-17,-18,-24,-22,]),'WHILE':([0,1,2,5,6,7,8,19,28,52,53,62,87,88,89,91,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-2,18,-1,-5,-6,-7,-8,18,-3,-4,-9,18,-20,-2,-19,18,-10,-11,-12,-13,-14,-15,-21,18,-23,-25,-17,-18,-24,-22,]),'FOR':([0,1,2,5,6,7,8,19,28,52,53,62,87,88,89,91,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-2,19,-1,-5,-6,-7,-8,19,-3,-4,-9,19,-20,-2,-19,19,-10,-11,-12,-13,-14,-15,-21,19,-23,-25,-17,-18,-24,-22,]),'OPEN_BRACKET':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,20,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,61,62,63,85,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,21,-1,-5,-6,-7,-8,21,21,21,21,21,21,21,63,21,-3,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-4,-9,63,21,21,63,-20,-2,-19,21,21,-10,-11,-12,-13,-14,-15,21,-21,21,21,21,-23,-25,-17,-18,-24,-22,]),'INT':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,22,-1,-5,-6,-7,-8,22,22,22,22,22,22,22,22,-3,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-4,-9,22,22,-20,-2,-19,22,22,-10,-11,-12,-13,-14,-15,22,-21,22,22,22,-23,-25,-17,-18,-24,-22,]),'FLOAT':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,23,-1,-5,-6,-7,-8,23,23,23,23,23,23,23,23,-3,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-4,-9,23,23,-20,-2,-19,23,23,-10,-11,-12,-13,-14,-15,23,-21,23,23,23,-23,-25,-17,-18,-24,-22,]),'ID':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,20,-1,-5,-6,-7,-8,20,20,20,20,20,20,61,20,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,85,20,-4,-9,20,20,-20,-2,-19,20,20,-10,-11,-12,-13,-14,-15,20,-21,20,20,20,-23,-25,-17,-18,-24,-22,]),'STRING_CONST':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,24,-1,-5,-6,-7,-8,24,24,24,24,24,24,24,24,-3,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-4,-9,24,24,-20,-2,-19,24,24,-10,-11,-12,-13,-14,-15,24,-21,24,24,24,-23,-25,-17,-18,-24,-22,]),'TRUE':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,25,-1,-5,-6,-7,-8,25,25,25,25,25,25,25,25,-3,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-4,-9,25,25,-20,-2,-19,25,25,-10,-11,-12,-13,-14,-15,25,-21,25,25,25,-23,-25,-17,-18,-24,-22,]),'FALSE':([0,1,2,5,6,7,8,10,14,15,16,17,18,19,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,62,63,87,88,89,90,91,96,97,98,99,100,101,103,104,105,107,111,114,115,116,117,120,121,],[-2,26,-1,-5,-6,-7,-8,26,26,26,26,26,26,26,26,-3,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-4,-9,26,26,-20,-2,-19,26,26,-10,-11,-12,-13,-14,-15,26,-21,26,26,26,-23,-25,-17,-18,-24,-22,]),'OPEN_SQUARE':([0,1,2,3,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,119,120,121,],[-2,13,-1,49,-5,-6,-7,-8,13,-43,-56,13,13,13,13,13,13,-55,13,-53,-54,-57,-58,-59,-60,-3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-48,-49,-4,-9,49,-61,49,49,49,49,49,-55,13,13,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-44,49,-20,-2,-19,13,13,-27,49,-52,-10,-11,-12,-13,-14,-15,-45,13,-21,13,13,49,-26,13,49,49,-23,-25,-17,-18,-51,-24,-22,]),'$end':([0,1,2,5,6,7,8,28,52,53,87,89,96,97,98,99,100,101,104,114,115,116,117,120,121,],[-2,0,-1,-5,-6,-7,-8,-3,-4,-9,-20,-19,-10,-11,-12,-13,-14,-15,-21,-23,-25,-17,-18,-24,-22,]),'CLOSE_CURL':([2,5,6,7,8,28,52,53,87,88,89,96,97,98,99,100,101,104,107,114,115,116,117,120,121,],[-1,-5,-6,-7,-8,-3,-4,-9,-20,-2,-19,-10,-11,-12,-13,-14,-15,-21,115,-23,-25,-17,-18,-24,-22,]),'END_STMT':([3,4,9,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[28,52,53,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-16,-55,96,97,98,99,100,101,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[29,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'ADD_ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[30,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'MINUS_ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[31,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'DIVIDE_ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[32,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'MULT_ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[33,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'AND_ASSIGN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,61,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,95,102,110,119,],[34,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,-52,-45,-26,-51,]),'MULTIPLY':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[35,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,35,-61,35,35,35,35,35,-55,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-44,35,-27,35,-52,-45,35,-26,35,35,-51,]),'DIVIDE':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[36,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,36,-61,36,36,36,36,36,-55,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-44,36,-27,36,-52,-45,36,-26,36,36,-51,]),'PLUS':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[37,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,37,-61,37,37,37,37,37,-55,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-44,37,-27,37,-52,-45,37,-26,37,37,-51,]),'GTEQ':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[39,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,39,-61,39,39,39,39,39,-55,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-44,39,-27,39,-52,-45,39,-26,39,39,-51,]),'LTEQ':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[40,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,40,-61,40,40,40,40,40,-55,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-44,40,-27,40,-52,-45,40,-26,40,40,-51,]),'LESS_THAN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[41,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,41,-61,41,41,41,41,41,-55,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-44,41,-27,41,-52,-45,41,-26,41,41,-51,]),'MORE_THAN':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[42,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,42,-61,42,42,42,42,42,-55,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-44,42,-27,42,-52,-45,42,-26,42,42,-51,]),'EQUAL_EQUAL':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[43,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,43,-61,43,43,43,43,43,-55,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-44,43,-27,43,-52,-45,43,-26,43,43,-51,]),'NOT_EQUAL':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[44,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,44,-61,44,44,44,44,44,-55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-44,44,-27,44,-52,-45,44,-26,44,44,-51,]),'AND':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[45,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,45,-61,45,45,45,45,45,-55,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-44,45,-27,45,-52,-45,45,-26,45,45,-51,]),'OR':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[46,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,46,-61,46,46,46,46,46,-55,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-44,46,-27,46,-52,-45,46,-26,46,46,-51,]),'PERCENT':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[47,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,47,-61,47,47,47,47,47,-55,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-44,47,-27,47,-52,-45,47,-26,47,47,-51,]),'DOT':([3,11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,94,95,102,108,110,112,113,119,],[48,-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,48,-61,48,48,48,48,48,-55,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-44,48,-27,48,-52,-45,48,-26,48,48,-51,]),'OPEN_CURL':([5,6,7,8,11,12,20,22,23,24,25,26,27,28,50,51,52,53,54,55,56,57,59,60,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,93,95,96,97,98,99,100,101,102,104,106,108,109,110,113,114,115,116,117,119,120,121,],[-5,-6,-7,-8,-43,-56,-55,-53,-54,-57,-58,-59,-60,-3,-48,-49,-4,-9,-50,-61,-46,-47,88,88,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-20,-19,-27,-52,-10,-11,-12,-13,-14,-15,-45,-21,88,88,88,-26,88,-23,-25,-17,-18,-51,-24,-22,]),'CLOSE_BRACKET':([11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,63,64,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,94,95,102,110,118,119,],[-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,93,95,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,110,-27,-29,-52,-45,-26,-28,-51,]),'CLOSE_SQUARE':([11,12,13,20,22,23,24,25,26,27,50,51,54,55,56,57,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,95,102,110,112,119,],[-43,-56,55,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,102,-27,-52,-45,-26,119,-51,]),'COLON':([11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,93,95,102,110,119,],[-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,103,-27,-52,-45,-26,-51,]),'COMMA':([11,12,20,22,23,24,25,26,27,50,51,54,55,56,57,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,94,95,102,110,119,],[-43,-56,-55,-53,-54,-57,-58,-59,-60,-48,-49,-50,-61,-46,-47,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-27,111,-52,-45,-26,-51,]),'IN':([61,],[90,]),'ELSE_IF':([87,115,120,],[105,-25,105,]),'ELSE':([87,115,120,],[106,-25,106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,88,],[1,107,]),'statement':([1,19,62,91,107,],[2,62,91,109,2,]),'expression':([1,10,14,15,16,17,18,19,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,62,63,90,91,103,105,107,111,],[3,54,56,57,58,59,60,3,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,3,94,108,3,112,113,3,94,]),'return_state':([1,19,62,91,107,],[4,4,4,4,4,]),'if_state':([1,19,62,91,107,],[5,5,5,5,5,]),'if_else_state':([1,19,62,91,107,],[6,6,6,6,6,]),'while_state':([1,19,62,91,107,],[7,7,7,7,7,]),'for_state':([1,19,62,91,107,],[8,8,8,8,8,]),'value':([1,10,14,15,16,17,18,19,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,62,63,90,91,103,105,107,111,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_call':([1,10,14,15,16,17,18,19,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,62,63,90,91,103,105,107,111,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,84,12,12,12,12,12,12,12,12,12,]),'empty_list':([1,10,14,15,16,17,18,19,21,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,62,63,90,91,103,105,107,111,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'block':([59,60,106,108,109,113,],[87,89,114,116,117,120,]),'arg_list':([63,111,],[92,118,]),'else_state':([87,120,],[104,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_file','pseudo_yacc.py',18),
  ('statements -> <empty>','statements',0,'p_file2','pseudo_yacc.py',24),
  ('statement -> expression END_STMT','statement',2,'p_statement1','pseudo_yacc.py',29),
  ('statement -> return_state END_STMT','statement',2,'p_statement1','pseudo_yacc.py',30),
  ('statement -> if_state','statement',1,'p_statement1','pseudo_yacc.py',31),
  ('statement -> if_else_state','statement',1,'p_statement1','pseudo_yacc.py',32),
  ('statement -> while_state','statement',1,'p_statement1','pseudo_yacc.py',33),
  ('statement -> for_state','statement',1,'p_statement1','pseudo_yacc.py',34),
  ('statement -> CONTINUE END_STMT','statement',2,'p_statement1','pseudo_yacc.py',35),
  ('statement -> expression ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',41),
  ('statement -> expression ADD_ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',42),
  ('statement -> expression MINUS_ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',43),
  ('statement -> expression DIVIDE_ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',44),
  ('statement -> expression MULT_ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',45),
  ('statement -> expression AND_ASSIGN expression END_STMT','statement',4,'p_statement2','pseudo_yacc.py',46),
  ('return_state -> RETURN expression','return_state',2,'p_statement3','pseudo_yacc.py',52),
  ('for_state -> FOR ID IN expression block','for_state',5,'p_for_state1','pseudo_yacc.py',58),
  ('for_state -> FOR statement statement statement block','for_state',5,'p_for_state2','pseudo_yacc.py',64),
  ('while_state -> WHILE expression block','while_state',3,'p_while_state1','pseudo_yacc.py',70),
  ('if_state -> IF expression block','if_state',3,'p_if_state1','pseudo_yacc.py',76),
  ('if_else_state -> IF expression block else_state','if_else_state',4,'p_if_else_state1','pseudo_yacc.py',82),
  ('else_state -> ELSE_IF expression block else_state','else_state',4,'p_else_state1','pseudo_yacc.py',88),
  ('else_state -> ELSE block','else_state',2,'p_else_state2','pseudo_yacc.py',95),
  ('else_state -> ELSE_IF expression block','else_state',3,'p_else_state3','pseudo_yacc.py',101),
  ('block -> OPEN_CURL statements CLOSE_CURL','block',3,'p_block','pseudo_yacc.py',107),
  ('function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET','function_call',4,'p_function_call1','pseudo_yacc.py',113),
  ('function_call -> ID OPEN_BRACKET CLOSE_BRACKET','function_call',3,'p_function_call2','pseudo_yacc.py',119),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list1','pseudo_yacc.py',124),
  ('arg_list -> expression','arg_list',1,'p_arg_list2','pseudo_yacc.py',131),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression1','pseudo_yacc.py',137),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression1','pseudo_yacc.py',138),
  ('expression -> expression PLUS expression','expression',3,'p_expression1','pseudo_yacc.py',139),
  ('expression -> expression MINUS expression','expression',3,'p_expression1','pseudo_yacc.py',140),
  ('expression -> expression GTEQ expression','expression',3,'p_expression1','pseudo_yacc.py',141),
  ('expression -> expression LTEQ expression','expression',3,'p_expression1','pseudo_yacc.py',142),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression1','pseudo_yacc.py',143),
  ('expression -> expression MORE_THAN expression','expression',3,'p_expression1','pseudo_yacc.py',144),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression1','pseudo_yacc.py',145),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression1','pseudo_yacc.py',146),
  ('expression -> expression AND expression','expression',3,'p_expression1','pseudo_yacc.py',147),
  ('expression -> expression OR expression','expression',3,'p_expression1','pseudo_yacc.py',148),
  ('expression -> expression PERCENT expression','expression',3,'p_expression1','pseudo_yacc.py',149),
  ('expression -> value','expression',1,'p_expression2','pseudo_yacc.py',156),
  ('expression -> expression DOT function_call','expression',3,'p_expression3','pseudo_yacc.py',164),
  ('expression -> expression OPEN_SQUARE expression CLOSE_SQUARE','expression',4,'p_expression4','pseudo_yacc.py',171),
  ('expression -> PLUS_PLUS expression','expression',2,'p_expression5','pseudo_yacc.py',177),
  ('expression -> MINUS_MINUS expression','expression',2,'p_expression5','pseudo_yacc.py',178),
  ('expression -> expression PLUS_PLUS','expression',2,'p_expression5','pseudo_yacc.py',179),
  ('expression -> expression MINUS_MINUS','expression',2,'p_expression5','pseudo_yacc.py',180),
  ('expression -> MINUS expression','expression',2,'p_expression5','pseudo_yacc.py',181),
  ('expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE','expression',6,'p_expression6','pseudo_yacc.py',187),
  ('value -> OPEN_BRACKET expression CLOSE_BRACKET','value',3,'p_value1','pseudo_yacc.py',194),
  ('value -> INT','value',1,'p_value2','pseudo_yacc.py',201),
  ('value -> FLOAT','value',1,'p_value2','pseudo_yacc.py',202),
  ('value -> ID','value',1,'p_value2','pseudo_yacc.py',203),
  ('value -> function_call','value',1,'p_value2','pseudo_yacc.py',204),
  ('value -> STRING_CONST','value',1,'p_value2','pseudo_yacc.py',205),
  ('value -> TRUE','value',1,'p_value2','pseudo_yacc.py',206),
  ('value -> FALSE','value',1,'p_value2','pseudo_yacc.py',207),
  ('value -> empty_list','value',1,'p_value2','pseudo_yacc.py',208),
  ('empty_list -> OPEN_SQUARE CLOSE_SQUARE','empty_list',2,'p_empty_list','pseudo_yacc.py',214),
  ('store -> ID','store',1,'p_store','pseudo_yacc.py',221),
]
