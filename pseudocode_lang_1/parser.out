Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> <empty>
Rule 3     statement -> expression END_STMT
Rule 4     statement -> return_state END_STMT
Rule 5     statement -> if_state
Rule 6     statement -> if_else_state
Rule 7     statement -> while_state
Rule 8     statement -> for_state
Rule 9     statement -> CONTINUE END_STMT
Rule 10    statement -> expression ASSIGN expression END_STMT
Rule 11    statement -> expression ADD_ASSIGN expression END_STMT
Rule 12    statement -> expression MINUS_ASSIGN expression END_STMT
Rule 13    statement -> expression DIVIDE_ASSIGN expression END_STMT
Rule 14    statement -> expression MULT_ASSIGN expression END_STMT
Rule 15    statement -> expression AND_ASSIGN expression END_STMT
Rule 16    return_state -> RETURN expression
Rule 17    for_state -> FOR ID IN expression block
Rule 18    for_state -> FOR statement statement statement block
Rule 19    while_state -> WHILE expression block
Rule 20    if_state -> IF expression block
Rule 21    if_else_state -> IF expression block else_state
Rule 22    else_state -> ELSE_IF expression block else_state
Rule 23    else_state -> ELSE block
Rule 24    else_state -> ELSE_IF expression block
Rule 25    block -> OPEN_CURL statements CLOSE_CURL
Rule 26    function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET
Rule 27    function_call -> ID OPEN_BRACKET CLOSE_BRACKET
Rule 28    arg_list -> expression COMMA arg_list
Rule 29    arg_list -> expression
Rule 30    expression -> expression MULTIPLY expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> expression PLUS expression
Rule 33    expression -> expression MINUS expression
Rule 34    expression -> expression GTEQ expression
Rule 35    expression -> expression LTEQ expression
Rule 36    expression -> expression LESS_THAN expression
Rule 37    expression -> expression MORE_THAN expression
Rule 38    expression -> expression EQUAL_EQUAL expression
Rule 39    expression -> expression NOT_EQUAL expression
Rule 40    expression -> expression AND expression
Rule 41    expression -> expression OR expression
Rule 42    expression -> expression PERCENT expression
Rule 43    expression -> value
Rule 44    expression -> expression DOT function_call
Rule 45    expression -> expression OPEN_SQUARE expression CLOSE_SQUARE
Rule 46    expression -> PLUS_PLUS expression
Rule 47    expression -> MINUS_MINUS expression
Rule 48    expression -> expression PLUS_PLUS
Rule 49    expression -> expression MINUS_MINUS
Rule 50    expression -> MINUS expression
Rule 51    expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
Rule 52    value -> OPEN_BRACKET expression CLOSE_BRACKET
Rule 53    value -> INT
Rule 54    value -> FLOAT
Rule 55    value -> ID
Rule 56    value -> function_call
Rule 57    value -> STRING_CONST
Rule 58    value -> TRUE
Rule 59    value -> FALSE
Rule 60    value -> empty_list
Rule 61    empty_list -> OPEN_SQUARE CLOSE_SQUARE
Rule 62    store -> ID

Terminals, with rules where they appear

ADD_ASSIGN           : 11
AND                  : 40
AND_ASSIGN           : 15
ASSIGN               : 10
CLOSE_BRACKET        : 26 27 52
CLOSE_CURL           : 25
CLOSE_SQUARE         : 45 51 61
COLON                : 51
COMMA                : 28
CONTINUE             : 9
DIVIDE               : 31
DIVIDE_ASSIGN        : 13
DOT                  : 44
ELSE                 : 23
ELSE_IF              : 22 24
END_STMT             : 3 4 9 10 11 12 13 14 15
EQUAL_EQUAL          : 38
FALSE                : 59
FLOAT                : 54
FOR                  : 17 18
GTEQ                 : 34
ID                   : 17 26 27 55 62
IF                   : 20 21
IN                   : 17
INT                  : 53
LESS_THAN            : 36
LTEQ                 : 35
MINUS                : 33 50
MINUS_ASSIGN         : 12
MINUS_MINUS          : 47 49
MORE_THAN            : 37
MULTIPLY             : 30
MULT_ASSIGN          : 14
NOT_EQUAL            : 39
OPEN_BRACKET         : 26 27 52
OPEN_CURL            : 25
OPEN_SQUARE          : 45 51 61
OR                   : 41
PERCENT              : 42
PLUS                 : 32
PLUS_PLUS            : 46 48
RETURN               : 16
STRING_CONST         : 57
TRUE                 : 58
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

arg_list             : 26 28
block                : 17 18 19 20 21 22 23 24
else_state           : 21 22
empty_list           : 60
expression           : 3 10 10 11 11 12 12 13 13 14 14 15 15 16 17 19 20 21 22 24 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 44 45 45 46 47 48 49 50 51 51 51 52
for_state            : 8
function_call        : 44 56
if_else_state        : 6
if_state             : 5
return_state         : 4
statement            : 1 18 18 18
statements           : 1 25 0
store                : 
value                : 43
while_state          : 7

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> .

    CONTINUE        reduce using rule 2 (statements -> .)
    PLUS_PLUS       reduce using rule 2 (statements -> .)
    MINUS_MINUS     reduce using rule 2 (statements -> .)
    MINUS           reduce using rule 2 (statements -> .)
    RETURN          reduce using rule 2 (statements -> .)
    IF              reduce using rule 2 (statements -> .)
    WHILE           reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    OPEN_BRACKET    reduce using rule 2 (statements -> .)
    INT             reduce using rule 2 (statements -> .)
    FLOAT           reduce using rule 2 (statements -> .)
    ID              reduce using rule 2 (statements -> .)
    STRING_CONST    reduce using rule 2 (statements -> .)
    TRUE            reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    OPEN_SQUARE     reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)

    statements                     shift and go to state 1

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . expression END_STMT
    (4) statement -> . return_state END_STMT
    (5) statement -> . if_state
    (6) statement -> . if_else_state
    (7) statement -> . while_state
    (8) statement -> . for_state
    (9) statement -> . CONTINUE END_STMT
    (10) statement -> . expression ASSIGN expression END_STMT
    (11) statement -> . expression ADD_ASSIGN expression END_STMT
    (12) statement -> . expression MINUS_ASSIGN expression END_STMT
    (13) statement -> . expression DIVIDE_ASSIGN expression END_STMT
    (14) statement -> . expression MULT_ASSIGN expression END_STMT
    (15) statement -> . expression AND_ASSIGN expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (16) return_state -> . RETURN expression
    (20) if_state -> . IF expression block
    (21) if_else_state -> . IF expression block else_state
    (19) while_state -> . WHILE expression block
    (17) for_state -> . FOR ID IN expression block
    (18) for_state -> . FOR statement statement statement block
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    CONTINUE        shift and go to state 9
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    statement                      shift and go to state 2
    expression                     shift and go to state 3
    return_state                   shift and go to state 4
    if_state                       shift and go to state 5
    if_else_state                  shift and go to state 6
    while_state                    shift and go to state 7
    for_state                      shift and go to state 8
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 2

    (1) statements -> statements statement .

    CONTINUE        reduce using rule 1 (statements -> statements statement .)
    PLUS_PLUS       reduce using rule 1 (statements -> statements statement .)
    MINUS_MINUS     reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    OPEN_BRACKET    reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    FLOAT           reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    STRING_CONST    reduce using rule 1 (statements -> statements statement .)
    TRUE            reduce using rule 1 (statements -> statements statement .)
    FALSE           reduce using rule 1 (statements -> statements statement .)
    OPEN_SQUARE     reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    CLOSE_CURL      reduce using rule 1 (statements -> statements statement .)


state 3

    (3) statement -> expression . END_STMT
    (10) statement -> expression . ASSIGN expression END_STMT
    (11) statement -> expression . ADD_ASSIGN expression END_STMT
    (12) statement -> expression . MINUS_ASSIGN expression END_STMT
    (13) statement -> expression . DIVIDE_ASSIGN expression END_STMT
    (14) statement -> expression . MULT_ASSIGN expression END_STMT
    (15) statement -> expression . AND_ASSIGN expression END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 28
    ASSIGN          shift and go to state 29
    ADD_ASSIGN      shift and go to state 30
    MINUS_ASSIGN    shift and go to state 31
    DIVIDE_ASSIGN   shift and go to state 32
    MULT_ASSIGN     shift and go to state 33
    AND_ASSIGN      shift and go to state 34
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 4

    (4) statement -> return_state . END_STMT

    END_STMT        shift and go to state 52


state 5

    (5) statement -> if_state .

    CONTINUE        reduce using rule 5 (statement -> if_state .)
    PLUS_PLUS       reduce using rule 5 (statement -> if_state .)
    MINUS_MINUS     reduce using rule 5 (statement -> if_state .)
    MINUS           reduce using rule 5 (statement -> if_state .)
    RETURN          reduce using rule 5 (statement -> if_state .)
    IF              reduce using rule 5 (statement -> if_state .)
    WHILE           reduce using rule 5 (statement -> if_state .)
    FOR             reduce using rule 5 (statement -> if_state .)
    OPEN_BRACKET    reduce using rule 5 (statement -> if_state .)
    INT             reduce using rule 5 (statement -> if_state .)
    FLOAT           reduce using rule 5 (statement -> if_state .)
    ID              reduce using rule 5 (statement -> if_state .)
    STRING_CONST    reduce using rule 5 (statement -> if_state .)
    TRUE            reduce using rule 5 (statement -> if_state .)
    FALSE           reduce using rule 5 (statement -> if_state .)
    OPEN_SQUARE     reduce using rule 5 (statement -> if_state .)
    $end            reduce using rule 5 (statement -> if_state .)
    OPEN_CURL       reduce using rule 5 (statement -> if_state .)
    CLOSE_CURL      reduce using rule 5 (statement -> if_state .)


state 6

    (6) statement -> if_else_state .

    CONTINUE        reduce using rule 6 (statement -> if_else_state .)
    PLUS_PLUS       reduce using rule 6 (statement -> if_else_state .)
    MINUS_MINUS     reduce using rule 6 (statement -> if_else_state .)
    MINUS           reduce using rule 6 (statement -> if_else_state .)
    RETURN          reduce using rule 6 (statement -> if_else_state .)
    IF              reduce using rule 6 (statement -> if_else_state .)
    WHILE           reduce using rule 6 (statement -> if_else_state .)
    FOR             reduce using rule 6 (statement -> if_else_state .)
    OPEN_BRACKET    reduce using rule 6 (statement -> if_else_state .)
    INT             reduce using rule 6 (statement -> if_else_state .)
    FLOAT           reduce using rule 6 (statement -> if_else_state .)
    ID              reduce using rule 6 (statement -> if_else_state .)
    STRING_CONST    reduce using rule 6 (statement -> if_else_state .)
    TRUE            reduce using rule 6 (statement -> if_else_state .)
    FALSE           reduce using rule 6 (statement -> if_else_state .)
    OPEN_SQUARE     reduce using rule 6 (statement -> if_else_state .)
    $end            reduce using rule 6 (statement -> if_else_state .)
    OPEN_CURL       reduce using rule 6 (statement -> if_else_state .)
    CLOSE_CURL      reduce using rule 6 (statement -> if_else_state .)


state 7

    (7) statement -> while_state .

    CONTINUE        reduce using rule 7 (statement -> while_state .)
    PLUS_PLUS       reduce using rule 7 (statement -> while_state .)
    MINUS_MINUS     reduce using rule 7 (statement -> while_state .)
    MINUS           reduce using rule 7 (statement -> while_state .)
    RETURN          reduce using rule 7 (statement -> while_state .)
    IF              reduce using rule 7 (statement -> while_state .)
    WHILE           reduce using rule 7 (statement -> while_state .)
    FOR             reduce using rule 7 (statement -> while_state .)
    OPEN_BRACKET    reduce using rule 7 (statement -> while_state .)
    INT             reduce using rule 7 (statement -> while_state .)
    FLOAT           reduce using rule 7 (statement -> while_state .)
    ID              reduce using rule 7 (statement -> while_state .)
    STRING_CONST    reduce using rule 7 (statement -> while_state .)
    TRUE            reduce using rule 7 (statement -> while_state .)
    FALSE           reduce using rule 7 (statement -> while_state .)
    OPEN_SQUARE     reduce using rule 7 (statement -> while_state .)
    $end            reduce using rule 7 (statement -> while_state .)
    OPEN_CURL       reduce using rule 7 (statement -> while_state .)
    CLOSE_CURL      reduce using rule 7 (statement -> while_state .)


state 8

    (8) statement -> for_state .

    CONTINUE        reduce using rule 8 (statement -> for_state .)
    PLUS_PLUS       reduce using rule 8 (statement -> for_state .)
    MINUS_MINUS     reduce using rule 8 (statement -> for_state .)
    MINUS           reduce using rule 8 (statement -> for_state .)
    RETURN          reduce using rule 8 (statement -> for_state .)
    IF              reduce using rule 8 (statement -> for_state .)
    WHILE           reduce using rule 8 (statement -> for_state .)
    FOR             reduce using rule 8 (statement -> for_state .)
    OPEN_BRACKET    reduce using rule 8 (statement -> for_state .)
    INT             reduce using rule 8 (statement -> for_state .)
    FLOAT           reduce using rule 8 (statement -> for_state .)
    ID              reduce using rule 8 (statement -> for_state .)
    STRING_CONST    reduce using rule 8 (statement -> for_state .)
    TRUE            reduce using rule 8 (statement -> for_state .)
    FALSE           reduce using rule 8 (statement -> for_state .)
    OPEN_SQUARE     reduce using rule 8 (statement -> for_state .)
    $end            reduce using rule 8 (statement -> for_state .)
    OPEN_CURL       reduce using rule 8 (statement -> for_state .)
    CLOSE_CURL      reduce using rule 8 (statement -> for_state .)


state 9

    (9) statement -> CONTINUE . END_STMT

    END_STMT        shift and go to state 53


state 10

    (50) expression -> MINUS . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 54
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 11

    (43) expression -> value .

    END_STMT        reduce using rule 43 (expression -> value .)
    ASSIGN          reduce using rule 43 (expression -> value .)
    ADD_ASSIGN      reduce using rule 43 (expression -> value .)
    MINUS_ASSIGN    reduce using rule 43 (expression -> value .)
    DIVIDE_ASSIGN   reduce using rule 43 (expression -> value .)
    MULT_ASSIGN     reduce using rule 43 (expression -> value .)
    AND_ASSIGN      reduce using rule 43 (expression -> value .)
    MULTIPLY        reduce using rule 43 (expression -> value .)
    DIVIDE          reduce using rule 43 (expression -> value .)
    PLUS            reduce using rule 43 (expression -> value .)
    MINUS           reduce using rule 43 (expression -> value .)
    GTEQ            reduce using rule 43 (expression -> value .)
    LTEQ            reduce using rule 43 (expression -> value .)
    LESS_THAN       reduce using rule 43 (expression -> value .)
    MORE_THAN       reduce using rule 43 (expression -> value .)
    EQUAL_EQUAL     reduce using rule 43 (expression -> value .)
    NOT_EQUAL       reduce using rule 43 (expression -> value .)
    AND             reduce using rule 43 (expression -> value .)
    OR              reduce using rule 43 (expression -> value .)
    PERCENT         reduce using rule 43 (expression -> value .)
    DOT             reduce using rule 43 (expression -> value .)
    OPEN_SQUARE     reduce using rule 43 (expression -> value .)
    PLUS_PLUS       reduce using rule 43 (expression -> value .)
    MINUS_MINUS     reduce using rule 43 (expression -> value .)
    OPEN_CURL       reduce using rule 43 (expression -> value .)
    CLOSE_BRACKET   reduce using rule 43 (expression -> value .)
    CLOSE_SQUARE    reduce using rule 43 (expression -> value .)
    COLON           reduce using rule 43 (expression -> value .)
    COMMA           reduce using rule 43 (expression -> value .)


state 12

    (56) value -> function_call .

    END_STMT        reduce using rule 56 (value -> function_call .)
    ASSIGN          reduce using rule 56 (value -> function_call .)
    ADD_ASSIGN      reduce using rule 56 (value -> function_call .)
    MINUS_ASSIGN    reduce using rule 56 (value -> function_call .)
    DIVIDE_ASSIGN   reduce using rule 56 (value -> function_call .)
    MULT_ASSIGN     reduce using rule 56 (value -> function_call .)
    AND_ASSIGN      reduce using rule 56 (value -> function_call .)
    MULTIPLY        reduce using rule 56 (value -> function_call .)
    DIVIDE          reduce using rule 56 (value -> function_call .)
    PLUS            reduce using rule 56 (value -> function_call .)
    MINUS           reduce using rule 56 (value -> function_call .)
    GTEQ            reduce using rule 56 (value -> function_call .)
    LTEQ            reduce using rule 56 (value -> function_call .)
    LESS_THAN       reduce using rule 56 (value -> function_call .)
    MORE_THAN       reduce using rule 56 (value -> function_call .)
    EQUAL_EQUAL     reduce using rule 56 (value -> function_call .)
    NOT_EQUAL       reduce using rule 56 (value -> function_call .)
    AND             reduce using rule 56 (value -> function_call .)
    OR              reduce using rule 56 (value -> function_call .)
    PERCENT         reduce using rule 56 (value -> function_call .)
    DOT             reduce using rule 56 (value -> function_call .)
    OPEN_SQUARE     reduce using rule 56 (value -> function_call .)
    PLUS_PLUS       reduce using rule 56 (value -> function_call .)
    MINUS_MINUS     reduce using rule 56 (value -> function_call .)
    OPEN_CURL       reduce using rule 56 (value -> function_call .)
    CLOSE_BRACKET   reduce using rule 56 (value -> function_call .)
    CLOSE_SQUARE    reduce using rule 56 (value -> function_call .)
    COLON           reduce using rule 56 (value -> function_call .)
    COMMA           reduce using rule 56 (value -> function_call .)


state 13

    (61) empty_list -> OPEN_SQUARE . CLOSE_SQUARE

    CLOSE_SQUARE    shift and go to state 55


state 14

    (46) expression -> PLUS_PLUS . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 56
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 15

    (47) expression -> MINUS_MINUS . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 57
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 16

    (16) return_state -> RETURN . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 58
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 17

    (20) if_state -> IF . expression block
    (21) if_else_state -> IF . expression block else_state
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 59
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 18

    (19) while_state -> WHILE . expression block
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 60
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 19

    (17) for_state -> FOR . ID IN expression block
    (18) for_state -> FOR . statement statement statement block
    (3) statement -> . expression END_STMT
    (4) statement -> . return_state END_STMT
    (5) statement -> . if_state
    (6) statement -> . if_else_state
    (7) statement -> . while_state
    (8) statement -> . for_state
    (9) statement -> . CONTINUE END_STMT
    (10) statement -> . expression ASSIGN expression END_STMT
    (11) statement -> . expression ADD_ASSIGN expression END_STMT
    (12) statement -> . expression MINUS_ASSIGN expression END_STMT
    (13) statement -> . expression DIVIDE_ASSIGN expression END_STMT
    (14) statement -> . expression MULT_ASSIGN expression END_STMT
    (15) statement -> . expression AND_ASSIGN expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (16) return_state -> . RETURN expression
    (20) if_state -> . IF expression block
    (21) if_else_state -> . IF expression block else_state
    (19) while_state -> . WHILE expression block
    (17) for_state -> . FOR ID IN expression block
    (18) for_state -> . FOR statement statement statement block
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    ID              shift and go to state 61
    CONTINUE        shift and go to state 9
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 3
    statement                      shift and go to state 62
    return_state                   shift and go to state 4
    if_state                       shift and go to state 5
    if_else_state                  shift and go to state 6
    while_state                    shift and go to state 7
    for_state                      shift and go to state 8
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 20

    (55) value -> ID .
    (26) function_call -> ID . OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> ID . OPEN_BRACKET CLOSE_BRACKET

    END_STMT        reduce using rule 55 (value -> ID .)
    ASSIGN          reduce using rule 55 (value -> ID .)
    ADD_ASSIGN      reduce using rule 55 (value -> ID .)
    MINUS_ASSIGN    reduce using rule 55 (value -> ID .)
    DIVIDE_ASSIGN   reduce using rule 55 (value -> ID .)
    MULT_ASSIGN     reduce using rule 55 (value -> ID .)
    AND_ASSIGN      reduce using rule 55 (value -> ID .)
    MULTIPLY        reduce using rule 55 (value -> ID .)
    DIVIDE          reduce using rule 55 (value -> ID .)
    PLUS            reduce using rule 55 (value -> ID .)
    MINUS           reduce using rule 55 (value -> ID .)
    GTEQ            reduce using rule 55 (value -> ID .)
    LTEQ            reduce using rule 55 (value -> ID .)
    LESS_THAN       reduce using rule 55 (value -> ID .)
    MORE_THAN       reduce using rule 55 (value -> ID .)
    EQUAL_EQUAL     reduce using rule 55 (value -> ID .)
    NOT_EQUAL       reduce using rule 55 (value -> ID .)
    AND             reduce using rule 55 (value -> ID .)
    OR              reduce using rule 55 (value -> ID .)
    PERCENT         reduce using rule 55 (value -> ID .)
    DOT             reduce using rule 55 (value -> ID .)
    OPEN_SQUARE     reduce using rule 55 (value -> ID .)
    PLUS_PLUS       reduce using rule 55 (value -> ID .)
    MINUS_MINUS     reduce using rule 55 (value -> ID .)
    OPEN_CURL       reduce using rule 55 (value -> ID .)
    CLOSE_BRACKET   reduce using rule 55 (value -> ID .)
    CLOSE_SQUARE    reduce using rule 55 (value -> ID .)
    COLON           reduce using rule 55 (value -> ID .)
    COMMA           reduce using rule 55 (value -> ID .)
    OPEN_BRACKET    shift and go to state 63


state 21

    (52) value -> OPEN_BRACKET . expression CLOSE_BRACKET
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 64
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 22

    (53) value -> INT .

    END_STMT        reduce using rule 53 (value -> INT .)
    ASSIGN          reduce using rule 53 (value -> INT .)
    ADD_ASSIGN      reduce using rule 53 (value -> INT .)
    MINUS_ASSIGN    reduce using rule 53 (value -> INT .)
    DIVIDE_ASSIGN   reduce using rule 53 (value -> INT .)
    MULT_ASSIGN     reduce using rule 53 (value -> INT .)
    AND_ASSIGN      reduce using rule 53 (value -> INT .)
    MULTIPLY        reduce using rule 53 (value -> INT .)
    DIVIDE          reduce using rule 53 (value -> INT .)
    PLUS            reduce using rule 53 (value -> INT .)
    MINUS           reduce using rule 53 (value -> INT .)
    GTEQ            reduce using rule 53 (value -> INT .)
    LTEQ            reduce using rule 53 (value -> INT .)
    LESS_THAN       reduce using rule 53 (value -> INT .)
    MORE_THAN       reduce using rule 53 (value -> INT .)
    EQUAL_EQUAL     reduce using rule 53 (value -> INT .)
    NOT_EQUAL       reduce using rule 53 (value -> INT .)
    AND             reduce using rule 53 (value -> INT .)
    OR              reduce using rule 53 (value -> INT .)
    PERCENT         reduce using rule 53 (value -> INT .)
    DOT             reduce using rule 53 (value -> INT .)
    OPEN_SQUARE     reduce using rule 53 (value -> INT .)
    PLUS_PLUS       reduce using rule 53 (value -> INT .)
    MINUS_MINUS     reduce using rule 53 (value -> INT .)
    OPEN_CURL       reduce using rule 53 (value -> INT .)
    CLOSE_BRACKET   reduce using rule 53 (value -> INT .)
    CLOSE_SQUARE    reduce using rule 53 (value -> INT .)
    COLON           reduce using rule 53 (value -> INT .)
    COMMA           reduce using rule 53 (value -> INT .)


state 23

    (54) value -> FLOAT .

    END_STMT        reduce using rule 54 (value -> FLOAT .)
    ASSIGN          reduce using rule 54 (value -> FLOAT .)
    ADD_ASSIGN      reduce using rule 54 (value -> FLOAT .)
    MINUS_ASSIGN    reduce using rule 54 (value -> FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 54 (value -> FLOAT .)
    MULT_ASSIGN     reduce using rule 54 (value -> FLOAT .)
    AND_ASSIGN      reduce using rule 54 (value -> FLOAT .)
    MULTIPLY        reduce using rule 54 (value -> FLOAT .)
    DIVIDE          reduce using rule 54 (value -> FLOAT .)
    PLUS            reduce using rule 54 (value -> FLOAT .)
    MINUS           reduce using rule 54 (value -> FLOAT .)
    GTEQ            reduce using rule 54 (value -> FLOAT .)
    LTEQ            reduce using rule 54 (value -> FLOAT .)
    LESS_THAN       reduce using rule 54 (value -> FLOAT .)
    MORE_THAN       reduce using rule 54 (value -> FLOAT .)
    EQUAL_EQUAL     reduce using rule 54 (value -> FLOAT .)
    NOT_EQUAL       reduce using rule 54 (value -> FLOAT .)
    AND             reduce using rule 54 (value -> FLOAT .)
    OR              reduce using rule 54 (value -> FLOAT .)
    PERCENT         reduce using rule 54 (value -> FLOAT .)
    DOT             reduce using rule 54 (value -> FLOAT .)
    OPEN_SQUARE     reduce using rule 54 (value -> FLOAT .)
    PLUS_PLUS       reduce using rule 54 (value -> FLOAT .)
    MINUS_MINUS     reduce using rule 54 (value -> FLOAT .)
    OPEN_CURL       reduce using rule 54 (value -> FLOAT .)
    CLOSE_BRACKET   reduce using rule 54 (value -> FLOAT .)
    CLOSE_SQUARE    reduce using rule 54 (value -> FLOAT .)
    COLON           reduce using rule 54 (value -> FLOAT .)
    COMMA           reduce using rule 54 (value -> FLOAT .)


state 24

    (57) value -> STRING_CONST .

    END_STMT        reduce using rule 57 (value -> STRING_CONST .)
    ASSIGN          reduce using rule 57 (value -> STRING_CONST .)
    ADD_ASSIGN      reduce using rule 57 (value -> STRING_CONST .)
    MINUS_ASSIGN    reduce using rule 57 (value -> STRING_CONST .)
    DIVIDE_ASSIGN   reduce using rule 57 (value -> STRING_CONST .)
    MULT_ASSIGN     reduce using rule 57 (value -> STRING_CONST .)
    AND_ASSIGN      reduce using rule 57 (value -> STRING_CONST .)
    MULTIPLY        reduce using rule 57 (value -> STRING_CONST .)
    DIVIDE          reduce using rule 57 (value -> STRING_CONST .)
    PLUS            reduce using rule 57 (value -> STRING_CONST .)
    MINUS           reduce using rule 57 (value -> STRING_CONST .)
    GTEQ            reduce using rule 57 (value -> STRING_CONST .)
    LTEQ            reduce using rule 57 (value -> STRING_CONST .)
    LESS_THAN       reduce using rule 57 (value -> STRING_CONST .)
    MORE_THAN       reduce using rule 57 (value -> STRING_CONST .)
    EQUAL_EQUAL     reduce using rule 57 (value -> STRING_CONST .)
    NOT_EQUAL       reduce using rule 57 (value -> STRING_CONST .)
    AND             reduce using rule 57 (value -> STRING_CONST .)
    OR              reduce using rule 57 (value -> STRING_CONST .)
    PERCENT         reduce using rule 57 (value -> STRING_CONST .)
    DOT             reduce using rule 57 (value -> STRING_CONST .)
    OPEN_SQUARE     reduce using rule 57 (value -> STRING_CONST .)
    PLUS_PLUS       reduce using rule 57 (value -> STRING_CONST .)
    MINUS_MINUS     reduce using rule 57 (value -> STRING_CONST .)
    OPEN_CURL       reduce using rule 57 (value -> STRING_CONST .)
    CLOSE_BRACKET   reduce using rule 57 (value -> STRING_CONST .)
    CLOSE_SQUARE    reduce using rule 57 (value -> STRING_CONST .)
    COLON           reduce using rule 57 (value -> STRING_CONST .)
    COMMA           reduce using rule 57 (value -> STRING_CONST .)


state 25

    (58) value -> TRUE .

    END_STMT        reduce using rule 58 (value -> TRUE .)
    ASSIGN          reduce using rule 58 (value -> TRUE .)
    ADD_ASSIGN      reduce using rule 58 (value -> TRUE .)
    MINUS_ASSIGN    reduce using rule 58 (value -> TRUE .)
    DIVIDE_ASSIGN   reduce using rule 58 (value -> TRUE .)
    MULT_ASSIGN     reduce using rule 58 (value -> TRUE .)
    AND_ASSIGN      reduce using rule 58 (value -> TRUE .)
    MULTIPLY        reduce using rule 58 (value -> TRUE .)
    DIVIDE          reduce using rule 58 (value -> TRUE .)
    PLUS            reduce using rule 58 (value -> TRUE .)
    MINUS           reduce using rule 58 (value -> TRUE .)
    GTEQ            reduce using rule 58 (value -> TRUE .)
    LTEQ            reduce using rule 58 (value -> TRUE .)
    LESS_THAN       reduce using rule 58 (value -> TRUE .)
    MORE_THAN       reduce using rule 58 (value -> TRUE .)
    EQUAL_EQUAL     reduce using rule 58 (value -> TRUE .)
    NOT_EQUAL       reduce using rule 58 (value -> TRUE .)
    AND             reduce using rule 58 (value -> TRUE .)
    OR              reduce using rule 58 (value -> TRUE .)
    PERCENT         reduce using rule 58 (value -> TRUE .)
    DOT             reduce using rule 58 (value -> TRUE .)
    OPEN_SQUARE     reduce using rule 58 (value -> TRUE .)
    PLUS_PLUS       reduce using rule 58 (value -> TRUE .)
    MINUS_MINUS     reduce using rule 58 (value -> TRUE .)
    OPEN_CURL       reduce using rule 58 (value -> TRUE .)
    CLOSE_BRACKET   reduce using rule 58 (value -> TRUE .)
    CLOSE_SQUARE    reduce using rule 58 (value -> TRUE .)
    COLON           reduce using rule 58 (value -> TRUE .)
    COMMA           reduce using rule 58 (value -> TRUE .)


state 26

    (59) value -> FALSE .

    END_STMT        reduce using rule 59 (value -> FALSE .)
    ASSIGN          reduce using rule 59 (value -> FALSE .)
    ADD_ASSIGN      reduce using rule 59 (value -> FALSE .)
    MINUS_ASSIGN    reduce using rule 59 (value -> FALSE .)
    DIVIDE_ASSIGN   reduce using rule 59 (value -> FALSE .)
    MULT_ASSIGN     reduce using rule 59 (value -> FALSE .)
    AND_ASSIGN      reduce using rule 59 (value -> FALSE .)
    MULTIPLY        reduce using rule 59 (value -> FALSE .)
    DIVIDE          reduce using rule 59 (value -> FALSE .)
    PLUS            reduce using rule 59 (value -> FALSE .)
    MINUS           reduce using rule 59 (value -> FALSE .)
    GTEQ            reduce using rule 59 (value -> FALSE .)
    LTEQ            reduce using rule 59 (value -> FALSE .)
    LESS_THAN       reduce using rule 59 (value -> FALSE .)
    MORE_THAN       reduce using rule 59 (value -> FALSE .)
    EQUAL_EQUAL     reduce using rule 59 (value -> FALSE .)
    NOT_EQUAL       reduce using rule 59 (value -> FALSE .)
    AND             reduce using rule 59 (value -> FALSE .)
    OR              reduce using rule 59 (value -> FALSE .)
    PERCENT         reduce using rule 59 (value -> FALSE .)
    DOT             reduce using rule 59 (value -> FALSE .)
    OPEN_SQUARE     reduce using rule 59 (value -> FALSE .)
    PLUS_PLUS       reduce using rule 59 (value -> FALSE .)
    MINUS_MINUS     reduce using rule 59 (value -> FALSE .)
    OPEN_CURL       reduce using rule 59 (value -> FALSE .)
    CLOSE_BRACKET   reduce using rule 59 (value -> FALSE .)
    CLOSE_SQUARE    reduce using rule 59 (value -> FALSE .)
    COLON           reduce using rule 59 (value -> FALSE .)
    COMMA           reduce using rule 59 (value -> FALSE .)


state 27

    (60) value -> empty_list .

    END_STMT        reduce using rule 60 (value -> empty_list .)
    ASSIGN          reduce using rule 60 (value -> empty_list .)
    ADD_ASSIGN      reduce using rule 60 (value -> empty_list .)
    MINUS_ASSIGN    reduce using rule 60 (value -> empty_list .)
    DIVIDE_ASSIGN   reduce using rule 60 (value -> empty_list .)
    MULT_ASSIGN     reduce using rule 60 (value -> empty_list .)
    AND_ASSIGN      reduce using rule 60 (value -> empty_list .)
    MULTIPLY        reduce using rule 60 (value -> empty_list .)
    DIVIDE          reduce using rule 60 (value -> empty_list .)
    PLUS            reduce using rule 60 (value -> empty_list .)
    MINUS           reduce using rule 60 (value -> empty_list .)
    GTEQ            reduce using rule 60 (value -> empty_list .)
    LTEQ            reduce using rule 60 (value -> empty_list .)
    LESS_THAN       reduce using rule 60 (value -> empty_list .)
    MORE_THAN       reduce using rule 60 (value -> empty_list .)
    EQUAL_EQUAL     reduce using rule 60 (value -> empty_list .)
    NOT_EQUAL       reduce using rule 60 (value -> empty_list .)
    AND             reduce using rule 60 (value -> empty_list .)
    OR              reduce using rule 60 (value -> empty_list .)
    PERCENT         reduce using rule 60 (value -> empty_list .)
    DOT             reduce using rule 60 (value -> empty_list .)
    OPEN_SQUARE     reduce using rule 60 (value -> empty_list .)
    PLUS_PLUS       reduce using rule 60 (value -> empty_list .)
    MINUS_MINUS     reduce using rule 60 (value -> empty_list .)
    OPEN_CURL       reduce using rule 60 (value -> empty_list .)
    CLOSE_BRACKET   reduce using rule 60 (value -> empty_list .)
    CLOSE_SQUARE    reduce using rule 60 (value -> empty_list .)
    COLON           reduce using rule 60 (value -> empty_list .)
    COMMA           reduce using rule 60 (value -> empty_list .)


state 28

    (3) statement -> expression END_STMT .

    CONTINUE        reduce using rule 3 (statement -> expression END_STMT .)
    PLUS_PLUS       reduce using rule 3 (statement -> expression END_STMT .)
    MINUS_MINUS     reduce using rule 3 (statement -> expression END_STMT .)
    MINUS           reduce using rule 3 (statement -> expression END_STMT .)
    RETURN          reduce using rule 3 (statement -> expression END_STMT .)
    IF              reduce using rule 3 (statement -> expression END_STMT .)
    WHILE           reduce using rule 3 (statement -> expression END_STMT .)
    FOR             reduce using rule 3 (statement -> expression END_STMT .)
    OPEN_BRACKET    reduce using rule 3 (statement -> expression END_STMT .)
    INT             reduce using rule 3 (statement -> expression END_STMT .)
    FLOAT           reduce using rule 3 (statement -> expression END_STMT .)
    ID              reduce using rule 3 (statement -> expression END_STMT .)
    STRING_CONST    reduce using rule 3 (statement -> expression END_STMT .)
    TRUE            reduce using rule 3 (statement -> expression END_STMT .)
    FALSE           reduce using rule 3 (statement -> expression END_STMT .)
    OPEN_SQUARE     reduce using rule 3 (statement -> expression END_STMT .)
    $end            reduce using rule 3 (statement -> expression END_STMT .)
    OPEN_CURL       reduce using rule 3 (statement -> expression END_STMT .)
    CLOSE_CURL      reduce using rule 3 (statement -> expression END_STMT .)


state 29

    (10) statement -> expression ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 65
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 30

    (11) statement -> expression ADD_ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 66
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 31

    (12) statement -> expression MINUS_ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 67
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 32

    (13) statement -> expression DIVIDE_ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 68
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 33

    (14) statement -> expression MULT_ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 69
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 34

    (15) statement -> expression AND_ASSIGN . expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 70
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 35

    (30) expression -> expression MULTIPLY . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 71
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 36

    (31) expression -> expression DIVIDE . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 72
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 37

    (32) expression -> expression PLUS . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 73
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 38

    (33) expression -> expression MINUS . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 74
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 39

    (34) expression -> expression GTEQ . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 75
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 40

    (35) expression -> expression LTEQ . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 76
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 41

    (36) expression -> expression LESS_THAN . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 77
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 42

    (37) expression -> expression MORE_THAN . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 78
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 43

    (38) expression -> expression EQUAL_EQUAL . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 79
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 44

    (39) expression -> expression NOT_EQUAL . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 80
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 45

    (40) expression -> expression AND . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 81
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 46

    (41) expression -> expression OR . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 82
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 47

    (42) expression -> expression PERCENT . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 83
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 48

    (44) expression -> expression DOT . function_call
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET

    ID              shift and go to state 85

    function_call                  shift and go to state 84

state 49

    (45) expression -> expression OPEN_SQUARE . expression CLOSE_SQUARE
    (51) expression -> expression OPEN_SQUARE . expression COLON expression CLOSE_SQUARE
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 86
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 50

    (48) expression -> expression PLUS_PLUS .

    END_STMT        reduce using rule 48 (expression -> expression PLUS_PLUS .)
    ASSIGN          reduce using rule 48 (expression -> expression PLUS_PLUS .)
    ADD_ASSIGN      reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MINUS_ASSIGN    reduce using rule 48 (expression -> expression PLUS_PLUS .)
    DIVIDE_ASSIGN   reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MULT_ASSIGN     reduce using rule 48 (expression -> expression PLUS_PLUS .)
    AND_ASSIGN      reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MULTIPLY        reduce using rule 48 (expression -> expression PLUS_PLUS .)
    DIVIDE          reduce using rule 48 (expression -> expression PLUS_PLUS .)
    PLUS            reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MINUS           reduce using rule 48 (expression -> expression PLUS_PLUS .)
    GTEQ            reduce using rule 48 (expression -> expression PLUS_PLUS .)
    LTEQ            reduce using rule 48 (expression -> expression PLUS_PLUS .)
    LESS_THAN       reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MORE_THAN       reduce using rule 48 (expression -> expression PLUS_PLUS .)
    EQUAL_EQUAL     reduce using rule 48 (expression -> expression PLUS_PLUS .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression PLUS_PLUS .)
    AND             reduce using rule 48 (expression -> expression PLUS_PLUS .)
    OR              reduce using rule 48 (expression -> expression PLUS_PLUS .)
    PERCENT         reduce using rule 48 (expression -> expression PLUS_PLUS .)
    DOT             reduce using rule 48 (expression -> expression PLUS_PLUS .)
    OPEN_SQUARE     reduce using rule 48 (expression -> expression PLUS_PLUS .)
    PLUS_PLUS       reduce using rule 48 (expression -> expression PLUS_PLUS .)
    MINUS_MINUS     reduce using rule 48 (expression -> expression PLUS_PLUS .)
    OPEN_CURL       reduce using rule 48 (expression -> expression PLUS_PLUS .)
    CLOSE_BRACKET   reduce using rule 48 (expression -> expression PLUS_PLUS .)
    CLOSE_SQUARE    reduce using rule 48 (expression -> expression PLUS_PLUS .)
    COLON           reduce using rule 48 (expression -> expression PLUS_PLUS .)
    COMMA           reduce using rule 48 (expression -> expression PLUS_PLUS .)


state 51

    (49) expression -> expression MINUS_MINUS .

    END_STMT        reduce using rule 49 (expression -> expression MINUS_MINUS .)
    ASSIGN          reduce using rule 49 (expression -> expression MINUS_MINUS .)
    ADD_ASSIGN      reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MINUS_ASSIGN    reduce using rule 49 (expression -> expression MINUS_MINUS .)
    DIVIDE_ASSIGN   reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MULT_ASSIGN     reduce using rule 49 (expression -> expression MINUS_MINUS .)
    AND_ASSIGN      reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MULTIPLY        reduce using rule 49 (expression -> expression MINUS_MINUS .)
    DIVIDE          reduce using rule 49 (expression -> expression MINUS_MINUS .)
    PLUS            reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MINUS           reduce using rule 49 (expression -> expression MINUS_MINUS .)
    GTEQ            reduce using rule 49 (expression -> expression MINUS_MINUS .)
    LTEQ            reduce using rule 49 (expression -> expression MINUS_MINUS .)
    LESS_THAN       reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MORE_THAN       reduce using rule 49 (expression -> expression MINUS_MINUS .)
    EQUAL_EQUAL     reduce using rule 49 (expression -> expression MINUS_MINUS .)
    NOT_EQUAL       reduce using rule 49 (expression -> expression MINUS_MINUS .)
    AND             reduce using rule 49 (expression -> expression MINUS_MINUS .)
    OR              reduce using rule 49 (expression -> expression MINUS_MINUS .)
    PERCENT         reduce using rule 49 (expression -> expression MINUS_MINUS .)
    DOT             reduce using rule 49 (expression -> expression MINUS_MINUS .)
    OPEN_SQUARE     reduce using rule 49 (expression -> expression MINUS_MINUS .)
    PLUS_PLUS       reduce using rule 49 (expression -> expression MINUS_MINUS .)
    MINUS_MINUS     reduce using rule 49 (expression -> expression MINUS_MINUS .)
    OPEN_CURL       reduce using rule 49 (expression -> expression MINUS_MINUS .)
    CLOSE_BRACKET   reduce using rule 49 (expression -> expression MINUS_MINUS .)
    CLOSE_SQUARE    reduce using rule 49 (expression -> expression MINUS_MINUS .)
    COLON           reduce using rule 49 (expression -> expression MINUS_MINUS .)
    COMMA           reduce using rule 49 (expression -> expression MINUS_MINUS .)


state 52

    (4) statement -> return_state END_STMT .

    CONTINUE        reduce using rule 4 (statement -> return_state END_STMT .)
    PLUS_PLUS       reduce using rule 4 (statement -> return_state END_STMT .)
    MINUS_MINUS     reduce using rule 4 (statement -> return_state END_STMT .)
    MINUS           reduce using rule 4 (statement -> return_state END_STMT .)
    RETURN          reduce using rule 4 (statement -> return_state END_STMT .)
    IF              reduce using rule 4 (statement -> return_state END_STMT .)
    WHILE           reduce using rule 4 (statement -> return_state END_STMT .)
    FOR             reduce using rule 4 (statement -> return_state END_STMT .)
    OPEN_BRACKET    reduce using rule 4 (statement -> return_state END_STMT .)
    INT             reduce using rule 4 (statement -> return_state END_STMT .)
    FLOAT           reduce using rule 4 (statement -> return_state END_STMT .)
    ID              reduce using rule 4 (statement -> return_state END_STMT .)
    STRING_CONST    reduce using rule 4 (statement -> return_state END_STMT .)
    TRUE            reduce using rule 4 (statement -> return_state END_STMT .)
    FALSE           reduce using rule 4 (statement -> return_state END_STMT .)
    OPEN_SQUARE     reduce using rule 4 (statement -> return_state END_STMT .)
    $end            reduce using rule 4 (statement -> return_state END_STMT .)
    OPEN_CURL       reduce using rule 4 (statement -> return_state END_STMT .)
    CLOSE_CURL      reduce using rule 4 (statement -> return_state END_STMT .)


state 53

    (9) statement -> CONTINUE END_STMT .

    CONTINUE        reduce using rule 9 (statement -> CONTINUE END_STMT .)
    PLUS_PLUS       reduce using rule 9 (statement -> CONTINUE END_STMT .)
    MINUS_MINUS     reduce using rule 9 (statement -> CONTINUE END_STMT .)
    MINUS           reduce using rule 9 (statement -> CONTINUE END_STMT .)
    RETURN          reduce using rule 9 (statement -> CONTINUE END_STMT .)
    IF              reduce using rule 9 (statement -> CONTINUE END_STMT .)
    WHILE           reduce using rule 9 (statement -> CONTINUE END_STMT .)
    FOR             reduce using rule 9 (statement -> CONTINUE END_STMT .)
    OPEN_BRACKET    reduce using rule 9 (statement -> CONTINUE END_STMT .)
    INT             reduce using rule 9 (statement -> CONTINUE END_STMT .)
    FLOAT           reduce using rule 9 (statement -> CONTINUE END_STMT .)
    ID              reduce using rule 9 (statement -> CONTINUE END_STMT .)
    STRING_CONST    reduce using rule 9 (statement -> CONTINUE END_STMT .)
    TRUE            reduce using rule 9 (statement -> CONTINUE END_STMT .)
    FALSE           reduce using rule 9 (statement -> CONTINUE END_STMT .)
    OPEN_SQUARE     reduce using rule 9 (statement -> CONTINUE END_STMT .)
    $end            reduce using rule 9 (statement -> CONTINUE END_STMT .)
    OPEN_CURL       reduce using rule 9 (statement -> CONTINUE END_STMT .)
    CLOSE_CURL      reduce using rule 9 (statement -> CONTINUE END_STMT .)


state 54

    (50) expression -> MINUS expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 50 (expression -> MINUS expression .)
    ASSIGN          reduce using rule 50 (expression -> MINUS expression .)
    ADD_ASSIGN      reduce using rule 50 (expression -> MINUS expression .)
    MINUS_ASSIGN    reduce using rule 50 (expression -> MINUS expression .)
    DIVIDE_ASSIGN   reduce using rule 50 (expression -> MINUS expression .)
    MULT_ASSIGN     reduce using rule 50 (expression -> MINUS expression .)
    AND_ASSIGN      reduce using rule 50 (expression -> MINUS expression .)
    OPEN_CURL       reduce using rule 50 (expression -> MINUS expression .)
    CLOSE_BRACKET   reduce using rule 50 (expression -> MINUS expression .)
    CLOSE_SQUARE    reduce using rule 50 (expression -> MINUS expression .)
    COLON           reduce using rule 50 (expression -> MINUS expression .)
    COMMA           reduce using rule 50 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! GTEQ            [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! LTEQ            [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! LESS_THAN       [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! MORE_THAN       [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! AND             [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! OR              [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! PERCENT         [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! PLUS_PLUS       [ reduce using rule 50 (expression -> MINUS expression .) ]
  ! MINUS_MINUS     [ reduce using rule 50 (expression -> MINUS expression .) ]


state 55

    (61) empty_list -> OPEN_SQUARE CLOSE_SQUARE .

    END_STMT        reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    ASSIGN          reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    ADD_ASSIGN      reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MINUS_ASSIGN    reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    DIVIDE_ASSIGN   reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MULT_ASSIGN     reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    AND_ASSIGN      reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MULTIPLY        reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    DIVIDE          reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    PLUS            reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MINUS           reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    GTEQ            reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    LTEQ            reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    LESS_THAN       reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MORE_THAN       reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    EQUAL_EQUAL     reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    NOT_EQUAL       reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    AND             reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    OR              reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    PERCENT         reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    DOT             reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    OPEN_SQUARE     reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    PLUS_PLUS       reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    MINUS_MINUS     reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    OPEN_CURL       reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    CLOSE_BRACKET   reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    CLOSE_SQUARE    reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    COLON           reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)
    COMMA           reduce using rule 61 (empty_list -> OPEN_SQUARE CLOSE_SQUARE .)


state 56

    (46) expression -> PLUS_PLUS expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 46 (expression -> PLUS_PLUS expression .)
    ASSIGN          reduce using rule 46 (expression -> PLUS_PLUS expression .)
    ADD_ASSIGN      reduce using rule 46 (expression -> PLUS_PLUS expression .)
    MINUS_ASSIGN    reduce using rule 46 (expression -> PLUS_PLUS expression .)
    DIVIDE_ASSIGN   reduce using rule 46 (expression -> PLUS_PLUS expression .)
    MULT_ASSIGN     reduce using rule 46 (expression -> PLUS_PLUS expression .)
    AND_ASSIGN      reduce using rule 46 (expression -> PLUS_PLUS expression .)
    OPEN_CURL       reduce using rule 46 (expression -> PLUS_PLUS expression .)
    CLOSE_BRACKET   reduce using rule 46 (expression -> PLUS_PLUS expression .)
    CLOSE_SQUARE    reduce using rule 46 (expression -> PLUS_PLUS expression .)
    COLON           reduce using rule 46 (expression -> PLUS_PLUS expression .)
    COMMA           reduce using rule 46 (expression -> PLUS_PLUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! GTEQ            [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! LTEQ            [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! LESS_THAN       [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! MORE_THAN       [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! AND             [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! OR              [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! PERCENT         [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! PLUS_PLUS       [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]
  ! MINUS_MINUS     [ reduce using rule 46 (expression -> PLUS_PLUS expression .) ]


state 57

    (47) expression -> MINUS_MINUS expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 47 (expression -> MINUS_MINUS expression .)
    ASSIGN          reduce using rule 47 (expression -> MINUS_MINUS expression .)
    ADD_ASSIGN      reduce using rule 47 (expression -> MINUS_MINUS expression .)
    MINUS_ASSIGN    reduce using rule 47 (expression -> MINUS_MINUS expression .)
    DIVIDE_ASSIGN   reduce using rule 47 (expression -> MINUS_MINUS expression .)
    MULT_ASSIGN     reduce using rule 47 (expression -> MINUS_MINUS expression .)
    AND_ASSIGN      reduce using rule 47 (expression -> MINUS_MINUS expression .)
    OPEN_CURL       reduce using rule 47 (expression -> MINUS_MINUS expression .)
    CLOSE_BRACKET   reduce using rule 47 (expression -> MINUS_MINUS expression .)
    CLOSE_SQUARE    reduce using rule 47 (expression -> MINUS_MINUS expression .)
    COLON           reduce using rule 47 (expression -> MINUS_MINUS expression .)
    COMMA           reduce using rule 47 (expression -> MINUS_MINUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! GTEQ            [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! LTEQ            [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! LESS_THAN       [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! MORE_THAN       [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! AND             [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! OR              [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! PERCENT         [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! PLUS_PLUS       [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]
  ! MINUS_MINUS     [ reduce using rule 47 (expression -> MINUS_MINUS expression .) ]


state 58

    (16) return_state -> RETURN expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        reduce using rule 16 (return_state -> RETURN expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 59

    (20) if_state -> IF expression . block
    (21) if_else_state -> IF expression . block else_state
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51
    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 87

state 60

    (19) while_state -> WHILE expression . block
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51
    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 89

state 61

    (17) for_state -> FOR ID . IN expression block
    (55) value -> ID .
    (26) function_call -> ID . OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> ID . OPEN_BRACKET CLOSE_BRACKET

    IN              shift and go to state 90
    END_STMT        reduce using rule 55 (value -> ID .)
    ASSIGN          reduce using rule 55 (value -> ID .)
    ADD_ASSIGN      reduce using rule 55 (value -> ID .)
    MINUS_ASSIGN    reduce using rule 55 (value -> ID .)
    DIVIDE_ASSIGN   reduce using rule 55 (value -> ID .)
    MULT_ASSIGN     reduce using rule 55 (value -> ID .)
    AND_ASSIGN      reduce using rule 55 (value -> ID .)
    MULTIPLY        reduce using rule 55 (value -> ID .)
    DIVIDE          reduce using rule 55 (value -> ID .)
    PLUS            reduce using rule 55 (value -> ID .)
    MINUS           reduce using rule 55 (value -> ID .)
    GTEQ            reduce using rule 55 (value -> ID .)
    LTEQ            reduce using rule 55 (value -> ID .)
    LESS_THAN       reduce using rule 55 (value -> ID .)
    MORE_THAN       reduce using rule 55 (value -> ID .)
    EQUAL_EQUAL     reduce using rule 55 (value -> ID .)
    NOT_EQUAL       reduce using rule 55 (value -> ID .)
    AND             reduce using rule 55 (value -> ID .)
    OR              reduce using rule 55 (value -> ID .)
    PERCENT         reduce using rule 55 (value -> ID .)
    DOT             reduce using rule 55 (value -> ID .)
    OPEN_SQUARE     reduce using rule 55 (value -> ID .)
    PLUS_PLUS       reduce using rule 55 (value -> ID .)
    MINUS_MINUS     reduce using rule 55 (value -> ID .)
    OPEN_BRACKET    shift and go to state 63


state 62

    (18) for_state -> FOR statement . statement statement block
    (3) statement -> . expression END_STMT
    (4) statement -> . return_state END_STMT
    (5) statement -> . if_state
    (6) statement -> . if_else_state
    (7) statement -> . while_state
    (8) statement -> . for_state
    (9) statement -> . CONTINUE END_STMT
    (10) statement -> . expression ASSIGN expression END_STMT
    (11) statement -> . expression ADD_ASSIGN expression END_STMT
    (12) statement -> . expression MINUS_ASSIGN expression END_STMT
    (13) statement -> . expression DIVIDE_ASSIGN expression END_STMT
    (14) statement -> . expression MULT_ASSIGN expression END_STMT
    (15) statement -> . expression AND_ASSIGN expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (16) return_state -> . RETURN expression
    (20) if_state -> . IF expression block
    (21) if_else_state -> . IF expression block else_state
    (19) while_state -> . WHILE expression block
    (17) for_state -> . FOR ID IN expression block
    (18) for_state -> . FOR statement statement statement block
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    CONTINUE        shift and go to state 9
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    statement                      shift and go to state 91
    expression                     shift and go to state 3
    return_state                   shift and go to state 4
    if_state                       shift and go to state 5
    if_else_state                  shift and go to state 6
    while_state                    shift and go to state 7
    for_state                      shift and go to state 8
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 63

    (26) function_call -> ID OPEN_BRACKET . arg_list CLOSE_BRACKET
    (27) function_call -> ID OPEN_BRACKET . CLOSE_BRACKET
    (28) arg_list -> . expression COMMA arg_list
    (29) arg_list -> . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    CLOSE_BRACKET   shift and go to state 93
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    arg_list                       shift and go to state 92
    expression                     shift and go to state 94
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 64

    (52) value -> OPEN_BRACKET expression . CLOSE_BRACKET
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    CLOSE_BRACKET   shift and go to state 95
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 65

    (10) statement -> expression ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 96
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 66

    (11) statement -> expression ADD_ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 97
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 67

    (12) statement -> expression MINUS_ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 98
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 68

    (13) statement -> expression DIVIDE_ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 99
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 69

    (14) statement -> expression MULT_ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 100
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 70

    (15) statement -> expression AND_ASSIGN expression . END_STMT
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    END_STMT        shift and go to state 101
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 71

    (30) expression -> expression MULTIPLY expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 30 (expression -> expression MULTIPLY expression .)
    ASSIGN          reduce using rule 30 (expression -> expression MULTIPLY expression .)
    ADD_ASSIGN      reduce using rule 30 (expression -> expression MULTIPLY expression .)
    MINUS_ASSIGN    reduce using rule 30 (expression -> expression MULTIPLY expression .)
    DIVIDE_ASSIGN   reduce using rule 30 (expression -> expression MULTIPLY expression .)
    MULT_ASSIGN     reduce using rule 30 (expression -> expression MULTIPLY expression .)
    AND_ASSIGN      reduce using rule 30 (expression -> expression MULTIPLY expression .)
    OPEN_CURL       reduce using rule 30 (expression -> expression MULTIPLY expression .)
    CLOSE_BRACKET   reduce using rule 30 (expression -> expression MULTIPLY expression .)
    CLOSE_SQUARE    reduce using rule 30 (expression -> expression MULTIPLY expression .)
    COLON           reduce using rule 30 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 30 (expression -> expression MULTIPLY expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! GTEQ            [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! LTEQ            [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! LESS_THAN       [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! MORE_THAN       [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! NOT_EQUAL       [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! PERCENT         [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! PLUS_PLUS       [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]
  ! MINUS_MINUS     [ reduce using rule 30 (expression -> expression MULTIPLY expression .) ]


state 72

    (31) expression -> expression DIVIDE expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 31 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    ADD_ASSIGN      reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS_ASSIGN    reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE_ASSIGN   reduce using rule 31 (expression -> expression DIVIDE expression .)
    MULT_ASSIGN     reduce using rule 31 (expression -> expression DIVIDE expression .)
    AND_ASSIGN      reduce using rule 31 (expression -> expression DIVIDE expression .)
    OPEN_CURL       reduce using rule 31 (expression -> expression DIVIDE expression .)
    CLOSE_BRACKET   reduce using rule 31 (expression -> expression DIVIDE expression .)
    CLOSE_SQUARE    reduce using rule 31 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 31 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 31 (expression -> expression DIVIDE expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! GTEQ            [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! LTEQ            [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! LESS_THAN       [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! MORE_THAN       [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! NOT_EQUAL       [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! PERCENT         [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! PLUS_PLUS       [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]
  ! MINUS_MINUS     [ reduce using rule 31 (expression -> expression DIVIDE expression .) ]


state 73

    (32) expression -> expression PLUS expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 32 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 32 (expression -> expression PLUS expression .)
    ADD_ASSIGN      reduce using rule 32 (expression -> expression PLUS expression .)
    MINUS_ASSIGN    reduce using rule 32 (expression -> expression PLUS expression .)
    DIVIDE_ASSIGN   reduce using rule 32 (expression -> expression PLUS expression .)
    MULT_ASSIGN     reduce using rule 32 (expression -> expression PLUS expression .)
    AND_ASSIGN      reduce using rule 32 (expression -> expression PLUS expression .)
    OPEN_CURL       reduce using rule 32 (expression -> expression PLUS expression .)
    CLOSE_BRACKET   reduce using rule 32 (expression -> expression PLUS expression .)
    CLOSE_SQUARE    reduce using rule 32 (expression -> expression PLUS expression .)
    COLON           reduce using rule 32 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 32 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! GTEQ            [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! LTEQ            [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! LESS_THAN       [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! MORE_THAN       [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PERCENT         [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! PLUS_PLUS       [ reduce using rule 32 (expression -> expression PLUS expression .) ]
  ! MINUS_MINUS     [ reduce using rule 32 (expression -> expression PLUS expression .) ]


state 74

    (33) expression -> expression MINUS expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 33 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 33 (expression -> expression MINUS expression .)
    ADD_ASSIGN      reduce using rule 33 (expression -> expression MINUS expression .)
    MINUS_ASSIGN    reduce using rule 33 (expression -> expression MINUS expression .)
    DIVIDE_ASSIGN   reduce using rule 33 (expression -> expression MINUS expression .)
    MULT_ASSIGN     reduce using rule 33 (expression -> expression MINUS expression .)
    AND_ASSIGN      reduce using rule 33 (expression -> expression MINUS expression .)
    OPEN_CURL       reduce using rule 33 (expression -> expression MINUS expression .)
    CLOSE_BRACKET   reduce using rule 33 (expression -> expression MINUS expression .)
    CLOSE_SQUARE    reduce using rule 33 (expression -> expression MINUS expression .)
    COLON           reduce using rule 33 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 33 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! GTEQ            [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! LTEQ            [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! LESS_THAN       [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! MORE_THAN       [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! PERCENT         [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! PLUS_PLUS       [ reduce using rule 33 (expression -> expression MINUS expression .) ]
  ! MINUS_MINUS     [ reduce using rule 33 (expression -> expression MINUS expression .) ]


state 75

    (34) expression -> expression GTEQ expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 34 (expression -> expression GTEQ expression .)
    ASSIGN          reduce using rule 34 (expression -> expression GTEQ expression .)
    ADD_ASSIGN      reduce using rule 34 (expression -> expression GTEQ expression .)
    MINUS_ASSIGN    reduce using rule 34 (expression -> expression GTEQ expression .)
    DIVIDE_ASSIGN   reduce using rule 34 (expression -> expression GTEQ expression .)
    MULT_ASSIGN     reduce using rule 34 (expression -> expression GTEQ expression .)
    AND_ASSIGN      reduce using rule 34 (expression -> expression GTEQ expression .)
    OPEN_CURL       reduce using rule 34 (expression -> expression GTEQ expression .)
    CLOSE_BRACKET   reduce using rule 34 (expression -> expression GTEQ expression .)
    CLOSE_SQUARE    reduce using rule 34 (expression -> expression GTEQ expression .)
    COLON           reduce using rule 34 (expression -> expression GTEQ expression .)
    COMMA           reduce using rule 34 (expression -> expression GTEQ expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! GTEQ            [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! LTEQ            [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! LESS_THAN       [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! MORE_THAN       [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! OR              [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! PERCENT         [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! DOT             [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! PLUS_PLUS       [ reduce using rule 34 (expression -> expression GTEQ expression .) ]
  ! MINUS_MINUS     [ reduce using rule 34 (expression -> expression GTEQ expression .) ]


state 76

    (35) expression -> expression LTEQ expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 35 (expression -> expression LTEQ expression .)
    ASSIGN          reduce using rule 35 (expression -> expression LTEQ expression .)
    ADD_ASSIGN      reduce using rule 35 (expression -> expression LTEQ expression .)
    MINUS_ASSIGN    reduce using rule 35 (expression -> expression LTEQ expression .)
    DIVIDE_ASSIGN   reduce using rule 35 (expression -> expression LTEQ expression .)
    MULT_ASSIGN     reduce using rule 35 (expression -> expression LTEQ expression .)
    AND_ASSIGN      reduce using rule 35 (expression -> expression LTEQ expression .)
    OPEN_CURL       reduce using rule 35 (expression -> expression LTEQ expression .)
    CLOSE_BRACKET   reduce using rule 35 (expression -> expression LTEQ expression .)
    CLOSE_SQUARE    reduce using rule 35 (expression -> expression LTEQ expression .)
    COLON           reduce using rule 35 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 35 (expression -> expression LTEQ expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! GTEQ            [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! LTEQ            [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! LESS_THAN       [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! MORE_THAN       [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! AND             [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! OR              [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! PERCENT         [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! DOT             [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! PLUS_PLUS       [ reduce using rule 35 (expression -> expression LTEQ expression .) ]
  ! MINUS_MINUS     [ reduce using rule 35 (expression -> expression LTEQ expression .) ]


state 77

    (36) expression -> expression LESS_THAN expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 36 (expression -> expression LESS_THAN expression .)
    ASSIGN          reduce using rule 36 (expression -> expression LESS_THAN expression .)
    ADD_ASSIGN      reduce using rule 36 (expression -> expression LESS_THAN expression .)
    MINUS_ASSIGN    reduce using rule 36 (expression -> expression LESS_THAN expression .)
    DIVIDE_ASSIGN   reduce using rule 36 (expression -> expression LESS_THAN expression .)
    MULT_ASSIGN     reduce using rule 36 (expression -> expression LESS_THAN expression .)
    AND_ASSIGN      reduce using rule 36 (expression -> expression LESS_THAN expression .)
    OPEN_CURL       reduce using rule 36 (expression -> expression LESS_THAN expression .)
    CLOSE_BRACKET   reduce using rule 36 (expression -> expression LESS_THAN expression .)
    CLOSE_SQUARE    reduce using rule 36 (expression -> expression LESS_THAN expression .)
    COLON           reduce using rule 36 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 36 (expression -> expression LESS_THAN expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! GTEQ            [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! LTEQ            [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! MORE_THAN       [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! PERCENT         [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! DOT             [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! PLUS_PLUS       [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]
  ! MINUS_MINUS     [ reduce using rule 36 (expression -> expression LESS_THAN expression .) ]


state 78

    (37) expression -> expression MORE_THAN expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 37 (expression -> expression MORE_THAN expression .)
    ASSIGN          reduce using rule 37 (expression -> expression MORE_THAN expression .)
    ADD_ASSIGN      reduce using rule 37 (expression -> expression MORE_THAN expression .)
    MINUS_ASSIGN    reduce using rule 37 (expression -> expression MORE_THAN expression .)
    DIVIDE_ASSIGN   reduce using rule 37 (expression -> expression MORE_THAN expression .)
    MULT_ASSIGN     reduce using rule 37 (expression -> expression MORE_THAN expression .)
    AND_ASSIGN      reduce using rule 37 (expression -> expression MORE_THAN expression .)
    OPEN_CURL       reduce using rule 37 (expression -> expression MORE_THAN expression .)
    CLOSE_BRACKET   reduce using rule 37 (expression -> expression MORE_THAN expression .)
    CLOSE_SQUARE    reduce using rule 37 (expression -> expression MORE_THAN expression .)
    COLON           reduce using rule 37 (expression -> expression MORE_THAN expression .)
    COMMA           reduce using rule 37 (expression -> expression MORE_THAN expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! GTEQ            [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! LTEQ            [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! LESS_THAN       [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! MORE_THAN       [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! AND             [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! OR              [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! PERCENT         [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! DOT             [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! PLUS_PLUS       [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]
  ! MINUS_MINUS     [ reduce using rule 37 (expression -> expression MORE_THAN expression .) ]


state 79

    (38) expression -> expression EQUAL_EQUAL expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    ASSIGN          reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    ADD_ASSIGN      reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    MINUS_ASSIGN    reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    DIVIDE_ASSIGN   reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    MULT_ASSIGN     reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    AND_ASSIGN      reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    OPEN_CURL       reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    CLOSE_SQUARE    reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    COLON           reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! GTEQ            [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! LTEQ            [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MORE_THAN       [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! PERCENT         [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! DOT             [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! PLUS_PLUS       [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MINUS_MINUS     [ reduce using rule 38 (expression -> expression EQUAL_EQUAL expression .) ]


state 80

    (39) expression -> expression NOT_EQUAL expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    ASSIGN          reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    ADD_ASSIGN      reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    MINUS_ASSIGN    reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    DIVIDE_ASSIGN   reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    MULT_ASSIGN     reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    AND_ASSIGN      reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    OPEN_CURL       reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    CLOSE_BRACKET   reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    CLOSE_SQUARE    reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 39 (expression -> expression NOT_EQUAL expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! GTEQ            [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! LTEQ            [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! LESS_THAN       [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! MORE_THAN       [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! PERCENT         [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! DOT             [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS_PLUS       [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS_MINUS     [ reduce using rule 39 (expression -> expression NOT_EQUAL expression .) ]


state 81

    (40) expression -> expression AND expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 40 (expression -> expression AND expression .)
    ASSIGN          reduce using rule 40 (expression -> expression AND expression .)
    ADD_ASSIGN      reduce using rule 40 (expression -> expression AND expression .)
    MINUS_ASSIGN    reduce using rule 40 (expression -> expression AND expression .)
    DIVIDE_ASSIGN   reduce using rule 40 (expression -> expression AND expression .)
    MULT_ASSIGN     reduce using rule 40 (expression -> expression AND expression .)
    AND_ASSIGN      reduce using rule 40 (expression -> expression AND expression .)
    OPEN_CURL       reduce using rule 40 (expression -> expression AND expression .)
    CLOSE_BRACKET   reduce using rule 40 (expression -> expression AND expression .)
    CLOSE_SQUARE    reduce using rule 40 (expression -> expression AND expression .)
    COLON           reduce using rule 40 (expression -> expression AND expression .)
    COMMA           reduce using rule 40 (expression -> expression AND expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! LESS_THAN       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MORE_THAN       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PERCENT         [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PLUS_PLUS       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINUS_MINUS     [ reduce using rule 40 (expression -> expression AND expression .) ]


state 82

    (41) expression -> expression OR expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 41 (expression -> expression OR expression .)
    ASSIGN          reduce using rule 41 (expression -> expression OR expression .)
    ADD_ASSIGN      reduce using rule 41 (expression -> expression OR expression .)
    MINUS_ASSIGN    reduce using rule 41 (expression -> expression OR expression .)
    DIVIDE_ASSIGN   reduce using rule 41 (expression -> expression OR expression .)
    MULT_ASSIGN     reduce using rule 41 (expression -> expression OR expression .)
    AND_ASSIGN      reduce using rule 41 (expression -> expression OR expression .)
    OPEN_CURL       reduce using rule 41 (expression -> expression OR expression .)
    CLOSE_BRACKET   reduce using rule 41 (expression -> expression OR expression .)
    CLOSE_SQUARE    reduce using rule 41 (expression -> expression OR expression .)
    COLON           reduce using rule 41 (expression -> expression OR expression .)
    COMMA           reduce using rule 41 (expression -> expression OR expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! LESS_THAN       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MORE_THAN       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PERCENT         [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PLUS_PLUS       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINUS_MINUS     [ reduce using rule 41 (expression -> expression OR expression .) ]


state 83

    (42) expression -> expression PERCENT expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for MORE_THAN resolved as shift
  ! shift/reduce conflict for EQUAL_EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for OPEN_SQUARE resolved as shift
  ! shift/reduce conflict for PLUS_PLUS resolved as shift
  ! shift/reduce conflict for MINUS_MINUS resolved as shift
    END_STMT        reduce using rule 42 (expression -> expression PERCENT expression .)
    ASSIGN          reduce using rule 42 (expression -> expression PERCENT expression .)
    ADD_ASSIGN      reduce using rule 42 (expression -> expression PERCENT expression .)
    MINUS_ASSIGN    reduce using rule 42 (expression -> expression PERCENT expression .)
    DIVIDE_ASSIGN   reduce using rule 42 (expression -> expression PERCENT expression .)
    MULT_ASSIGN     reduce using rule 42 (expression -> expression PERCENT expression .)
    AND_ASSIGN      reduce using rule 42 (expression -> expression PERCENT expression .)
    OPEN_CURL       reduce using rule 42 (expression -> expression PERCENT expression .)
    CLOSE_BRACKET   reduce using rule 42 (expression -> expression PERCENT expression .)
    CLOSE_SQUARE    reduce using rule 42 (expression -> expression PERCENT expression .)
    COLON           reduce using rule 42 (expression -> expression PERCENT expression .)
    COMMA           reduce using rule 42 (expression -> expression PERCENT expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51

  ! MULTIPLY        [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! GTEQ            [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! LTEQ            [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! LESS_THAN       [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! MORE_THAN       [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! OR              [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! PERCENT         [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! OPEN_SQUARE     [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! PLUS_PLUS       [ reduce using rule 42 (expression -> expression PERCENT expression .) ]
  ! MINUS_MINUS     [ reduce using rule 42 (expression -> expression PERCENT expression .) ]


state 84

    (44) expression -> expression DOT function_call .

    END_STMT        reduce using rule 44 (expression -> expression DOT function_call .)
    ASSIGN          reduce using rule 44 (expression -> expression DOT function_call .)
    ADD_ASSIGN      reduce using rule 44 (expression -> expression DOT function_call .)
    MINUS_ASSIGN    reduce using rule 44 (expression -> expression DOT function_call .)
    DIVIDE_ASSIGN   reduce using rule 44 (expression -> expression DOT function_call .)
    MULT_ASSIGN     reduce using rule 44 (expression -> expression DOT function_call .)
    AND_ASSIGN      reduce using rule 44 (expression -> expression DOT function_call .)
    MULTIPLY        reduce using rule 44 (expression -> expression DOT function_call .)
    DIVIDE          reduce using rule 44 (expression -> expression DOT function_call .)
    PLUS            reduce using rule 44 (expression -> expression DOT function_call .)
    MINUS           reduce using rule 44 (expression -> expression DOT function_call .)
    GTEQ            reduce using rule 44 (expression -> expression DOT function_call .)
    LTEQ            reduce using rule 44 (expression -> expression DOT function_call .)
    LESS_THAN       reduce using rule 44 (expression -> expression DOT function_call .)
    MORE_THAN       reduce using rule 44 (expression -> expression DOT function_call .)
    EQUAL_EQUAL     reduce using rule 44 (expression -> expression DOT function_call .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression DOT function_call .)
    AND             reduce using rule 44 (expression -> expression DOT function_call .)
    OR              reduce using rule 44 (expression -> expression DOT function_call .)
    PERCENT         reduce using rule 44 (expression -> expression DOT function_call .)
    DOT             reduce using rule 44 (expression -> expression DOT function_call .)
    OPEN_SQUARE     reduce using rule 44 (expression -> expression DOT function_call .)
    PLUS_PLUS       reduce using rule 44 (expression -> expression DOT function_call .)
    MINUS_MINUS     reduce using rule 44 (expression -> expression DOT function_call .)
    OPEN_CURL       reduce using rule 44 (expression -> expression DOT function_call .)
    CLOSE_BRACKET   reduce using rule 44 (expression -> expression DOT function_call .)
    CLOSE_SQUARE    reduce using rule 44 (expression -> expression DOT function_call .)
    COLON           reduce using rule 44 (expression -> expression DOT function_call .)
    COMMA           reduce using rule 44 (expression -> expression DOT function_call .)


state 85

    (26) function_call -> ID . OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> ID . OPEN_BRACKET CLOSE_BRACKET

    OPEN_BRACKET    shift and go to state 63


state 86

    (45) expression -> expression OPEN_SQUARE expression . CLOSE_SQUARE
    (51) expression -> expression OPEN_SQUARE expression . COLON expression CLOSE_SQUARE
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    CLOSE_SQUARE    shift and go to state 102
    COLON           shift and go to state 103
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 87

    (20) if_state -> IF expression block .
    (21) if_else_state -> IF expression block . else_state
    (22) else_state -> . ELSE_IF expression block else_state
    (23) else_state -> . ELSE block
    (24) else_state -> . ELSE_IF expression block

    CONTINUE        reduce using rule 20 (if_state -> IF expression block .)
    PLUS_PLUS       reduce using rule 20 (if_state -> IF expression block .)
    MINUS_MINUS     reduce using rule 20 (if_state -> IF expression block .)
    MINUS           reduce using rule 20 (if_state -> IF expression block .)
    RETURN          reduce using rule 20 (if_state -> IF expression block .)
    IF              reduce using rule 20 (if_state -> IF expression block .)
    WHILE           reduce using rule 20 (if_state -> IF expression block .)
    FOR             reduce using rule 20 (if_state -> IF expression block .)
    OPEN_BRACKET    reduce using rule 20 (if_state -> IF expression block .)
    INT             reduce using rule 20 (if_state -> IF expression block .)
    FLOAT           reduce using rule 20 (if_state -> IF expression block .)
    ID              reduce using rule 20 (if_state -> IF expression block .)
    STRING_CONST    reduce using rule 20 (if_state -> IF expression block .)
    TRUE            reduce using rule 20 (if_state -> IF expression block .)
    FALSE           reduce using rule 20 (if_state -> IF expression block .)
    OPEN_SQUARE     reduce using rule 20 (if_state -> IF expression block .)
    $end            reduce using rule 20 (if_state -> IF expression block .)
    OPEN_CURL       reduce using rule 20 (if_state -> IF expression block .)
    CLOSE_CURL      reduce using rule 20 (if_state -> IF expression block .)
    ELSE_IF         shift and go to state 105
    ELSE            shift and go to state 106

    else_state                     shift and go to state 104

state 88

    (25) block -> OPEN_CURL . statements CLOSE_CURL
    (1) statements -> . statements statement
    (2) statements -> .

    CLOSE_CURL      reduce using rule 2 (statements -> .)
    CONTINUE        reduce using rule 2 (statements -> .)
    PLUS_PLUS       reduce using rule 2 (statements -> .)
    MINUS_MINUS     reduce using rule 2 (statements -> .)
    MINUS           reduce using rule 2 (statements -> .)
    RETURN          reduce using rule 2 (statements -> .)
    IF              reduce using rule 2 (statements -> .)
    WHILE           reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    OPEN_BRACKET    reduce using rule 2 (statements -> .)
    INT             reduce using rule 2 (statements -> .)
    FLOAT           reduce using rule 2 (statements -> .)
    ID              reduce using rule 2 (statements -> .)
    STRING_CONST    reduce using rule 2 (statements -> .)
    TRUE            reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    OPEN_SQUARE     reduce using rule 2 (statements -> .)

    statements                     shift and go to state 107

state 89

    (19) while_state -> WHILE expression block .

    CONTINUE        reduce using rule 19 (while_state -> WHILE expression block .)
    PLUS_PLUS       reduce using rule 19 (while_state -> WHILE expression block .)
    MINUS_MINUS     reduce using rule 19 (while_state -> WHILE expression block .)
    MINUS           reduce using rule 19 (while_state -> WHILE expression block .)
    RETURN          reduce using rule 19 (while_state -> WHILE expression block .)
    IF              reduce using rule 19 (while_state -> WHILE expression block .)
    WHILE           reduce using rule 19 (while_state -> WHILE expression block .)
    FOR             reduce using rule 19 (while_state -> WHILE expression block .)
    OPEN_BRACKET    reduce using rule 19 (while_state -> WHILE expression block .)
    INT             reduce using rule 19 (while_state -> WHILE expression block .)
    FLOAT           reduce using rule 19 (while_state -> WHILE expression block .)
    ID              reduce using rule 19 (while_state -> WHILE expression block .)
    STRING_CONST    reduce using rule 19 (while_state -> WHILE expression block .)
    TRUE            reduce using rule 19 (while_state -> WHILE expression block .)
    FALSE           reduce using rule 19 (while_state -> WHILE expression block .)
    OPEN_SQUARE     reduce using rule 19 (while_state -> WHILE expression block .)
    $end            reduce using rule 19 (while_state -> WHILE expression block .)
    OPEN_CURL       reduce using rule 19 (while_state -> WHILE expression block .)
    CLOSE_CURL      reduce using rule 19 (while_state -> WHILE expression block .)


state 90

    (17) for_state -> FOR ID IN . expression block
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 108
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 91

    (18) for_state -> FOR statement statement . statement block
    (3) statement -> . expression END_STMT
    (4) statement -> . return_state END_STMT
    (5) statement -> . if_state
    (6) statement -> . if_else_state
    (7) statement -> . while_state
    (8) statement -> . for_state
    (9) statement -> . CONTINUE END_STMT
    (10) statement -> . expression ASSIGN expression END_STMT
    (11) statement -> . expression ADD_ASSIGN expression END_STMT
    (12) statement -> . expression MINUS_ASSIGN expression END_STMT
    (13) statement -> . expression DIVIDE_ASSIGN expression END_STMT
    (14) statement -> . expression MULT_ASSIGN expression END_STMT
    (15) statement -> . expression AND_ASSIGN expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (16) return_state -> . RETURN expression
    (20) if_state -> . IF expression block
    (21) if_else_state -> . IF expression block else_state
    (19) while_state -> . WHILE expression block
    (17) for_state -> . FOR ID IN expression block
    (18) for_state -> . FOR statement statement statement block
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    CONTINUE        shift and go to state 9
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    statement                      shift and go to state 109
    expression                     shift and go to state 3
    return_state                   shift and go to state 4
    if_state                       shift and go to state 5
    if_else_state                  shift and go to state 6
    while_state                    shift and go to state 7
    for_state                      shift and go to state 8
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 92

    (26) function_call -> ID OPEN_BRACKET arg_list . CLOSE_BRACKET

    CLOSE_BRACKET   shift and go to state 110


state 93

    (27) function_call -> ID OPEN_BRACKET CLOSE_BRACKET .

    END_STMT        reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    ASSIGN          reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    ADD_ASSIGN      reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MINUS_ASSIGN    reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MULT_ASSIGN     reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    AND_ASSIGN      reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MULTIPLY        reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    DIVIDE          reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    PLUS            reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MINUS           reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    GTEQ            reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    LTEQ            reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MORE_THAN       reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    EQUAL_EQUAL     reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    AND             reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    OR              reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    PERCENT         reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    DOT             reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    OPEN_SQUARE     reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    PLUS_PLUS       reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    MINUS_MINUS     reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    OPEN_CURL       reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    CLOSE_SQUARE    reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    COLON           reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)
    COMMA           reduce using rule 27 (function_call -> ID OPEN_BRACKET CLOSE_BRACKET .)


state 94

    (28) arg_list -> expression . COMMA arg_list
    (29) arg_list -> expression .
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    COMMA           shift and go to state 111
    CLOSE_BRACKET   reduce using rule 29 (arg_list -> expression .)
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 95

    (52) value -> OPEN_BRACKET expression CLOSE_BRACKET .

    END_STMT        reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    ASSIGN          reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    ADD_ASSIGN      reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS_ASSIGN    reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MULT_ASSIGN     reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    AND_ASSIGN      reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MULTIPLY        reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    DIVIDE          reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    PLUS            reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS           reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    GTEQ            reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    LTEQ            reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MORE_THAN       reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    EQUAL_EQUAL     reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    AND             reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    OR              reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    PERCENT         reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    DOT             reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    OPEN_SQUARE     reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    PLUS_PLUS       reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    MINUS_MINUS     reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    OPEN_CURL       reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    CLOSE_SQUARE    reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    COLON           reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)
    COMMA           reduce using rule 52 (value -> OPEN_BRACKET expression CLOSE_BRACKET .)


state 96

    (10) statement -> expression ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    MINUS           reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    RETURN          reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    IF              reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    WHILE           reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    FOR             reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    INT             reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    ID              reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    TRUE            reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    FALSE           reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    $end            reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 10 (statement -> expression ASSIGN expression END_STMT .)


state 97

    (11) statement -> expression ADD_ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    MINUS           reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    RETURN          reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    IF              reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    WHILE           reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    FOR             reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    INT             reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    ID              reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    TRUE            reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    FALSE           reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    $end            reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 11 (statement -> expression ADD_ASSIGN expression END_STMT .)


state 98

    (12) statement -> expression MINUS_ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    MINUS           reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    RETURN          reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    IF              reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    WHILE           reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    FOR             reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    INT             reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    ID              reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    TRUE            reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    FALSE           reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    $end            reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 12 (statement -> expression MINUS_ASSIGN expression END_STMT .)


state 99

    (13) statement -> expression DIVIDE_ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    MINUS           reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    RETURN          reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    IF              reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    WHILE           reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    FOR             reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    INT             reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    ID              reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    TRUE            reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    FALSE           reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    $end            reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 13 (statement -> expression DIVIDE_ASSIGN expression END_STMT .)


state 100

    (14) statement -> expression MULT_ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    MINUS           reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    RETURN          reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    IF              reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    WHILE           reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    FOR             reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    INT             reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    ID              reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    TRUE            reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    FALSE           reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    $end            reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 14 (statement -> expression MULT_ASSIGN expression END_STMT .)


state 101

    (15) statement -> expression AND_ASSIGN expression END_STMT .

    CONTINUE        reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    PLUS_PLUS       reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    MINUS_MINUS     reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    MINUS           reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    RETURN          reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    IF              reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    WHILE           reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    FOR             reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    OPEN_BRACKET    reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    INT             reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    FLOAT           reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    ID              reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    STRING_CONST    reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    TRUE            reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    FALSE           reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    OPEN_SQUARE     reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    $end            reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    OPEN_CURL       reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)
    CLOSE_CURL      reduce using rule 15 (statement -> expression AND_ASSIGN expression END_STMT .)


state 102

    (45) expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .

    END_STMT        reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    ASSIGN          reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    ADD_ASSIGN      reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MINUS_ASSIGN    reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    DIVIDE_ASSIGN   reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MULT_ASSIGN     reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    AND_ASSIGN      reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MULTIPLY        reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    DIVIDE          reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    PLUS            reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MINUS           reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    GTEQ            reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    LTEQ            reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    LESS_THAN       reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MORE_THAN       reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    EQUAL_EQUAL     reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    AND             reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    OR              reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    PERCENT         reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    DOT             reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    OPEN_SQUARE     reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    PLUS_PLUS       reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    MINUS_MINUS     reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    OPEN_CURL       reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    CLOSE_BRACKET   reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    CLOSE_SQUARE    reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    COLON           reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)
    COMMA           reduce using rule 45 (expression -> expression OPEN_SQUARE expression CLOSE_SQUARE .)


state 103

    (51) expression -> expression OPEN_SQUARE expression COLON . expression CLOSE_SQUARE
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 112
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 104

    (21) if_else_state -> IF expression block else_state .

    CONTINUE        reduce using rule 21 (if_else_state -> IF expression block else_state .)
    PLUS_PLUS       reduce using rule 21 (if_else_state -> IF expression block else_state .)
    MINUS_MINUS     reduce using rule 21 (if_else_state -> IF expression block else_state .)
    MINUS           reduce using rule 21 (if_else_state -> IF expression block else_state .)
    RETURN          reduce using rule 21 (if_else_state -> IF expression block else_state .)
    IF              reduce using rule 21 (if_else_state -> IF expression block else_state .)
    WHILE           reduce using rule 21 (if_else_state -> IF expression block else_state .)
    FOR             reduce using rule 21 (if_else_state -> IF expression block else_state .)
    OPEN_BRACKET    reduce using rule 21 (if_else_state -> IF expression block else_state .)
    INT             reduce using rule 21 (if_else_state -> IF expression block else_state .)
    FLOAT           reduce using rule 21 (if_else_state -> IF expression block else_state .)
    ID              reduce using rule 21 (if_else_state -> IF expression block else_state .)
    STRING_CONST    reduce using rule 21 (if_else_state -> IF expression block else_state .)
    TRUE            reduce using rule 21 (if_else_state -> IF expression block else_state .)
    FALSE           reduce using rule 21 (if_else_state -> IF expression block else_state .)
    OPEN_SQUARE     reduce using rule 21 (if_else_state -> IF expression block else_state .)
    $end            reduce using rule 21 (if_else_state -> IF expression block else_state .)
    OPEN_CURL       reduce using rule 21 (if_else_state -> IF expression block else_state .)
    CLOSE_CURL      reduce using rule 21 (if_else_state -> IF expression block else_state .)


state 105

    (22) else_state -> ELSE_IF . expression block else_state
    (24) else_state -> ELSE_IF . expression block
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 113
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 106

    (23) else_state -> ELSE . block
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 114

state 107

    (25) block -> OPEN_CURL statements . CLOSE_CURL
    (1) statements -> statements . statement
    (3) statement -> . expression END_STMT
    (4) statement -> . return_state END_STMT
    (5) statement -> . if_state
    (6) statement -> . if_else_state
    (7) statement -> . while_state
    (8) statement -> . for_state
    (9) statement -> . CONTINUE END_STMT
    (10) statement -> . expression ASSIGN expression END_STMT
    (11) statement -> . expression ADD_ASSIGN expression END_STMT
    (12) statement -> . expression MINUS_ASSIGN expression END_STMT
    (13) statement -> . expression DIVIDE_ASSIGN expression END_STMT
    (14) statement -> . expression MULT_ASSIGN expression END_STMT
    (15) statement -> . expression AND_ASSIGN expression END_STMT
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (16) return_state -> . RETURN expression
    (20) if_state -> . IF expression block
    (21) if_else_state -> . IF expression block else_state
    (19) while_state -> . WHILE expression block
    (17) for_state -> . FOR ID IN expression block
    (18) for_state -> . FOR statement statement statement block
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    CLOSE_CURL      shift and go to state 115
    CONTINUE        shift and go to state 9
    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    RETURN          shift and go to state 16
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    statement                      shift and go to state 2
    expression                     shift and go to state 3
    return_state                   shift and go to state 4
    if_state                       shift and go to state 5
    if_else_state                  shift and go to state 6
    while_state                    shift and go to state 7
    for_state                      shift and go to state 8
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 108

    (17) for_state -> FOR ID IN expression . block
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51
    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 116

state 109

    (18) for_state -> FOR statement statement statement . block
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 117

state 110

    (26) function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .

    END_STMT        reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    ASSIGN          reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    ADD_ASSIGN      reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MINUS_ASSIGN    reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    DIVIDE_ASSIGN   reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MULT_ASSIGN     reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    AND_ASSIGN      reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MULTIPLY        reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    DIVIDE          reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    PLUS            reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MINUS           reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    GTEQ            reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    LTEQ            reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    LESS_THAN       reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MORE_THAN       reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    EQUAL_EQUAL     reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    NOT_EQUAL       reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    AND             reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    OR              reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    PERCENT         reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    DOT             reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    OPEN_SQUARE     reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    PLUS_PLUS       reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    MINUS_MINUS     reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    OPEN_CURL       reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    CLOSE_BRACKET   reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    CLOSE_SQUARE    reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    COLON           reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)
    COMMA           reduce using rule 26 (function_call -> ID OPEN_BRACKET arg_list CLOSE_BRACKET .)


state 111

    (28) arg_list -> expression COMMA . arg_list
    (28) arg_list -> . expression COMMA arg_list
    (29) arg_list -> . expression
    (30) expression -> . expression MULTIPLY expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression PLUS expression
    (33) expression -> . expression MINUS expression
    (34) expression -> . expression GTEQ expression
    (35) expression -> . expression LTEQ expression
    (36) expression -> . expression LESS_THAN expression
    (37) expression -> . expression MORE_THAN expression
    (38) expression -> . expression EQUAL_EQUAL expression
    (39) expression -> . expression NOT_EQUAL expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression PERCENT expression
    (43) expression -> . value
    (44) expression -> . expression DOT function_call
    (45) expression -> . expression OPEN_SQUARE expression CLOSE_SQUARE
    (46) expression -> . PLUS_PLUS expression
    (47) expression -> . MINUS_MINUS expression
    (48) expression -> . expression PLUS_PLUS
    (49) expression -> . expression MINUS_MINUS
    (50) expression -> . MINUS expression
    (51) expression -> . expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (52) value -> . OPEN_BRACKET expression CLOSE_BRACKET
    (53) value -> . INT
    (54) value -> . FLOAT
    (55) value -> . ID
    (56) value -> . function_call
    (57) value -> . STRING_CONST
    (58) value -> . TRUE
    (59) value -> . FALSE
    (60) value -> . empty_list
    (26) function_call -> . ID OPEN_BRACKET arg_list CLOSE_BRACKET
    (27) function_call -> . ID OPEN_BRACKET CLOSE_BRACKET
    (61) empty_list -> . OPEN_SQUARE CLOSE_SQUARE

    PLUS_PLUS       shift and go to state 14
    MINUS_MINUS     shift and go to state 15
    MINUS           shift and go to state 10
    OPEN_BRACKET    shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    ID              shift and go to state 20
    STRING_CONST    shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    OPEN_SQUARE     shift and go to state 13

    expression                     shift and go to state 94
    arg_list                       shift and go to state 118
    value                          shift and go to state 11
    function_call                  shift and go to state 12
    empty_list                     shift and go to state 27

state 112

    (51) expression -> expression OPEN_SQUARE expression COLON expression . CLOSE_SQUARE
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE

    CLOSE_SQUARE    shift and go to state 119
    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51


state 113

    (22) else_state -> ELSE_IF expression . block else_state
    (24) else_state -> ELSE_IF expression . block
    (30) expression -> expression . MULTIPLY expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . PLUS expression
    (33) expression -> expression . MINUS expression
    (34) expression -> expression . GTEQ expression
    (35) expression -> expression . LTEQ expression
    (36) expression -> expression . LESS_THAN expression
    (37) expression -> expression . MORE_THAN expression
    (38) expression -> expression . EQUAL_EQUAL expression
    (39) expression -> expression . NOT_EQUAL expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . PERCENT expression
    (44) expression -> expression . DOT function_call
    (45) expression -> expression . OPEN_SQUARE expression CLOSE_SQUARE
    (48) expression -> expression . PLUS_PLUS
    (49) expression -> expression . MINUS_MINUS
    (51) expression -> expression . OPEN_SQUARE expression COLON expression CLOSE_SQUARE
    (25) block -> . OPEN_CURL statements CLOSE_CURL

    MULTIPLY        shift and go to state 35
    DIVIDE          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTEQ            shift and go to state 39
    LTEQ            shift and go to state 40
    LESS_THAN       shift and go to state 41
    MORE_THAN       shift and go to state 42
    EQUAL_EQUAL     shift and go to state 43
    NOT_EQUAL       shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46
    PERCENT         shift and go to state 47
    DOT             shift and go to state 48
    OPEN_SQUARE     shift and go to state 49
    PLUS_PLUS       shift and go to state 50
    MINUS_MINUS     shift and go to state 51
    OPEN_CURL       shift and go to state 88

    block                          shift and go to state 120

state 114

    (23) else_state -> ELSE block .

    CONTINUE        reduce using rule 23 (else_state -> ELSE block .)
    PLUS_PLUS       reduce using rule 23 (else_state -> ELSE block .)
    MINUS_MINUS     reduce using rule 23 (else_state -> ELSE block .)
    MINUS           reduce using rule 23 (else_state -> ELSE block .)
    RETURN          reduce using rule 23 (else_state -> ELSE block .)
    IF              reduce using rule 23 (else_state -> ELSE block .)
    WHILE           reduce using rule 23 (else_state -> ELSE block .)
    FOR             reduce using rule 23 (else_state -> ELSE block .)
    OPEN_BRACKET    reduce using rule 23 (else_state -> ELSE block .)
    INT             reduce using rule 23 (else_state -> ELSE block .)
    FLOAT           reduce using rule 23 (else_state -> ELSE block .)
    ID              reduce using rule 23 (else_state -> ELSE block .)
    STRING_CONST    reduce using rule 23 (else_state -> ELSE block .)
    TRUE            reduce using rule 23 (else_state -> ELSE block .)
    FALSE           reduce using rule 23 (else_state -> ELSE block .)
    OPEN_SQUARE     reduce using rule 23 (else_state -> ELSE block .)
    $end            reduce using rule 23 (else_state -> ELSE block .)
    OPEN_CURL       reduce using rule 23 (else_state -> ELSE block .)
    CLOSE_CURL      reduce using rule 23 (else_state -> ELSE block .)


state 115

    (25) block -> OPEN_CURL statements CLOSE_CURL .

    ELSE_IF         reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    ELSE            reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    CONTINUE        reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    PLUS_PLUS       reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    MINUS_MINUS     reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    MINUS           reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    RETURN          reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    IF              reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    WHILE           reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    FOR             reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    OPEN_BRACKET    reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    INT             reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    FLOAT           reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    ID              reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    STRING_CONST    reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    TRUE            reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    FALSE           reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    OPEN_SQUARE     reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    $end            reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    OPEN_CURL       reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)
    CLOSE_CURL      reduce using rule 25 (block -> OPEN_CURL statements CLOSE_CURL .)


state 116

    (17) for_state -> FOR ID IN expression block .

    CONTINUE        reduce using rule 17 (for_state -> FOR ID IN expression block .)
    PLUS_PLUS       reduce using rule 17 (for_state -> FOR ID IN expression block .)
    MINUS_MINUS     reduce using rule 17 (for_state -> FOR ID IN expression block .)
    MINUS           reduce using rule 17 (for_state -> FOR ID IN expression block .)
    RETURN          reduce using rule 17 (for_state -> FOR ID IN expression block .)
    IF              reduce using rule 17 (for_state -> FOR ID IN expression block .)
    WHILE           reduce using rule 17 (for_state -> FOR ID IN expression block .)
    FOR             reduce using rule 17 (for_state -> FOR ID IN expression block .)
    OPEN_BRACKET    reduce using rule 17 (for_state -> FOR ID IN expression block .)
    INT             reduce using rule 17 (for_state -> FOR ID IN expression block .)
    FLOAT           reduce using rule 17 (for_state -> FOR ID IN expression block .)
    ID              reduce using rule 17 (for_state -> FOR ID IN expression block .)
    STRING_CONST    reduce using rule 17 (for_state -> FOR ID IN expression block .)
    TRUE            reduce using rule 17 (for_state -> FOR ID IN expression block .)
    FALSE           reduce using rule 17 (for_state -> FOR ID IN expression block .)
    OPEN_SQUARE     reduce using rule 17 (for_state -> FOR ID IN expression block .)
    $end            reduce using rule 17 (for_state -> FOR ID IN expression block .)
    OPEN_CURL       reduce using rule 17 (for_state -> FOR ID IN expression block .)
    CLOSE_CURL      reduce using rule 17 (for_state -> FOR ID IN expression block .)


state 117

    (18) for_state -> FOR statement statement statement block .

    CONTINUE        reduce using rule 18 (for_state -> FOR statement statement statement block .)
    PLUS_PLUS       reduce using rule 18 (for_state -> FOR statement statement statement block .)
    MINUS_MINUS     reduce using rule 18 (for_state -> FOR statement statement statement block .)
    MINUS           reduce using rule 18 (for_state -> FOR statement statement statement block .)
    RETURN          reduce using rule 18 (for_state -> FOR statement statement statement block .)
    IF              reduce using rule 18 (for_state -> FOR statement statement statement block .)
    WHILE           reduce using rule 18 (for_state -> FOR statement statement statement block .)
    FOR             reduce using rule 18 (for_state -> FOR statement statement statement block .)
    OPEN_BRACKET    reduce using rule 18 (for_state -> FOR statement statement statement block .)
    INT             reduce using rule 18 (for_state -> FOR statement statement statement block .)
    FLOAT           reduce using rule 18 (for_state -> FOR statement statement statement block .)
    ID              reduce using rule 18 (for_state -> FOR statement statement statement block .)
    STRING_CONST    reduce using rule 18 (for_state -> FOR statement statement statement block .)
    TRUE            reduce using rule 18 (for_state -> FOR statement statement statement block .)
    FALSE           reduce using rule 18 (for_state -> FOR statement statement statement block .)
    OPEN_SQUARE     reduce using rule 18 (for_state -> FOR statement statement statement block .)
    $end            reduce using rule 18 (for_state -> FOR statement statement statement block .)
    OPEN_CURL       reduce using rule 18 (for_state -> FOR statement statement statement block .)
    CLOSE_CURL      reduce using rule 18 (for_state -> FOR statement statement statement block .)


state 118

    (28) arg_list -> expression COMMA arg_list .

    CLOSE_BRACKET   reduce using rule 28 (arg_list -> expression COMMA arg_list .)


state 119

    (51) expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .

    END_STMT        reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    ASSIGN          reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    ADD_ASSIGN      reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MINUS_ASSIGN    reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    DIVIDE_ASSIGN   reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MULT_ASSIGN     reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    AND_ASSIGN      reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MULTIPLY        reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    DIVIDE          reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    PLUS            reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MINUS           reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    GTEQ            reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    LTEQ            reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    LESS_THAN       reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MORE_THAN       reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    EQUAL_EQUAL     reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    NOT_EQUAL       reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    AND             reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    OR              reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    PERCENT         reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    DOT             reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    OPEN_SQUARE     reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    PLUS_PLUS       reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    MINUS_MINUS     reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    OPEN_CURL       reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    CLOSE_BRACKET   reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    CLOSE_SQUARE    reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    COLON           reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)
    COMMA           reduce using rule 51 (expression -> expression OPEN_SQUARE expression COLON expression CLOSE_SQUARE .)


state 120

    (22) else_state -> ELSE_IF expression block . else_state
    (24) else_state -> ELSE_IF expression block .
    (22) else_state -> . ELSE_IF expression block else_state
    (23) else_state -> . ELSE block
    (24) else_state -> . ELSE_IF expression block

    CONTINUE        reduce using rule 24 (else_state -> ELSE_IF expression block .)
    PLUS_PLUS       reduce using rule 24 (else_state -> ELSE_IF expression block .)
    MINUS_MINUS     reduce using rule 24 (else_state -> ELSE_IF expression block .)
    MINUS           reduce using rule 24 (else_state -> ELSE_IF expression block .)
    RETURN          reduce using rule 24 (else_state -> ELSE_IF expression block .)
    IF              reduce using rule 24 (else_state -> ELSE_IF expression block .)
    WHILE           reduce using rule 24 (else_state -> ELSE_IF expression block .)
    FOR             reduce using rule 24 (else_state -> ELSE_IF expression block .)
    OPEN_BRACKET    reduce using rule 24 (else_state -> ELSE_IF expression block .)
    INT             reduce using rule 24 (else_state -> ELSE_IF expression block .)
    FLOAT           reduce using rule 24 (else_state -> ELSE_IF expression block .)
    ID              reduce using rule 24 (else_state -> ELSE_IF expression block .)
    STRING_CONST    reduce using rule 24 (else_state -> ELSE_IF expression block .)
    TRUE            reduce using rule 24 (else_state -> ELSE_IF expression block .)
    FALSE           reduce using rule 24 (else_state -> ELSE_IF expression block .)
    OPEN_SQUARE     reduce using rule 24 (else_state -> ELSE_IF expression block .)
    $end            reduce using rule 24 (else_state -> ELSE_IF expression block .)
    OPEN_CURL       reduce using rule 24 (else_state -> ELSE_IF expression block .)
    CLOSE_CURL      reduce using rule 24 (else_state -> ELSE_IF expression block .)
    ELSE_IF         shift and go to state 105
    ELSE            shift and go to state 106

    else_state                     shift and go to state 121

state 121

    (22) else_state -> ELSE_IF expression block else_state .

    CONTINUE        reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    PLUS_PLUS       reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    MINUS_MINUS     reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    MINUS           reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    RETURN          reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    IF              reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    WHILE           reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    FOR             reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    OPEN_BRACKET    reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    INT             reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    FLOAT           reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    ID              reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    STRING_CONST    reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    TRUE            reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    FALSE           reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    OPEN_SQUARE     reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    $end            reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    OPEN_CURL       reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)
    CLOSE_CURL      reduce using rule 22 (else_state -> ELSE_IF expression block else_state .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 54 resolved as shift
WARNING: shift/reduce conflict for DOT in state 54 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 56 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 56 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for AND in state 56 resolved as shift
WARNING: shift/reduce conflict for OR in state 56 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 56 resolved as shift
WARNING: shift/reduce conflict for DOT in state 56 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 57 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 57 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 57 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for AND in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 57 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 57 resolved as shift
WARNING: shift/reduce conflict for DOT in state 57 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 71 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOT in state 71 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 72 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOT in state 72 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 73 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOT in state 73 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 74 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOT in state 74 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 75 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 75 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOT in state 75 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 76 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOT in state 76 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 77 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 77 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOT in state 77 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 78 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOT in state 78 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 79 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 79 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOT in state 79 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 80 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 80 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOT in state 80 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 81 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 81 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOT in state 81 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOT in state 82 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 83 resolved as shift
WARNING: shift/reduce conflict for MORE_THAN in state 83 resolved as shift
WARNING: shift/reduce conflict for EQUAL_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for OR in state 83 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOT in state 83 resolved as shift
WARNING: shift/reduce conflict for OPEN_SQUARE in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS_PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS_MINUS in state 83 resolved as shift
